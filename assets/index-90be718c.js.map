{"version":3,"file":"index-90be718c.js","sources":["../../node_modules/.pnpm/@vue+shared@3.2.47/node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/.pnpm/@vue+reactivity@3.2.47/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../../node_modules/.pnpm/@vue+runtime-core@3.2.47/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../../node_modules/.pnpm/@vue+runtime-dom@3.2.47/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/helpers.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/anchor.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/box.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/animation.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/console.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/color/transformSRGB.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/color/transformCIELAB.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/colorUtils.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/getCurrentInstance.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/injectSelf.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/propsFactory.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/toggleScope.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/defineComponent.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/createSimpleFunctional.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/dom.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/getScrollParent.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/globals.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/isFixedPosition.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/useRender.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/defaults.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/display.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/iconsets/mdi.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/icons.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/proxiedModel.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/locale/en.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/locale/adapters/vuetify.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/locale/index.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/locale.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/util/color/APCA.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/theme.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/resizeObserver.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/layout.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/framework.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/iconsets/mdi-svg.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VApp/VApp.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VDefaultsProvider/VDefaultsProvider.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/transitions/createTransition.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/transitions/expand-transition.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/transitions/dialog-transition.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/transitions/index.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/dimensions.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VResponsive/VResponsive.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/directives/intersect/index.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/transition.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VImg/VImg.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/tag.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VToolbar/VToolbarTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/border.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/elevation.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/rounded.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/color.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VToolbar/VToolbar.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/ssrBoot.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAppBar/VAppBar.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/density.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/variant.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VBtnGroup/VBtnGroup.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/group.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VBtnToggle/VBtnToggle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/size.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VIcon/VIcon.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/intersectionObserver.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VProgressCircular/VProgressCircular.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/directives/ripple/index.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/location.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VProgressLinear/VProgressLinear.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/loader.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/position.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/router.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/selectLink.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VBtn/VBtn.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAppBar/VAppBarNavIcon.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAppBar/VAppBarTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAlert/VAlertTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAlert/VAlert.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VInput/InputIcon.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VLabel/VLabel.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VField/VFieldLabel.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/focus.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VField/VField.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VMessages/VMessages.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/form.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/validation.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VInput/VInput.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCounter/VCounter.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/forwardRefs.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VTextField/VTextField.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSelectionControlGroup/VSelectionControlGroup.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSelectionControl/VSelectionControl.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCheckbox/VCheckboxBtn.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCheckbox/VCheckbox.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAvatar/VAvatar.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VChip/VChip.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VDivider/VDivider.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/list.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/nested/openStrategies.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/nested/selectStrategies.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/nested/nested.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListGroup.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListItemSubtitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListItemTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListItem.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListSubheader.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListChildren.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/items.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VList.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VList/VListItemAction.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/delay.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VMenu/shared.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/useActivator.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/lazy.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/util/point.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/locationStrategies.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/requestNewFrame.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/scrollStrategies.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/hydration.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/scopeId.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/stack.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/teleport.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/directives/click-outside/index.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VOverlay/VOverlay.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VMenu/VMenu.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSelect/VSelect.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/filter.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VBadge/VBadge.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCardActions.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCardSubtitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCardTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCardItem.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCardText.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VCard/VCard.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSlider/slider.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSlider/VSliderThumb.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSlider/VSliderTrack.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSlider/VSlider.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSheet/VSheet.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VDialog/VDialog.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelTitle.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelText.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VGrid/VContainer.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VGrid/VCol.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VGrid/VRow.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VMain/VMain.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VNavigationDrawer/sticky.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/touch.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VNavigationDrawer/touch.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VNavigationDrawer/VNavigationDrawer.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/composables/refs.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VPagination/VPagination.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VRadio/VRadio.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VRadioGroup/VRadioGroup.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VSwitch/VSwitch.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VTextarea/VTextarea.mjs","../../node_modules/.pnpm/vuetify@3.1.7_vue@3.2.47/node_modules/vuetify/lib/components/VTooltip/VTooltip.mjs","../../site/data/types/constants.ts","../../site/src/scripts/format.ts","../../site/src/components/summary-panel/summary-total-item.vue","../../node_modules/.pnpm/@vueuse+shared@9.13.0_vue@3.2.47/node_modules/@vueuse/shared/index.mjs","../../node_modules/.pnpm/@vueuse+core@9.13.0_vue@3.2.47/node_modules/@vueuse/core/index.mjs","../../site/src/scripts/types.ts","../../site/src/scripts/settings.ts","../../site/src/scripts/debug.ts","../../site/src/scripts/util.ts","../../node_modules/.pnpm/pako@2.1.0/node_modules/pako/dist/pako.esm.mjs","../../node_modules/.pnpm/js-base64@3.7.5/node_modules/js-base64/base64.mjs","../../site/src/scripts/data/game-data-parser.ts","../../site/src/scripts/data/game-data-holder.ts","../../site/src/scripts/load-script-css.ts","../../site/src/scripts/data/index.ts","../../site/src/components/icon-component.vue","../../site/src/scripts/filter.ts","../../site/src/components/summary-panel/summary-item.vue","../../site/src/scripts/geometry.ts","../../site/src/scripts/model/key-store.ts","../../site/src/scripts/model/item.ts","../../site/src/scripts/model/recipe-io.ts","../../site/src/scripts/model/recipe.ts","../../site/src/scripts/model/blueprint-item.ts","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/constant.js","../../node_modules/.pnpm/d3-path@3.1.0/node_modules/d3-path/src/path.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/path.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/array.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/linear.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/point.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/line.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/bump.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/link.js","../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/basis.js","../../site/src/scripts/model/link-shape.ts","../../site/src/scripts/model/logistic.ts","../../site/src/scripts/model/link.ts","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/Solution.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/MilpSolution.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/Tableau.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/simplex.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/expressions.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/cuttingStrategies.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/dynamicModification.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/log.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/backup.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/branchingStrategies.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Tableau/integerProperties.js","../../node_modules/.pnpm/@ellbur+javascript-lp-solver@0.4.26/node_modules/@ellbur/javascript-lp-solver/src/Model.js","../../site/src/scripts/graph/graph-solver.ts","../../site/src/scripts/graph/graph-walker.ts","../../site/src/scripts/graph/link-solver.ts","../../site/src/scripts/graph/resolve-connections.ts","../../site/src/scripts/graph/graph-auto-layout-dagre.ts","../../site/src/scripts/graph/graph-auto-layout-elk.ts","../../site/src/scripts/graph/graph-auto-layout.ts","../../site/src/scripts/graph/index.ts","../../site/src/scripts/model/blueprint.ts","../../site/src/scripts/model/normalize-item-positions.ts","../../site/src/scripts/model/summary.ts","../../site/src/scripts/model/store.ts","../../site/src/components/summary-panel/summary-panel.vue","../../site/src/components/optimized-tooltip.vue","../../site/src/components/main-panel/blueprint-single-item-status.vue","../../site/src/components/main-panel/blueprint-single-factory.vue","../../site/src/composables/drag-helpers/commons.ts","../../site/src/composables/analytics.ts","../../site/src/composables/error-handler.ts","../../site/src/composables/link-api.ts","../../site/src/scripts/model/serializer.ts","../../site/src/scripts/error-collector.ts","../../site/src/composables/load-blueprint.ts","../../site/src/composables/number-input.ts","../../site/src/composables/use-event-hook.ts","../../site/src/composables/drag-helpers/drag-and-drop.ts","../../site/src/composables/drag-helpers/shared-drag-and-drop.ts","../../site/src/composables/drag-helpers/drag-and-scroll.ts","../../site/src/composables/drag-helpers/overflow-scroll.ts","../../site/src/composables/drag-helpers/point-and-click.ts","../../site/src/composables/drag-helpers/blueprint-surface.ts","../../site/src/components/main-panel/blueprint-single-io.vue","../../site/src/components/tooltip-button.vue","../../site/src/components/input-number.vue","../../site/src/components/main-panel/item-menu-button.vue","../../site/src/components/main-panel/blueprint-single-item.vue","../../site/src/components/main-panel/logistic-panel.vue","../../site/src/components/main-panel/link-menu.vue","../../site/src/components/main-panel/blueprint-link-connector.vue","../../site/src/components/main-panel/blueprint-link.vue","../../site/src/components/main-panel/blueprint-links.vue","../../site/src/components/main-panel/link-draggable.vue","../../site/src/components/main-panel/recipes-menu.vue","../../site/src/components/main-panel/blueprint-panel.vue","../../site/src/components/left-toolbox/icon-list-filter.vue","../../site/src/components/left-toolbox/icon-list-panel.vue","../../site/src/assets/logo.png","../../site/src/components/about-dialog.vue","../../site/src/components/help-dialog.vue","../../site/src/components/settings-dialog.vue","../../site/src/components/main-toolbar/apply-count-dialog.vue","../../site/src/components/main-toolbar/graph-layout/graph-layout-dialog.vue","../../site/src/components/main-toolbar/main-toolbar-menu.vue","../../site/src/components/main-toolbar/button-scale.vue","../../site/src/components/main-toolbar/generate-link-dialog.vue","../../site/src/components/main-toolbar/button-generate-link.vue","../../site/src/components/main-toolbar/save-share-dialog.vue","../../site/src/components/main-toolbar/button-save-share.vue","../../site/src/components/main-toolbar/load-share-dialog.vue","../../site/src/components/main-toolbar/button-load-share.vue","../../site/src/components/main-toolbar/main-toolbar.vue","../../site/src/components/left-toolbox/icon-draggable.vue","../../site/src/components/main-window.vue","../../site/src/components/game-data-loader.vue","../../site/src/components/error-dialog.vue","../../site/src/app.vue","../../site/src/main.ts"],"sourcesContent":["/**\n * Make a map and return a function for checking if a key\n * is in that map.\n * IMPORTANT: all calls of this function must be prefixed with\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n * So that rollup can tree-shake them if necessary.\n */\nfunction makeMap(str, expectsLowerCase) {\n    const map = Object.create(null);\n    const list = str.split(',');\n    for (let i = 0; i < list.length; i++) {\n        map[list[i]] = true;\n    }\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n}\n\n/**\n * dev only flag -> name mapping\n */\nconst PatchFlagNames = {\n    [1 /* PatchFlags.TEXT */]: `TEXT`,\n    [2 /* PatchFlags.CLASS */]: `CLASS`,\n    [4 /* PatchFlags.STYLE */]: `STYLE`,\n    [8 /* PatchFlags.PROPS */]: `PROPS`,\n    [16 /* PatchFlags.FULL_PROPS */]: `FULL_PROPS`,\n    [32 /* PatchFlags.HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\n    [64 /* PatchFlags.STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\n    [128 /* PatchFlags.KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\n    [256 /* PatchFlags.UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\n    [512 /* PatchFlags.NEED_PATCH */]: `NEED_PATCH`,\n    [1024 /* PatchFlags.DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\n    [2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\n    [-1 /* PatchFlags.HOISTED */]: `HOISTED`,\n    [-2 /* PatchFlags.BAIL */]: `BAIL`\n};\n\n/**\n * Dev only\n */\nconst slotFlagsText = {\n    [1 /* SlotFlags.STABLE */]: 'STABLE',\n    [2 /* SlotFlags.DYNAMIC */]: 'DYNAMIC',\n    [3 /* SlotFlags.FORWARDED */]: 'FORWARDED'\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    // Split the content into individual lines but capture the newline sequence\n    // that separated each line. This is important because the actual sequence is\n    // needed to properly take into account the full line length for offset\n    // comparison\n    let lines = source.split(/(\\r?\\n)/);\n    // Separate the lines and newline sequences into separate arrays for easier referencing\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n    lines = lines.filter((_, idx) => idx % 2 === 0);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count +=\n            lines[i].length +\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\n        if (count >= start) {\n            for (let j = i - range; j <= i + range || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - (lineLength + newLineSeqLength));\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + newLineSeqLength;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\n\nfunction normalizeStyle(value) {\n    if (isArray(value)) {\n        const res = {};\n        for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const normalized = isString(item)\n                ? parseStringStyle(item)\n                : normalizeStyle(item);\n            if (normalized) {\n                for (const key in normalized) {\n                    res[key] = normalized[key];\n                }\n            }\n        }\n        return res;\n    }\n    else if (isString(value)) {\n        return value;\n    }\n    else if (isObject(value)) {\n        return value;\n    }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*.*?\\*\\//gs;\nfunction parseStringStyle(cssText) {\n    const ret = {};\n    cssText\n        .replace(styleCommentRE, '')\n        .split(listDelimiterRE)\n        .forEach(item => {\n        if (item) {\n            const tmp = item.split(propertyDelimiterRE);\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n        }\n    });\n    return ret;\n}\nfunction stringifyStyle(styles) {\n    let ret = '';\n    if (!styles || isString(styles)) {\n        return ret;\n    }\n    for (const key in styles) {\n        const value = styles[key];\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n        if (isString(value) || typeof value === 'number') {\n            // only render valid values\n            ret += `${normalizedKey}:${value};`;\n        }\n    }\n    return ret;\n}\nfunction normalizeClass(value) {\n    let res = '';\n    if (isString(value)) {\n        res = value;\n    }\n    else if (isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            const normalized = normalizeClass(value[i]);\n            if (normalized) {\n                res += normalized + ' ';\n            }\n        }\n    }\n    else if (isObject(value)) {\n        for (const name in value) {\n            if (value[name]) {\n                res += name + ' ';\n            }\n        }\n    }\n    return res.trim();\n}\nfunction normalizeProps(props) {\n    if (!props)\n        return null;\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n        props.class = normalizeClass(klass);\n    }\n    if (style) {\n        props.style = normalizeStyle(style);\n    }\n    return props;\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\n    'header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\n    'option,output,progress,select,textarea,details,dialog,menu,' +\n    'summary,template,blockquote,iframe,tfoot';\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\n    'feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\n    'text,textPath,title,tspan,unknown,use,view';\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\n/**\n * On the client we only need to offer special cases for boolean attributes that\n * have different names from their corresponding dom properties:\n * - itemscope -> N/A\n * - allowfullscreen -> allowFullscreen\n * - formnovalidate -> formNoValidate\n * - ismap -> isMap\n * - nomodule -> noModule\n * - novalidate -> noValidate\n * - readonly -> readOnly\n */\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\n/**\n * The full list is needed during SSR to produce the correct initial markup.\n */\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\n    `loop,open,required,reversed,scoped,seamless,` +\n    `checked,muted,multiple,selected`);\n/**\n * Boolean attributes should be included if the value is truthy or ''.\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\n */\nfunction includeBooleanAttr(value) {\n    return !!value || value === '';\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n    if (attrValidationCache.hasOwnProperty(name)) {\n        return attrValidationCache[name];\n    }\n    const isUnsafe = unsafeAttrCharRE.test(name);\n    if (isUnsafe) {\n        console.error(`unsafe attribute name: ${name}`);\n    }\n    return (attrValidationCache[name] = !isUnsafe);\n}\nconst propsToAttrMap = {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n};\n/**\n * Known attributes, this is used for stringification of runtime static nodes\n * so that we don't stringify bindings that cannot be set from HTML.\n * Don't also forget to allow `data-*` and `aria-*`!\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n */\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\n    `value,width,wrap`);\n/**\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n */\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\n    `color-interpolation-filters,color-profile,color-rendering,` +\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n    const str = '' + string;\n    const match = escapeRE.exec(str);\n    if (!match) {\n        return str;\n    }\n    let html = '';\n    let escaped;\n    let index;\n    let lastIndex = 0;\n    for (index = match.index; index < str.length; index++) {\n        switch (str.charCodeAt(index)) {\n            case 34: // \"\n                escaped = '&quot;';\n                break;\n            case 38: // &\n                escaped = '&amp;';\n                break;\n            case 39: // '\n                escaped = '&#39;';\n                break;\n            case 60: // <\n                escaped = '&lt;';\n                break;\n            case 62: // >\n                escaped = '&gt;';\n                break;\n            default:\n                continue;\n        }\n        if (lastIndex !== index) {\n            html += str.slice(lastIndex, index);\n        }\n        lastIndex = index + 1;\n        html += escaped;\n    }\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\n// https://www.w3.org/TR/html52/syntax.html#comments\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n    return src.replace(commentStripRE, '');\n}\n\nfunction looseCompareArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let equal = true;\n    for (let i = 0; equal && i < a.length; i++) {\n        equal = looseEqual(a[i], b[i]);\n    }\n    return equal;\n}\nfunction looseEqual(a, b) {\n    if (a === b)\n        return true;\n    let aValidType = isDate(a);\n    let bValidType = isDate(b);\n    if (aValidType || bValidType) {\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n    }\n    aValidType = isSymbol(a);\n    bValidType = isSymbol(b);\n    if (aValidType || bValidType) {\n        return a === b;\n    }\n    aValidType = isArray(a);\n    bValidType = isArray(b);\n    if (aValidType || bValidType) {\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n    }\n    aValidType = isObject(a);\n    bValidType = isObject(b);\n    if (aValidType || bValidType) {\n        /* istanbul ignore if: this if will probably never be called */\n        if (!aValidType || !bValidType) {\n            return false;\n        }\n        const aKeysCount = Object.keys(a).length;\n        const bKeysCount = Object.keys(b).length;\n        if (aKeysCount !== bKeysCount) {\n            return false;\n        }\n        for (const key in a) {\n            const aHasKey = a.hasOwnProperty(key);\n            const bHasKey = b.hasOwnProperty(key);\n            if ((aHasKey && !bHasKey) ||\n                (!aHasKey && bHasKey) ||\n                !looseEqual(a[key], b[key])) {\n                return false;\n            }\n        }\n    }\n    return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n    return arr.findIndex(item => looseEqual(item, val));\n}\n\n/**\n * For converting {{ interpolation }} values to displayed strings.\n * @private\n */\nconst toDisplayString = (val) => {\n    return isString(val)\n        ? val\n        : val == null\n            ? ''\n            : isArray(val) ||\n                (isObject(val) &&\n                    (val.toString === objectToString || !isFunction(val.toString)))\n                ? JSON.stringify(val, replacer, 2)\n                : String(val);\n};\nconst replacer = (_key, val) => {\n    // can't use isRef here since @vue/shared has no deps\n    if (val && val.__v_isRef) {\n        return replacer(_key, val.value);\n    }\n    else if (isMap(val)) {\n        return {\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\n                entries[`${key} =>`] = val;\n                return entries;\n            }, {})\n        };\n    }\n    else if (isSet(val)) {\n        return {\n            [`Set(${val.size})`]: [...val.values()]\n        };\n    }\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n        return String(val);\n    }\n    return val;\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\n    ? Object.freeze({})\n    : {};\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\nconst NOOP = () => { };\n/**\n * Always return false.\n */\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith('onUpdate:');\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n    const i = arr.indexOf(el);\n    if (i > -1) {\n        arr.splice(i, 1);\n    }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === '[object Map]';\nconst isSet = (val) => toTypeString(val) === '[object Set]';\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isRegExp = (val) => toTypeString(val) === '[object RegExp]';\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isSymbol = (val) => typeof val === 'symbol';\nconst isObject = (val) => val !== null && typeof val === 'object';\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n    // extract \"RawType\" from strings like \"[object RawType]\"\n    return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\nconst isIntegerKey = (key) => isString(key) &&\n    key !== 'NaN' &&\n    key[0] !== '-' &&\n    '' + parseInt(key, 10) === key;\nconst isReservedProp = /*#__PURE__*/ makeMap(\n// the leading comma is intentional so empty string \"\" is also included\n',key,ref,ref_for,ref_key,' +\n    'onVnodeBeforeMount,onVnodeMounted,' +\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\nconst cacheStringFunction = (fn) => {\n    const cache = Object.create(null);\n    return ((str) => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction((str) => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n});\nconst hyphenateRE = /\\B([A-Z])/g;\n/**\n * @private\n */\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\n/**\n * @private\n */\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\n/**\n * @private\n */\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\n// compare whether a value has changed, accounting for NaN.\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n    for (let i = 0; i < fns.length; i++) {\n        fns[i](arg);\n    }\n};\nconst def = (obj, key, value) => {\n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable: false,\n        value\n    });\n};\n/**\n * \"123-foo\" will be parsed to 123\n * This is used for the .number modifier in v-model\n */\nconst looseToNumber = (val) => {\n    const n = parseFloat(val);\n    return isNaN(n) ? val : n;\n};\n/**\n * Only conerces number-like strings\n * \"123-foo\" will be returned as-is\n */\nconst toNumber = (val) => {\n    const n = isString(val) ? Number(val) : NaN;\n    return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : {}));\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n    return identRE.test(name)\n        ? `__props.${name}`\n        : `__props[${JSON.stringify(name)}]`;\n}\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n    console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n    constructor(detached = false) {\n        this.detached = detached;\n        /**\n         * @internal\n         */\n        this._active = true;\n        /**\n         * @internal\n         */\n        this.effects = [];\n        /**\n         * @internal\n         */\n        this.cleanups = [];\n        this.parent = activeEffectScope;\n        if (!detached && activeEffectScope) {\n            this.index =\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n        }\n    }\n    get active() {\n        return this._active;\n    }\n    run(fn) {\n        if (this._active) {\n            const currentEffectScope = activeEffectScope;\n            try {\n                activeEffectScope = this;\n                return fn();\n            }\n            finally {\n                activeEffectScope = currentEffectScope;\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`cannot run an inactive effect scope.`);\n        }\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    on() {\n        activeEffectScope = this;\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    off() {\n        activeEffectScope = this.parent;\n    }\n    stop(fromParent) {\n        if (this._active) {\n            let i, l;\n            for (i = 0, l = this.effects.length; i < l; i++) {\n                this.effects[i].stop();\n            }\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\n                this.cleanups[i]();\n            }\n            if (this.scopes) {\n                for (i = 0, l = this.scopes.length; i < l; i++) {\n                    this.scopes[i].stop(true);\n                }\n            }\n            // nested scope, dereference from parent to avoid memory leaks\n            if (!this.detached && this.parent && !fromParent) {\n                // optimized O(1) removal\n                const last = this.parent.scopes.pop();\n                if (last && last !== this) {\n                    this.parent.scopes[this.index] = last;\n                    last.index = this.index;\n                }\n            }\n            this.parent = undefined;\n            this._active = false;\n        }\n    }\n}\nfunction effectScope(detached) {\n    return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n    if (scope && scope.active) {\n        scope.effects.push(effect);\n    }\n}\nfunction getCurrentScope() {\n    return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n    if (activeEffectScope) {\n        activeEffectScope.cleanups.push(fn);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`onScopeDispose() is called when there is no active effect scope` +\n            ` to be associated with.`);\n    }\n}\n\nconst createDep = (effects) => {\n    const dep = new Set(effects);\n    dep.w = 0;\n    dep.n = 0;\n    return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].w |= trackOpBit; // set was tracked\n        }\n    }\n};\nconst finalizeDepMarkers = (effect) => {\n    const { deps } = effect;\n    if (deps.length) {\n        let ptr = 0;\n        for (let i = 0; i < deps.length; i++) {\n            const dep = deps[i];\n            if (wasTracked(dep) && !newTracked(dep)) {\n                dep.delete(effect);\n            }\n            else {\n                deps[ptr++] = dep;\n            }\n            // clear bits\n            dep.w &= ~trackOpBit;\n            dep.n &= ~trackOpBit;\n        }\n        deps.length = ptr;\n    }\n};\n\nconst targetMap = new WeakMap();\n// The number of effects currently being tracked recursively.\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\nclass ReactiveEffect {\n    constructor(fn, scheduler = null, scope) {\n        this.fn = fn;\n        this.scheduler = scheduler;\n        this.active = true;\n        this.deps = [];\n        this.parent = undefined;\n        recordEffectScope(this, scope);\n    }\n    run() {\n        if (!this.active) {\n            return this.fn();\n        }\n        let parent = activeEffect;\n        let lastShouldTrack = shouldTrack;\n        while (parent) {\n            if (parent === this) {\n                return;\n            }\n            parent = parent.parent;\n        }\n        try {\n            this.parent = activeEffect;\n            activeEffect = this;\n            shouldTrack = true;\n            trackOpBit = 1 << ++effectTrackDepth;\n            if (effectTrackDepth <= maxMarkerBits) {\n                initDepMarkers(this);\n            }\n            else {\n                cleanupEffect(this);\n            }\n            return this.fn();\n        }\n        finally {\n            if (effectTrackDepth <= maxMarkerBits) {\n                finalizeDepMarkers(this);\n            }\n            trackOpBit = 1 << --effectTrackDepth;\n            activeEffect = this.parent;\n            shouldTrack = lastShouldTrack;\n            this.parent = undefined;\n            if (this.deferStop) {\n                this.stop();\n            }\n        }\n    }\n    stop() {\n        // stopped while running itself - defer the cleanup\n        if (activeEffect === this) {\n            this.deferStop = true;\n        }\n        else if (this.active) {\n            cleanupEffect(this);\n            if (this.onStop) {\n                this.onStop();\n            }\n            this.active = false;\n        }\n    }\n}\nfunction cleanupEffect(effect) {\n    const { deps } = effect;\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].delete(effect);\n        }\n        deps.length = 0;\n    }\n}\nfunction effect(fn, options) {\n    if (fn.effect) {\n        fn = fn.effect.fn;\n    }\n    const _effect = new ReactiveEffect(fn);\n    if (options) {\n        extend(_effect, options);\n        if (options.scope)\n            recordEffectScope(_effect, options.scope);\n    }\n    if (!options || !options.lazy) {\n        _effect.run();\n    }\n    const runner = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\nfunction stop(runner) {\n    runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = false;\n}\nfunction enableTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = true;\n}\nfunction resetTracking() {\n    const last = trackStack.pop();\n    shouldTrack = last === undefined ? true : last;\n}\nfunction track(target, type, key) {\n    if (shouldTrack && activeEffect) {\n        let depsMap = targetMap.get(target);\n        if (!depsMap) {\n            targetMap.set(target, (depsMap = new Map()));\n        }\n        let dep = depsMap.get(key);\n        if (!dep) {\n            depsMap.set(key, (dep = createDep()));\n        }\n        const eventInfo = (process.env.NODE_ENV !== 'production')\n            ? { effect: activeEffect, target, type, key }\n            : undefined;\n        trackEffects(dep, eventInfo);\n    }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n    let shouldTrack = false;\n    if (effectTrackDepth <= maxMarkerBits) {\n        if (!newTracked(dep)) {\n            dep.n |= trackOpBit; // set newly tracked\n            shouldTrack = !wasTracked(dep);\n        }\n    }\n    else {\n        // Full cleanup mode.\n        shouldTrack = !dep.has(activeEffect);\n    }\n    if (shouldTrack) {\n        dep.add(activeEffect);\n        activeEffect.deps.push(dep);\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\n            activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));\n        }\n    }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n    const depsMap = targetMap.get(target);\n    if (!depsMap) {\n        // never been tracked\n        return;\n    }\n    let deps = [];\n    if (type === \"clear\" /* TriggerOpTypes.CLEAR */) {\n        // collection being cleared\n        // trigger all effects for target\n        deps = [...depsMap.values()];\n    }\n    else if (key === 'length' && isArray(target)) {\n        const newLength = Number(newValue);\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key >= newLength) {\n                deps.push(dep);\n            }\n        });\n    }\n    else {\n        // schedule runs for SET | ADD | DELETE\n        if (key !== void 0) {\n            deps.push(depsMap.get(key));\n        }\n        // also run for iteration key on ADD | DELETE | Map.SET\n        switch (type) {\n            case \"add\" /* TriggerOpTypes.ADD */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                else if (isIntegerKey(key)) {\n                    // new index added to array -> length changes\n                    deps.push(depsMap.get('length'));\n                }\n                break;\n            case \"delete\" /* TriggerOpTypes.DELETE */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                break;\n            case \"set\" /* TriggerOpTypes.SET */:\n                if (isMap(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                }\n                break;\n        }\n    }\n    const eventInfo = (process.env.NODE_ENV !== 'production')\n        ? { target, type, key, newValue, oldValue, oldTarget }\n        : undefined;\n    if (deps.length === 1) {\n        if (deps[0]) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                triggerEffects(deps[0], eventInfo);\n            }\n            else {\n                triggerEffects(deps[0]);\n            }\n        }\n    }\n    else {\n        const effects = [];\n        for (const dep of deps) {\n            if (dep) {\n                effects.push(...dep);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(createDep(effects), eventInfo);\n        }\n        else {\n            triggerEffects(createDep(effects));\n        }\n    }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n    // spread into array for stabilization\n    const effects = isArray(dep) ? dep : [...dep];\n    for (const effect of effects) {\n        if (effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n    for (const effect of effects) {\n        if (!effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n}\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n    if (effect !== activeEffect || effect.allowRecurse) {\n        if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\n            effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\n        }\n        if (effect.scheduler) {\n            effect.scheduler();\n        }\n        else {\n            effect.run();\n        }\n    }\n}\nfunction getDepFromReactive(object, key) {\n    var _a;\n    return (_a = targetMap.get(object)) === null || _a === void 0 ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n/*#__PURE__*/\nObject.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n    .filter(key => key !== 'arguments' && key !== 'caller')\n    .map(key => Symbol[key])\n    .filter(isSymbol));\nconst get$1 = /*#__PURE__*/ createGetter();\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n    const instrumentations = {};\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            const arr = toRaw(this);\n            for (let i = 0, l = this.length; i < l; i++) {\n                track(arr, \"get\" /* TrackOpTypes.GET */, i + '');\n            }\n            // we run the method using the original args first (which may be reactive)\n            const res = arr[key](...args);\n            if (res === -1 || res === false) {\n                // if that didn't work, run it again using raw values.\n                return arr[key](...args.map(toRaw));\n            }\n            else {\n                return res;\n            }\n        };\n    });\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            pauseTracking();\n            const res = toRaw(this)[key].apply(this, args);\n            resetTracking();\n            return res;\n        };\n    });\n    return instrumentations;\n}\nfunction hasOwnProperty(key) {\n    const obj = toRaw(this);\n    track(obj, \"has\" /* TrackOpTypes.HAS */, key);\n    return obj.hasOwnProperty(key);\n}\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */) {\n            return shallow;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */ &&\n            receiver ===\n                (isReadonly\n                    ? shallow\n                        ? shallowReadonlyMap\n                        : readonlyMap\n                    : shallow\n                        ? shallowReactiveMap\n                        : reactiveMap).get(target)) {\n            return target;\n        }\n        const targetIsArray = isArray(target);\n        if (!isReadonly) {\n            if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n                return Reflect.get(arrayInstrumentations, key, receiver);\n            }\n            if (key === 'hasOwnProperty') {\n                return hasOwnProperty;\n            }\n        }\n        const res = Reflect.get(target, key, receiver);\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n            return res;\n        }\n        if (!isReadonly) {\n            track(target, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        if (shallow) {\n            return res;\n        }\n        if (isRef(res)) {\n            // ref unwrapping - skip unwrap for Array + integer key.\n            return targetIsArray && isIntegerKey(key) ? res : res.value;\n        }\n        if (isObject(res)) {\n            // Convert returned value into a proxy as well. we do the isObject check\n            // here to avoid invalid value warning. Also need to lazy access readonly\n            // and reactive here to avoid circular dependency.\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n}\nconst set$1 = /*#__PURE__*/ createSetter();\nconst shallowSet = /*#__PURE__*/ createSetter(true);\nfunction createSetter(shallow = false) {\n    return function set(target, key, value, receiver) {\n        let oldValue = target[key];\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n            return false;\n        }\n        if (!shallow) {\n            if (!isShallow(value) && !isReadonly(value)) {\n                oldValue = toRaw(oldValue);\n                value = toRaw(value);\n            }\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n                oldValue.value = value;\n                return true;\n            }\n        }\n        const hadKey = isArray(target) && isIntegerKey(key)\n            ? Number(key) < target.length\n            : hasOwn(target, key);\n        const result = Reflect.set(target, key, value, receiver);\n        // don't trigger if target is something up in the prototype chain of original\n        if (target === toRaw(receiver)) {\n            if (!hadKey) {\n                trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n            }\n            else if (hasChanged(value, oldValue)) {\n                trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n            }\n        }\n        return result;\n    };\n}\nfunction deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction has$1(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n        track(target, \"has\" /* TrackOpTypes.HAS */, key);\n    }\n    return result;\n}\nfunction ownKeys(target) {\n    track(target, \"iterate\" /* TrackOpTypes.ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\n    return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n    get: get$1,\n    set: set$1,\n    deleteProperty,\n    has: has$1,\n    ownKeys\n};\nconst readonlyHandlers = {\n    get: readonlyGet,\n    set(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    }\n};\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\n    get: shallowGet,\n    set: shallowSet\n});\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\n    get: shallowReadonlyGet\n});\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\n    // of the value\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        track(rawTarget, \"get\" /* TrackOpTypes.GET */, rawKey);\n    }\n    const { has } = getProto(rawTarget);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    if (has.call(rawTarget, key)) {\n        return wrap(target.get(key));\n    }\n    else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey));\n    }\n    else if (target !== rawTarget) {\n        // #3602 readonly(reactive(Map))\n        // ensure that the nested reactive `Map` can do tracking for itself\n        target.get(key);\n    }\n}\nfunction has(key, isReadonly = false) {\n    const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"has\" /* TrackOpTypes.HAS */, key);\n        }\n        track(rawTarget, \"has\" /* TrackOpTypes.HAS */, rawKey);\n    }\n    return key === rawKey\n        ? target.has(key)\n        : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    !isReadonly && track(toRaw(target), \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n    return Reflect.get(target, 'size', target);\n}\nfunction add(value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const proto = getProto(target);\n    const hadKey = proto.has.call(target, value);\n    if (!hadKey) {\n        target.add(value);\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, value, value);\n    }\n    return this;\n}\nfunction set(key, value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get.call(target, key);\n    target.set(key, value);\n    if (!hadKey) {\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n    }\n    else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n    }\n    return this;\n}\nfunction deleteEntry(key) {\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get ? get.call(target, key) : undefined;\n    // forward the operation before queueing reactions\n    const result = target.delete(key);\n    if (hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction clear() {\n    const target = toRaw(this);\n    const hadItems = target.size !== 0;\n    const oldTarget = (process.env.NODE_ENV !== 'production')\n        ? isMap(target)\n            ? new Map(target)\n            : new Set(target)\n        : undefined;\n    // forward the operation before queueing reactions\n    const result = target.clear();\n    if (hadItems) {\n        trigger(target, \"clear\" /* TriggerOpTypes.CLEAR */, undefined, undefined, oldTarget);\n    }\n    return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n    return function forEach(callback, thisArg) {\n        const observed = this;\n        const target = observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly && track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n        return target.forEach((value, key) => {\n            // important: make sure the callback is\n            // 1. invoked with the reactive map as `this` and 3rd arg\n            // 2. the value received should be a corresponding reactive/readonly.\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\n        });\n    };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n    return function (...args) {\n        const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const targetIsMap = isMap(rawTarget);\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\n        const isKeyOnly = method === 'keys' && targetIsMap;\n        const innerIterator = target[method](...args);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly &&\n            track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n        // return a wrapped iterator which returns observed versions of the\n        // values emitted from the real iterator\n        return {\n            // iterator protocol\n            next() {\n                const { value, done } = innerIterator.next();\n                return done\n                    ? { value, done }\n                    : {\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n                        done\n                    };\n            },\n            // iterable protocol\n            [Symbol.iterator]() {\n                return this;\n            }\n        };\n    };\n}\nfunction createReadonlyMethod(type) {\n    return function (...args) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n        }\n        return type === \"delete\" /* TriggerOpTypes.DELETE */ ? false : this;\n    };\n}\nfunction createInstrumentations() {\n    const mutableInstrumentations = {\n        get(key) {\n            return get(this, key);\n        },\n        get size() {\n            return size(this);\n        },\n        has,\n        add,\n        set,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, false)\n    };\n    const shallowInstrumentations = {\n        get(key) {\n            return get(this, key, false, true);\n        },\n        get size() {\n            return size(this);\n        },\n        has,\n        add,\n        set,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, true)\n    };\n    const readonlyInstrumentations = {\n        get(key) {\n            return get(this, key, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, false)\n    };\n    const shallowReadonlyInstrumentations = {\n        get(key) {\n            return get(this, key, true, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, true)\n    };\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n    iteratorMethods.forEach(method => {\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n    });\n    return [\n        mutableInstrumentations,\n        readonlyInstrumentations,\n        shallowInstrumentations,\n        shallowReadonlyInstrumentations\n    ];\n}\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n    const instrumentations = shallow\n        ? isReadonly\n            ? shallowReadonlyInstrumentations\n            : shallowInstrumentations\n        : isReadonly\n            ? readonlyInstrumentations\n            : mutableInstrumentations;\n    return (target, key, receiver) => {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\n            return target;\n        }\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\n            ? instrumentations\n            : target, key, receiver);\n    };\n}\nconst mutableCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has, key) {\n    const rawKey = toRaw(key);\n    if (rawKey !== key && has.call(target, rawKey)) {\n        const type = toRawType(target);\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\n            `which can lead to inconsistencies. ` +\n            `Avoid differentiating between the raw and reactive versions ` +\n            `of an object and only use the reactive version if possible.`);\n    }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nfunction targetTypeMap(rawType) {\n    switch (rawType) {\n        case 'Object':\n        case 'Array':\n            return 1 /* TargetType.COMMON */;\n        case 'Map':\n        case 'Set':\n        case 'WeakMap':\n        case 'WeakSet':\n            return 2 /* TargetType.COLLECTION */;\n        default:\n            return 0 /* TargetType.INVALID */;\n    }\n}\nfunction getTargetType(value) {\n    return value[\"__v_skip\" /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\n        ? 0 /* TargetType.INVALID */\n        : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n    // if trying to observe a readonly proxy, return the readonly version.\n    if (isReadonly(target)) {\n        return target;\n    }\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\n * Return a shallowly-reactive copy of the original object, where only the root\n * level properties are reactive. It also does not auto-unwrap refs (even at the\n * root level).\n */\nfunction shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\n * Creates a readonly copy of the original object. Note the returned copy is not\n * made reactive, but `readonly` can be called on an already reactive object.\n */\nfunction readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\n * Returns a reactive-copy of the original object, where only the root level\n * properties are readonly, and does NOT unwrap refs nor recursively convert\n * returned properties.\n * This is used for creating the props proxy object for stateful components.\n */\nfunction shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n    if (!isObject(target)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            console.warn(`value cannot be made reactive: ${String(target)}`);\n        }\n        return target;\n    }\n    // target is already a Proxy, return it.\n    // exception: calling readonly() on a reactive object\n    if (target[\"__v_raw\" /* ReactiveFlags.RAW */] &&\n        !(isReadonly && target[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */])) {\n        return target;\n    }\n    // target already has corresponding Proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        return existingProxy;\n    }\n    // only specific value types can be observed.\n    const targetType = getTargetType(target);\n    if (targetType === 0 /* TargetType.INVALID */) {\n        return target;\n    }\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nfunction isReactive(value) {\n    if (isReadonly(value)) {\n        return isReactive(value[\"__v_raw\" /* ReactiveFlags.RAW */]);\n    }\n    return !!(value && value[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */]);\n}\nfunction isReadonly(value) {\n    return !!(value && value[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */]);\n}\nfunction isShallow(value) {\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\n}\nfunction isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n    const raw = observed && observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n    return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n    def(value, \"__v_skip\" /* ReactiveFlags.SKIP */, true);\n    return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n    if (shouldTrack && activeEffect) {\n        ref = toRaw(ref);\n        if ((process.env.NODE_ENV !== 'production')) {\n            trackEffects(ref.dep || (ref.dep = createDep()), {\n                target: ref,\n                type: \"get\" /* TrackOpTypes.GET */,\n                key: 'value'\n            });\n        }\n        else {\n            trackEffects(ref.dep || (ref.dep = createDep()));\n        }\n    }\n}\nfunction triggerRefValue(ref, newVal) {\n    ref = toRaw(ref);\n    const dep = ref.dep;\n    if (dep) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(dep, {\n                target: ref,\n                type: \"set\" /* TriggerOpTypes.SET */,\n                key: 'value',\n                newValue: newVal\n            });\n        }\n        else {\n            triggerEffects(dep);\n        }\n    }\n}\nfunction isRef(r) {\n    return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n    return createRef(value, false);\n}\nfunction shallowRef(value) {\n    return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n    if (isRef(rawValue)) {\n        return rawValue;\n    }\n    return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n    constructor(value, __v_isShallow) {\n        this.__v_isShallow = __v_isShallow;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this._rawValue = __v_isShallow ? value : toRaw(value);\n        this._value = __v_isShallow ? value : toReactive(value);\n    }\n    get value() {\n        trackRefValue(this);\n        return this._value;\n    }\n    set value(newVal) {\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n        newVal = useDirectValue ? newVal : toRaw(newVal);\n        if (hasChanged(newVal, this._rawValue)) {\n            this._rawValue = newVal;\n            this._value = useDirectValue ? newVal : toReactive(newVal);\n            triggerRefValue(this, newVal);\n        }\n    }\n}\nfunction triggerRef(ref) {\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\n}\nfunction unref(ref) {\n    return isRef(ref) ? ref.value : ref;\n}\nconst shallowUnwrapHandlers = {\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n    set: (target, key, value, receiver) => {\n        const oldValue = target[key];\n        if (isRef(oldValue) && !isRef(value)) {\n            oldValue.value = value;\n            return true;\n        }\n        else {\n            return Reflect.set(target, key, value, receiver);\n        }\n    }\n};\nfunction proxyRefs(objectWithRefs) {\n    return isReactive(objectWithRefs)\n        ? objectWithRefs\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n    constructor(factory) {\n        this.dep = undefined;\n        this.__v_isRef = true;\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n        this._get = get;\n        this._set = set;\n    }\n    get value() {\n        return this._get();\n    }\n    set value(newVal) {\n        this._set(newVal);\n    }\n}\nfunction customRef(factory) {\n    return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\n    }\n    const ret = isArray(object) ? new Array(object.length) : {};\n    for (const key in object) {\n        ret[key] = toRef(object, key);\n    }\n    return ret;\n}\nclass ObjectRefImpl {\n    constructor(_object, _key, _defaultValue) {\n        this._object = _object;\n        this._key = _key;\n        this._defaultValue = _defaultValue;\n        this.__v_isRef = true;\n    }\n    get value() {\n        const val = this._object[this._key];\n        return val === undefined ? this._defaultValue : val;\n    }\n    set value(newVal) {\n        this._object[this._key] = newVal;\n    }\n    get dep() {\n        return getDepFromReactive(toRaw(this._object), this._key);\n    }\n}\nfunction toRef(object, key, defaultValue) {\n    const val = object[key];\n    return isRef(val)\n        ? val\n        : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar _a$1;\nclass ComputedRefImpl {\n    constructor(getter, _setter, isReadonly, isSSR) {\n        this._setter = _setter;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this[_a$1] = false;\n        this._dirty = true;\n        this.effect = new ReactiveEffect(getter, () => {\n            if (!this._dirty) {\n                this._dirty = true;\n                triggerRefValue(this);\n            }\n        });\n        this.effect.computed = this;\n        this.effect.active = this._cacheable = !isSSR;\n        this[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */] = isReadonly;\n    }\n    get value() {\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        const self = toRaw(this);\n        trackRefValue(self);\n        if (self._dirty || !self._cacheable) {\n            self._dirty = false;\n            self._value = self.effect.run();\n        }\n        return self._value;\n    }\n    set value(newValue) {\n        this._setter(newValue);\n    }\n}\n_a$1 = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n    let getter;\n    let setter;\n    const onlyGetter = isFunction(getterOrOptions);\n    if (onlyGetter) {\n        getter = getterOrOptions;\n        setter = (process.env.NODE_ENV !== 'production')\n            ? () => {\n                console.warn('Write operation failed: computed value is readonly');\n            }\n            : NOOP;\n    }\n    else {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n    if ((process.env.NODE_ENV !== 'production') && debugOptions && !isSSR) {\n        cRef.effect.onTrack = debugOptions.onTrack;\n        cRef.effect.onTrigger = debugOptions.onTrigger;\n    }\n    return cRef;\n}\n\nvar _a;\nconst tick = /*#__PURE__*/ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n    queue.push(fn);\n    if (!queued) {\n        queued = true;\n        tick.then(flush);\n    }\n};\nconst flush = () => {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i]();\n    }\n    queue.length = 0;\n    queued = false;\n};\nclass DeferredComputedRefImpl {\n    constructor(getter) {\n        this.dep = undefined;\n        this._dirty = true;\n        this.__v_isRef = true;\n        this[_a] = true;\n        let compareTarget;\n        let hasCompareTarget = false;\n        let scheduled = false;\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n            if (this.dep) {\n                if (computedTrigger) {\n                    compareTarget = this._value;\n                    hasCompareTarget = true;\n                }\n                else if (!scheduled) {\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n                    scheduled = true;\n                    hasCompareTarget = false;\n                    scheduler(() => {\n                        if (this.effect.active && this._get() !== valueToCompare) {\n                            triggerRefValue(this);\n                        }\n                        scheduled = false;\n                    });\n                }\n                // chained upstream computeds are notified synchronously to ensure\n                // value invalidation in case of sync access; normal effects are\n                // deferred to be triggered in scheduler.\n                for (const e of this.dep) {\n                    if (e.computed instanceof DeferredComputedRefImpl) {\n                        e.scheduler(true /* computedTrigger */);\n                    }\n                }\n            }\n            this._dirty = true;\n        });\n        this.effect.computed = this;\n    }\n    _get() {\n        if (this._dirty) {\n            this._dirty = false;\n            return (this._value = this.effect.run());\n        }\n        return this._value;\n    }\n    get value() {\n        trackRefValue(this);\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        return toRaw(this)._get();\n    }\n}\n_a = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction deferredComputed(getter) {\n    return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, getCurrentScope, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, shallowReadonly, track, reactive, shallowReactive, trigger, isProxy, proxyRefs, markRaw, EffectScope, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, looseToNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, toNumber, hasChanged, remove, isSet, isMap, isPlainObject, invokeArrayFns, isRegExp, isBuiltInDirective, capitalize, isGloballyWhitelisted, def, isReservedProp, EMPTY_ARR, toRawType, makeMap, NO, normalizeClass, normalizeStyle } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n    stack.push(vnode);\n}\nfunction popWarningContext() {\n    stack.pop();\n}\nfunction warn(msg, ...args) {\n    if (!(process.env.NODE_ENV !== 'production'))\n        return;\n    // avoid props formatting or warn handler tracking deps that might be mutated\n    // during patch, leading to infinite recursion.\n    pauseTracking();\n    const instance = stack.length ? stack[stack.length - 1].component : null;\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\n    const trace = getComponentTrace();\n    if (appWarnHandler) {\n        callWithErrorHandling(appWarnHandler, instance, 11 /* ErrorCodes.APP_WARN_HANDLER */, [\n            msg + args.join(''),\n            instance && instance.proxy,\n            trace\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\n                .join('\\n'),\n            trace\n        ]);\n    }\n    else {\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n        /* istanbul ignore if */\n        if (trace.length &&\n            // avoid spamming console during tests\n            !false) {\n            warnArgs.push(`\\n`, ...formatTrace(trace));\n        }\n        console.warn(...warnArgs);\n    }\n    resetTracking();\n}\nfunction getComponentTrace() {\n    let currentVNode = stack[stack.length - 1];\n    if (!currentVNode) {\n        return [];\n    }\n    // we can't just use the stack because it will be incomplete during updates\n    // that did not start from the root. Re-construct the parent chain using\n    // instance parent pointers.\n    const normalizedStack = [];\n    while (currentVNode) {\n        const last = normalizedStack[0];\n        if (last && last.vnode === currentVNode) {\n            last.recurseCount++;\n        }\n        else {\n            normalizedStack.push({\n                vnode: currentVNode,\n                recurseCount: 0\n            });\n        }\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\n        currentVNode = parentInstance && parentInstance.vnode;\n    }\n    return normalizedStack;\n}\n/* istanbul ignore next */\nfunction formatTrace(trace) {\n    const logs = [];\n    trace.forEach((entry, i) => {\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\n    });\n    return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\n    const close = `>` + postfix;\n    return vnode.props\n        ? [open, ...formatProps(vnode.props), close]\n        : [open + close];\n}\n/* istanbul ignore next */\nfunction formatProps(props) {\n    const res = [];\n    const keys = Object.keys(props);\n    keys.slice(0, 3).forEach(key => {\n        res.push(...formatProp(key, props[key]));\n    });\n    if (keys.length > 3) {\n        res.push(` ...`);\n    }\n    return res;\n}\n/* istanbul ignore next */\nfunction formatProp(key, value, raw) {\n    if (isString(value)) {\n        value = JSON.stringify(value);\n        return raw ? value : [`${key}=${value}`];\n    }\n    else if (typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        value == null) {\n        return raw ? value : [`${key}=${value}`];\n    }\n    else if (isRef(value)) {\n        value = formatProp(key, toRaw(value.value), true);\n        return raw ? value : [`${key}=Ref<`, value, `>`];\n    }\n    else if (isFunction(value)) {\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n    }\n    else {\n        value = toRaw(value);\n        return raw ? value : [`${key}=`, value];\n    }\n}\n/**\n * @internal\n */\nfunction assertNumber(val, type) {\n    if (!(process.env.NODE_ENV !== 'production'))\n        return;\n    if (val === undefined) {\n        return;\n    }\n    else if (typeof val !== 'number') {\n        warn(`${type} is not a valid number - ` + `got ${JSON.stringify(val)}.`);\n    }\n    else if (isNaN(val)) {\n        warn(`${type} is NaN - ` + 'the duration expression might be incorrect.');\n    }\n}\n\nconst ErrorTypeStrings = {\n    [\"sp\" /* LifecycleHooks.SERVER_PREFETCH */]: 'serverPrefetch hook',\n    [\"bc\" /* LifecycleHooks.BEFORE_CREATE */]: 'beforeCreate hook',\n    [\"c\" /* LifecycleHooks.CREATED */]: 'created hook',\n    [\"bm\" /* LifecycleHooks.BEFORE_MOUNT */]: 'beforeMount hook',\n    [\"m\" /* LifecycleHooks.MOUNTED */]: 'mounted hook',\n    [\"bu\" /* LifecycleHooks.BEFORE_UPDATE */]: 'beforeUpdate hook',\n    [\"u\" /* LifecycleHooks.UPDATED */]: 'updated',\n    [\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */]: 'beforeUnmount hook',\n    [\"um\" /* LifecycleHooks.UNMOUNTED */]: 'unmounted hook',\n    [\"a\" /* LifecycleHooks.ACTIVATED */]: 'activated hook',\n    [\"da\" /* LifecycleHooks.DEACTIVATED */]: 'deactivated hook',\n    [\"ec\" /* LifecycleHooks.ERROR_CAPTURED */]: 'errorCaptured hook',\n    [\"rtc\" /* LifecycleHooks.RENDER_TRACKED */]: 'renderTracked hook',\n    [\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */]: 'renderTriggered hook',\n    [0 /* ErrorCodes.SETUP_FUNCTION */]: 'setup function',\n    [1 /* ErrorCodes.RENDER_FUNCTION */]: 'render function',\n    [2 /* ErrorCodes.WATCH_GETTER */]: 'watcher getter',\n    [3 /* ErrorCodes.WATCH_CALLBACK */]: 'watcher callback',\n    [4 /* ErrorCodes.WATCH_CLEANUP */]: 'watcher cleanup function',\n    [5 /* ErrorCodes.NATIVE_EVENT_HANDLER */]: 'native event handler',\n    [6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */]: 'component event handler',\n    [7 /* ErrorCodes.VNODE_HOOK */]: 'vnode hook',\n    [8 /* ErrorCodes.DIRECTIVE_HOOK */]: 'directive hook',\n    [9 /* ErrorCodes.TRANSITION_HOOK */]: 'transition hook',\n    [10 /* ErrorCodes.APP_ERROR_HANDLER */]: 'app errorHandler',\n    [11 /* ErrorCodes.APP_WARN_HANDLER */]: 'app warnHandler',\n    [12 /* ErrorCodes.FUNCTION_REF */]: 'ref function',\n    [13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */]: 'async component loader',\n    [14 /* ErrorCodes.SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n    let res;\n    try {\n        res = args ? fn(...args) : fn();\n    }\n    catch (err) {\n        handleError(err, instance, type);\n    }\n    return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n    if (isFunction(fn)) {\n        const res = callWithErrorHandling(fn, instance, type, args);\n        if (res && isPromise(res)) {\n            res.catch(err => {\n                handleError(err, instance, type);\n            });\n        }\n        return res;\n    }\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n    }\n    return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n    const contextVNode = instance ? instance.vnode : null;\n    if (instance) {\n        let cur = instance.parent;\n        // the exposed instance is the render proxy to keep it consistent with 2.x\n        const exposedInstance = instance.proxy;\n        // in production the hook receives only the error code\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\n        while (cur) {\n            const errorCapturedHooks = cur.ec;\n            if (errorCapturedHooks) {\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n                        return;\n                    }\n                }\n            }\n            cur = cur.parent;\n        }\n        // app-level handling\n        const appErrorHandler = instance.appContext.config.errorHandler;\n        if (appErrorHandler) {\n            callWithErrorHandling(appErrorHandler, null, 10 /* ErrorCodes.APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\n            return;\n        }\n    }\n    logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        const info = ErrorTypeStrings[type];\n        if (contextVNode) {\n            pushWarningContext(contextVNode);\n        }\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n        if (contextVNode) {\n            popWarningContext();\n        }\n        // crash in dev by default so it's more noticeable\n        if (throwInDev) {\n            throw err;\n        }\n        else {\n            console.error(err);\n        }\n    }\n    else {\n        // recover in prod to reduce the impact on end-user\n        console.error(err);\n    }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n    const p = currentFlushPromise || resolvedPromise;\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\n// #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\nfunction findInsertionIndex(id) {\n    // the start index should be `flushIndex + 1`\n    let start = flushIndex + 1;\n    let end = queue.length;\n    while (start < end) {\n        const middle = (start + end) >>> 1;\n        const middleJobId = getId(queue[middle]);\n        middleJobId < id ? (start = middle + 1) : (end = middle);\n    }\n    return start;\n}\nfunction queueJob(job) {\n    // the dedupe search uses the startIndex argument of Array.includes()\n    // by default the search index includes the current job that is being run\n    // so it cannot recursively trigger itself again.\n    // if the job is a watch() callback, the search will start with a +1 index to\n    // allow it recursively trigger itself - it is the user's responsibility to\n    // ensure it doesn't end up in an infinite loop.\n    if (!queue.length ||\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {\n        if (job.id == null) {\n            queue.push(job);\n        }\n        else {\n            queue.splice(findInsertionIndex(job.id), 0, job);\n        }\n        queueFlush();\n    }\n}\nfunction queueFlush() {\n    if (!isFlushing && !isFlushPending) {\n        isFlushPending = true;\n        currentFlushPromise = resolvedPromise.then(flushJobs);\n    }\n}\nfunction invalidateJob(job) {\n    const i = queue.indexOf(job);\n    if (i > flushIndex) {\n        queue.splice(i, 1);\n    }\n}\nfunction queuePostFlushCb(cb) {\n    if (!isArray(cb)) {\n        if (!activePostFlushCbs ||\n            !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) {\n            pendingPostFlushCbs.push(cb);\n        }\n    }\n    else {\n        // if cb is an array, it is a component lifecycle hook which can only be\n        // triggered by a job, which is already deduped in the main queue, so\n        // we can skip duplicate check here to improve perf\n        pendingPostFlushCbs.push(...cb);\n    }\n    queueFlush();\n}\nfunction flushPreFlushCbs(seen, \n// if currently flushing, skip the current job itself\ni = isFlushing ? flushIndex + 1 : 0) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        seen = seen || new Map();\n    }\n    for (; i < queue.length; i++) {\n        const cb = queue[i];\n        if (cb && cb.pre) {\n            if ((process.env.NODE_ENV !== 'production') && checkRecursiveUpdates(seen, cb)) {\n                continue;\n            }\n            queue.splice(i, 1);\n            i--;\n            cb();\n        }\n    }\n}\nfunction flushPostFlushCbs(seen) {\n    if (pendingPostFlushCbs.length) {\n        const deduped = [...new Set(pendingPostFlushCbs)];\n        pendingPostFlushCbs.length = 0;\n        // #1947 already has active queue, nested flushPostFlushCbs call\n        if (activePostFlushCbs) {\n            activePostFlushCbs.push(...deduped);\n            return;\n        }\n        activePostFlushCbs = deduped;\n        if ((process.env.NODE_ENV !== 'production')) {\n            seen = seen || new Map();\n        }\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n                continue;\n            }\n            activePostFlushCbs[postFlushIndex]();\n        }\n        activePostFlushCbs = null;\n        postFlushIndex = 0;\n    }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n    const diff = getId(a) - getId(b);\n    if (diff === 0) {\n        if (a.pre && !b.pre)\n            return -1;\n        if (b.pre && !a.pre)\n            return 1;\n    }\n    return diff;\n};\nfunction flushJobs(seen) {\n    isFlushPending = false;\n    isFlushing = true;\n    if ((process.env.NODE_ENV !== 'production')) {\n        seen = seen || new Map();\n    }\n    // Sort queue before flush.\n    // This ensures that:\n    // 1. Components are updated from parent to child. (because parent is always\n    //    created before the child so its render effect will have smaller\n    //    priority number)\n    // 2. If a component is unmounted during a parent component's update,\n    //    its update can be skipped.\n    queue.sort(comparator);\n    // conditional usage of checkRecursiveUpdate must be determined out of\n    // try ... catch block since Rollup by default de-optimizes treeshaking\n    // inside try-catch. This can leave all warning code unshaked. Although\n    // they would get eventually shaken by a minifier like terser, some minifiers\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n    const check = (process.env.NODE_ENV !== 'production')\n        ? (job) => checkRecursiveUpdates(seen, job)\n        : NOOP;\n    try {\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n            const job = queue[flushIndex];\n            if (job && job.active !== false) {\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\n                    continue;\n                }\n                // console.log(`running:`, job.id)\n                callWithErrorHandling(job, null, 14 /* ErrorCodes.SCHEDULER */);\n            }\n        }\n    }\n    finally {\n        flushIndex = 0;\n        queue.length = 0;\n        flushPostFlushCbs(seen);\n        isFlushing = false;\n        currentFlushPromise = null;\n        // some postFlushCb queued jobs!\n        // keep flushing until it drains.\n        if (queue.length || pendingPostFlushCbs.length) {\n            flushJobs(seen);\n        }\n    }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n    if (!seen.has(fn)) {\n        seen.set(fn, 1);\n    }\n    else {\n        const count = seen.get(fn);\n        if (count > RECURSION_LIMIT) {\n            const instance = fn.ownerInstance;\n            const componentName = instance && getComponentName(instance.type);\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\n                `This means you have a reactive effect that is mutating its own ` +\n                `dependencies and thus recursively triggering itself. Possible sources ` +\n                `include component template, render function, updated hook or ` +\n                `watcher source function.`);\n            return true;\n        }\n        else {\n            seen.set(fn, count + 1);\n        }\n    }\n}\n\n/* eslint-disable no-restricted-globals */\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = new Set();\n// Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\nif ((process.env.NODE_ENV !== 'production')) {\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\n        createRecord: tryWrap(createRecord),\n        rerender: tryWrap(rerender),\n        reload: tryWrap(reload)\n    };\n}\nconst map = new Map();\nfunction registerHMR(instance) {\n    const id = instance.type.__hmrId;\n    let record = map.get(id);\n    if (!record) {\n        createRecord(id, instance.type);\n        record = map.get(id);\n    }\n    record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n    map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n    if (map.has(id)) {\n        return false;\n    }\n    map.set(id, {\n        initialDef: normalizeClassComponent(initialDef),\n        instances: new Set()\n    });\n    return true;\n}\nfunction normalizeClassComponent(component) {\n    return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n    const record = map.get(id);\n    if (!record) {\n        return;\n    }\n    // update initial record (for not-yet-rendered component)\n    record.initialDef.render = newRender;\n    [...record.instances].forEach(instance => {\n        if (newRender) {\n            instance.render = newRender;\n            normalizeClassComponent(instance.type).render = newRender;\n        }\n        instance.renderCache = [];\n        // this flag forces child components with slot content to update\n        isHmrUpdating = true;\n        instance.update();\n        isHmrUpdating = false;\n    });\n}\nfunction reload(id, newComp) {\n    const record = map.get(id);\n    if (!record)\n        return;\n    newComp = normalizeClassComponent(newComp);\n    // update initial def (for not-yet-rendered components)\n    updateComponentDef(record.initialDef, newComp);\n    // create a snapshot which avoids the set being mutated during updates\n    const instances = [...record.instances];\n    for (const instance of instances) {\n        const oldComp = normalizeClassComponent(instance.type);\n        if (!hmrDirtyComponents.has(oldComp)) {\n            // 1. Update existing comp definition to match new one\n            if (oldComp !== record.initialDef) {\n                updateComponentDef(oldComp, newComp);\n            }\n            // 2. mark definition dirty. This forces the renderer to replace the\n            // component on patch.\n            hmrDirtyComponents.add(oldComp);\n        }\n        // 3. invalidate options resolution cache\n        instance.appContext.optionsCache.delete(instance.type);\n        // 4. actually update\n        if (instance.ceReload) {\n            // custom element\n            hmrDirtyComponents.add(oldComp);\n            instance.ceReload(newComp.styles);\n            hmrDirtyComponents.delete(oldComp);\n        }\n        else if (instance.parent) {\n            // 4. Force the parent instance to re-render. This will cause all updated\n            // components to be unmounted and re-mounted. Queue the update so that we\n            // don't end up forcing the same parent to re-render multiple times.\n            queueJob(instance.parent.update);\n        }\n        else if (instance.appContext.reload) {\n            // root instance mounted via createApp() has a reload method\n            instance.appContext.reload();\n        }\n        else if (typeof window !== 'undefined') {\n            // root instance inside tree created via raw render(). Force reload.\n            window.location.reload();\n        }\n        else {\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\n        }\n    }\n    // 5. make sure to cleanup dirty hmr components after update\n    queuePostFlushCb(() => {\n        for (const instance of instances) {\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\n        }\n    });\n}\nfunction updateComponentDef(oldComp, newComp) {\n    extend(oldComp, newComp);\n    for (const key in oldComp) {\n        if (key !== '__file' && !(key in newComp)) {\n            delete oldComp[key];\n        }\n    }\n}\nfunction tryWrap(fn) {\n    return (id, arg) => {\n        try {\n            return fn(id, arg);\n        }\n        catch (e) {\n            console.error(e);\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\n                `Full reload required.`);\n        }\n    };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n    if (devtools) {\n        devtools.emit(event, ...args);\n    }\n    else if (!devtoolsNotInstalled) {\n        buffer.push({ event, args });\n    }\n}\nfunction setDevtoolsHook(hook, target) {\n    var _a, _b;\n    devtools = hook;\n    if (devtools) {\n        devtools.enabled = true;\n        buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\n        buffer = [];\n    }\n    else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== 'undefined' &&\n        // some envs mock window but not fully\n        window.HTMLElement &&\n        // also exclude jsdom\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\n        replay.push((newHook) => {\n            setDevtoolsHook(newHook, target);\n        });\n        // clear buffer after 3s - the user probably doesn't have devtools installed\n        // at all, and keeping the buffer will cause memory leaks (#4738)\n        setTimeout(() => {\n            if (!devtools) {\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n                devtoolsNotInstalled = true;\n                buffer = [];\n            }\n        }, 3000);\n    }\n    else {\n        // non-browser env, assume not installed\n        devtoolsNotInstalled = true;\n        buffer = [];\n    }\n}\nfunction devtoolsInitApp(app, version) {\n    emit$1(\"app:init\" /* DevtoolsHooks.APP_INIT */, app, version, {\n        Fragment,\n        Text,\n        Comment,\n        Static\n    });\n}\nfunction devtoolsUnmountApp(app) {\n    emit$1(\"app:unmount\" /* DevtoolsHooks.APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* DevtoolsHooks.COMPONENT_ADDED */);\nconst devtoolsComponentUpdated = \n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* DevtoolsHooks.COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* DevtoolsHooks.COMPONENT_REMOVED */);\nconst devtoolsComponentRemoved = (component) => {\n    if (devtools &&\n        typeof devtools.cleanupBuffer === 'function' &&\n        // remove the component if it wasn't buffered\n        !devtools.cleanupBuffer(component)) {\n        _devtoolsComponentRemoved(component);\n    }\n};\nfunction createDevtoolsComponentHook(hook) {\n    return (component) => {\n        emit$1(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\n    };\n}\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* DevtoolsHooks.PERFORMANCE_START */);\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* DevtoolsHooks.PERFORMANCE_END */);\nfunction createDevtoolsPerformanceHook(hook) {\n    return (component, type, time) => {\n        emit$1(hook, component.appContext.app, component.uid, component, type, time);\n    };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n    emit$1(\"component:emit\" /* DevtoolsHooks.COMPONENT_EMIT */, component.appContext.app, component, event, params);\n}\n\nfunction emit(instance, event, ...rawArgs) {\n    if (instance.isUnmounted)\n        return;\n    const props = instance.vnode.props || EMPTY_OBJ;\n    if ((process.env.NODE_ENV !== 'production')) {\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\n        if (emitsOptions) {\n            if (!(event in emitsOptions) &&\n                !(false )) {\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\n                }\n            }\n            else {\n                const validator = emitsOptions[event];\n                if (isFunction(validator)) {\n                    const isValid = validator(...rawArgs);\n                    if (!isValid) {\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\n                    }\n                }\n            }\n        }\n    }\n    let args = rawArgs;\n    const isModelListener = event.startsWith('update:');\n    // for v-model update:xxx events, apply modifiers on args\n    const modelArg = isModelListener && event.slice(7);\n    if (modelArg && modelArg in props) {\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n        if (trim) {\n            args = rawArgs.map(a => (isString(a) ? a.trim() : a));\n        }\n        if (number) {\n            args = rawArgs.map(looseToNumber);\n        }\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentEmit(instance, event, args);\n    }\n    if ((process.env.NODE_ENV !== 'production')) {\n        const lowerCaseEvent = event.toLowerCase();\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\n        }\n    }\n    let handlerName;\n    let handler = props[(handlerName = toHandlerKey(event))] ||\n        // also try camelCase event handler (#2249)\n        props[(handlerName = toHandlerKey(camelize(event)))];\n    // for v-model update:xxx events, also trigger kebab-case equivalent\n    // for props passed via kebab-case\n    if (!handler && isModelListener) {\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\n    }\n    if (handler) {\n        callWithAsyncErrorHandling(handler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\n    }\n    const onceHandler = props[handlerName + `Once`];\n    if (onceHandler) {\n        if (!instance.emitted) {\n            instance.emitted = {};\n        }\n        else if (instance.emitted[handlerName]) {\n            return;\n        }\n        instance.emitted[handlerName] = true;\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\n    }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n    const cache = appContext.emitsCache;\n    const cached = cache.get(comp);\n    if (cached !== undefined) {\n        return cached;\n    }\n    const raw = comp.emits;\n    let normalized = {};\n    // apply mixin/extends props\n    let hasExtends = false;\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n        const extendEmits = (raw) => {\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\n            if (normalizedFromExtend) {\n                hasExtends = true;\n                extend(normalized, normalizedFromExtend);\n            }\n        };\n        if (!asMixin && appContext.mixins.length) {\n            appContext.mixins.forEach(extendEmits);\n        }\n        if (comp.extends) {\n            extendEmits(comp.extends);\n        }\n        if (comp.mixins) {\n            comp.mixins.forEach(extendEmits);\n        }\n    }\n    if (!raw && !hasExtends) {\n        if (isObject(comp)) {\n            cache.set(comp, null);\n        }\n        return null;\n    }\n    if (isArray(raw)) {\n        raw.forEach(key => (normalized[key] = null));\n    }\n    else {\n        extend(normalized, raw);\n    }\n    if (isObject(comp)) {\n        cache.set(comp, normalized);\n    }\n    return normalized;\n}\n// Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\nfunction isEmitListener(options, key) {\n    if (!options || !isOn(key)) {\n        return false;\n    }\n    key = key.slice(2).replace(/Once$/, '');\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\n        hasOwn(options, hyphenate(key)) ||\n        hasOwn(options, key));\n}\n\n/**\n * mark the current rendering instance for asset resolution (e.g.\n * resolveComponent, resolveDirective) during render\n */\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\n/**\n * Note: rendering calls maybe nested. The function returns the parent rendering\n * instance if present, which should be restored after the render is done:\n *\n * ```js\n * const prev = setCurrentRenderingInstance(i)\n * // ...render\n * setCurrentRenderingInstance(prev)\n * ```\n */\nfunction setCurrentRenderingInstance(instance) {\n    const prev = currentRenderingInstance;\n    currentRenderingInstance = instance;\n    currentScopeId = (instance && instance.type.__scopeId) || null;\n    return prev;\n}\n/**\n * Set scope id when creating hoisted vnodes.\n * @private compiler helper\n */\nfunction pushScopeId(id) {\n    currentScopeId = id;\n}\n/**\n * Technically we no longer need this after 3.0.8 but we need to keep the same\n * API for backwards compat w/ code generated by compilers.\n * @private\n */\nfunction popScopeId() {\n    currentScopeId = null;\n}\n/**\n * Only for backwards compat\n * @private\n */\nconst withScopeId = (_id) => withCtx;\n/**\n * Wrap a slot function to memoize current rendering instance\n * @private compiler helper\n */\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\n) {\n    if (!ctx)\n        return fn;\n    // already normalized\n    if (fn._n) {\n        return fn;\n    }\n    const renderFnWithContext = (...args) => {\n        // If a user calls a compiled slot inside a template expression (#1745), it\n        // can mess up block tracking, so by default we disable block tracking and\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n        if (renderFnWithContext._d) {\n            setBlockTracking(-1);\n        }\n        const prevInstance = setCurrentRenderingInstance(ctx);\n        let res;\n        try {\n            res = fn(...args);\n        }\n        finally {\n            setCurrentRenderingInstance(prevInstance);\n            if (renderFnWithContext._d) {\n                setBlockTracking(1);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            devtoolsComponentUpdated(ctx);\n        }\n        return res;\n    };\n    // mark normalized to avoid duplicated wrapping\n    renderFnWithContext._n = true;\n    // mark this as compiled by default\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\n    // rendering flag.\n    renderFnWithContext._c = true;\n    // disable block tracking by default\n    renderFnWithContext._d = true;\n    return renderFnWithContext;\n}\n\n/**\n * dev only flag to track whether $attrs was used during render.\n * If $attrs was used during render then the warning for failed attrs\n * fallthrough can be suppressed.\n */\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n    accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\n    let result;\n    let fallthroughAttrs;\n    const prev = setCurrentRenderingInstance(instance);\n    if ((process.env.NODE_ENV !== 'production')) {\n        accessedAttrs = false;\n    }\n    try {\n        if (vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) {\n            // withProxy is a proxy with a different `has` trap only for\n            // runtime-compiled render functions using `with` block.\n            const proxyToUse = withProxy || proxy;\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\n            fallthroughAttrs = attrs;\n        }\n        else {\n            // functional\n            const render = Component;\n            // in dev, mark attrs accessed if optional props (attrs === props)\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\n                markAttrsAccessed();\n            }\n            result = normalizeVNode(render.length > 1\n                ? render(props, (process.env.NODE_ENV !== 'production')\n                    ? {\n                        get attrs() {\n                            markAttrsAccessed();\n                            return attrs;\n                        },\n                        slots,\n                        emit\n                    }\n                    : { attrs, slots, emit })\n                : render(props, null /* we know it doesn't need it */));\n            fallthroughAttrs = Component.props\n                ? attrs\n                : getFunctionalFallthrough(attrs);\n        }\n    }\n    catch (err) {\n        blockStack.length = 0;\n        handleError(err, instance, 1 /* ErrorCodes.RENDER_FUNCTION */);\n        result = createVNode(Comment);\n    }\n    // attr merging\n    // in dev mode, comments are preserved, and it's possible for a template\n    // to have comments along side the root element which makes it a fragment\n    let root = result;\n    let setRoot = undefined;\n    if ((process.env.NODE_ENV !== 'production') &&\n        result.patchFlag > 0 &&\n        result.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\n        [root, setRoot] = getChildRoot(result);\n    }\n    if (fallthroughAttrs && inheritAttrs !== false) {\n        const keys = Object.keys(fallthroughAttrs);\n        const { shapeFlag } = root;\n        if (keys.length) {\n            if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 6 /* ShapeFlags.COMPONENT */)) {\n                if (propsOptions && keys.some(isModelListener)) {\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\n                    // prop, it indicates this component expects to handle v-model and\n                    // it should not fallthrough.\n                    // related: #1543, #1643, #1989\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\n                }\n                root = cloneVNode(root, fallthroughAttrs);\n            }\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\n                const allAttrs = Object.keys(attrs);\n                const eventAttrs = [];\n                const extraAttrs = [];\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\n                    const key = allAttrs[i];\n                    if (isOn(key)) {\n                        // ignore v-model handlers when they fail to fallthrough\n                        if (!isModelListener(key)) {\n                            // remove `on`, lowercase first letter to reflect event casing\n                            // accurately\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n                        }\n                    }\n                    else {\n                        extraAttrs.push(key);\n                    }\n                }\n                if (extraAttrs.length) {\n                    warn(`Extraneous non-props attributes (` +\n                        `${extraAttrs.join(', ')}) ` +\n                        `were passed to component but could not be automatically inherited ` +\n                        `because component renders fragment or text root nodes.`);\n                }\n                if (eventAttrs.length) {\n                    warn(`Extraneous non-emits event listeners (` +\n                        `${eventAttrs.join(', ')}) ` +\n                        `were passed to component but could not be automatically inherited ` +\n                        `because component renders fragment or text root nodes. ` +\n                        `If the listener is intended to be a component custom event listener only, ` +\n                        `declare it using the \"emits\" option.`);\n                }\n            }\n        }\n    }\n    // inherit directives\n    if (vnode.dirs) {\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\n            warn(`Runtime directive used on component with non-element root node. ` +\n                `The directives will not function as intended.`);\n        }\n        // clone before mutating since the root may be a hoisted vnode\n        root = cloneVNode(root);\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n    }\n    // inherit transition data\n    if (vnode.transition) {\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\n            warn(`Component inside <Transition> renders non-element root node ` +\n                `that cannot be animated.`);\n        }\n        root.transition = vnode.transition;\n    }\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\n        setRoot(root);\n    }\n    else {\n        result = root;\n    }\n    setCurrentRenderingInstance(prev);\n    return result;\n}\n/**\n * dev only\n * In dev mode, template root level comments are rendered, which turns the\n * template into a fragment root, but we need to locate the single element\n * root for attrs and scope id processing.\n */\nconst getChildRoot = (vnode) => {\n    const rawChildren = vnode.children;\n    const dynamicChildren = vnode.dynamicChildren;\n    const childRoot = filterSingleRoot(rawChildren);\n    if (!childRoot) {\n        return [vnode, undefined];\n    }\n    const index = rawChildren.indexOf(childRoot);\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n    const setRoot = (updatedRoot) => {\n        rawChildren[index] = updatedRoot;\n        if (dynamicChildren) {\n            if (dynamicIndex > -1) {\n                dynamicChildren[dynamicIndex] = updatedRoot;\n            }\n            else if (updatedRoot.patchFlag > 0) {\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n            }\n        }\n    };\n    return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n    let singleRoot;\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isVNode(child)) {\n            // ignore user comment\n            if (child.type !== Comment || child.children === 'v-if') {\n                if (singleRoot) {\n                    // has more than 1 non-comment child, return now\n                    return;\n                }\n                else {\n                    singleRoot = child;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    }\n    return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n    let res;\n    for (const key in attrs) {\n        if (key === 'class' || key === 'style' || isOn(key)) {\n            (res || (res = {}))[key] = attrs[key];\n        }\n    }\n    return res;\n};\nconst filterModelListeners = (attrs, props) => {\n    const res = {};\n    for (const key in attrs) {\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\n            res[key] = attrs[key];\n        }\n    }\n    return res;\n};\nconst isElementRoot = (vnode) => {\n    return (vnode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 1 /* ShapeFlags.ELEMENT */) ||\n        vnode.type === Comment // potential v-if branch switch\n    );\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n    const emits = component.emitsOptions;\n    // Parent component's render function was hot-updated. Since this may have\n    // caused the child component's slots content to have changed, we need to\n    // force the child to update as well.\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\n        return true;\n    }\n    // force child update for runtime directive or transition on component vnode.\n    if (nextVNode.dirs || nextVNode.transition) {\n        return true;\n    }\n    if (optimized && patchFlag >= 0) {\n        if (patchFlag & 1024 /* PatchFlags.DYNAMIC_SLOTS */) {\n            // slot content that references values that might have changed,\n            // e.g. in a v-for\n            return true;\n        }\n        if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\n            if (!prevProps) {\n                return !!nextProps;\n            }\n            // presence of this flag indicates props are always non-null\n            return hasPropsChanged(prevProps, nextProps, emits);\n        }\n        else if (patchFlag & 8 /* PatchFlags.PROPS */) {\n            const dynamicProps = nextVNode.dynamicProps;\n            for (let i = 0; i < dynamicProps.length; i++) {\n                const key = dynamicProps[i];\n                if (nextProps[key] !== prevProps[key] &&\n                    !isEmitListener(emits, key)) {\n                    return true;\n                }\n            }\n        }\n    }\n    else {\n        // this path is only taken by manually written render functions\n        // so presence of any children leads to a forced update\n        if (prevChildren || nextChildren) {\n            if (!nextChildren || !nextChildren.$stable) {\n                return true;\n            }\n        }\n        if (prevProps === nextProps) {\n            return false;\n        }\n        if (!prevProps) {\n            return !!nextProps;\n        }\n        if (!nextProps) {\n            return true;\n        }\n        return hasPropsChanged(prevProps, nextProps, emits);\n    }\n    return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n    const nextKeys = Object.keys(nextProps);\n    if (nextKeys.length !== Object.keys(prevProps).length) {\n        return true;\n    }\n    for (let i = 0; i < nextKeys.length; i++) {\n        const key = nextKeys[i];\n        if (nextProps[key] !== prevProps[key] &&\n            !isEmitListener(emitsOptions, key)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\n) {\n    while (parent && parent.subTree === vnode) {\n        (vnode = parent.vnode).el = el;\n        parent = parent.parent;\n    }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\n// Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\nconst SuspenseImpl = {\n    name: 'Suspense',\n    // In order to make Suspense tree-shakable, we need to avoid importing it\n    // directly in the renderer. The renderer checks for the __isSuspense flag\n    // on a vnode's type and calls the `process` method, passing in renderer\n    // internals.\n    __isSuspense: true,\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \n    // platform-specific impl passed from renderer\n    rendererInternals) {\n        if (n1 == null) {\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\n        }\n        else {\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\n        }\n    },\n    hydrate: hydrateSuspense,\n    create: createSuspenseBoundary,\n    normalize: normalizeSuspenseChildren\n};\n// Force-casted public typing for h and TSX props inference\nconst Suspense = (SuspenseImpl\n    );\nfunction triggerEvent(vnode, name) {\n    const eventListener = vnode.props && vnode.props[name];\n    if (isFunction(eventListener)) {\n        eventListener();\n    }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    const { p: patch, o: { createElement } } = rendererInternals;\n    const hiddenContainer = createElement('div');\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\n    // start mounting the content subtree in an off-dom container\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\n    // now check if we have encountered any async deps\n    if (suspense.deps > 0) {\n        // has async\n        // invoke @fallback event\n        triggerEvent(vnode, 'onPending');\n        triggerEvent(vnode, 'onFallback');\n        // mount the fallback tree\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds);\n        setActiveBranch(suspense, vnode.ssFallback);\n    }\n    else {\n        // Suspense has no async deps. Just resolve.\n        suspense.resolve();\n    }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n    const suspense = (n2.suspense = n1.suspense);\n    suspense.vnode = n2;\n    n2.el = n1.el;\n    const newBranch = n2.ssContent;\n    const newFallback = n2.ssFallback;\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n    if (pendingBranch) {\n        suspense.pendingBranch = newBranch;\n        if (isSameVNodeType(newBranch, pendingBranch)) {\n            // same root type but content may have changed.\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            if (suspense.deps <= 0) {\n                suspense.resolve();\n            }\n            else if (isInFallback) {\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                isSVG, slotScopeIds, optimized);\n                setActiveBranch(suspense, newFallback);\n            }\n        }\n        else {\n            // toggled before pending tree is resolved\n            suspense.pendingId++;\n            if (isHydrating) {\n                // if toggled before hydration is finished, the current DOM tree is\n                // no longer valid. set it as the active branch so it will be unmounted\n                // when resolved\n                suspense.isHydrating = false;\n                suspense.activeBranch = pendingBranch;\n            }\n            else {\n                unmount(pendingBranch, parentComponent, suspense);\n            }\n            // increment pending ID. this is used to invalidate async callbacks\n            // reset suspense state\n            suspense.deps = 0;\n            // discard effects from pending branch\n            suspense.effects.length = 0;\n            // discard previous container\n            suspense.hiddenContainer = createElement('div');\n            if (isInFallback) {\n                // already in fallback state\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                if (suspense.deps <= 0) {\n                    suspense.resolve();\n                }\n                else {\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                    isSVG, slotScopeIds, optimized);\n                    setActiveBranch(suspense, newFallback);\n                }\n            }\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n                // toggled \"back\" to current active branch\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                // force resolve\n                suspense.resolve(true);\n            }\n            else {\n                // switched to a 3rd branch\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                if (suspense.deps <= 0) {\n                    suspense.resolve();\n                }\n            }\n        }\n    }\n    else {\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n            // root did not change, just normal patch\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            setActiveBranch(suspense, newBranch);\n        }\n        else {\n            // root node toggled\n            // invoke @pending event\n            triggerEvent(n2, 'onPending');\n            // mount pending branch in off-dom container\n            suspense.pendingBranch = newBranch;\n            suspense.pendingId++;\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            if (suspense.deps <= 0) {\n                // incoming branch has no async deps, resolve now.\n                suspense.resolve();\n            }\n            else {\n                const { timeout, pendingId } = suspense;\n                if (timeout > 0) {\n                    setTimeout(() => {\n                        if (suspense.pendingId === pendingId) {\n                            suspense.fallback(newFallback);\n                        }\n                    }, timeout);\n                }\n                else if (timeout === 0) {\n                    suspense.fallback(newFallback);\n                }\n            }\n        }\n    }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\n        hasWarned = true;\n        // @ts-ignore `console.info` cannot be null error\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\n    }\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\n    const timeout = vnode.props ? toNumber(vnode.props.timeout) : undefined;\n    if ((process.env.NODE_ENV !== 'production')) {\n        assertNumber(timeout, `Suspense timeout`);\n    }\n    const suspense = {\n        vnode,\n        parent,\n        parentComponent,\n        isSVG,\n        container,\n        hiddenContainer,\n        anchor,\n        deps: 0,\n        pendingId: 0,\n        timeout: typeof timeout === 'number' ? timeout : -1,\n        activeBranch: null,\n        pendingBranch: null,\n        isInFallback: true,\n        isHydrating,\n        isUnmounted: false,\n        effects: [],\n        resolve(resume = false) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!resume && !suspense.pendingBranch) {\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\n                }\n                if (suspense.isUnmounted) {\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\n                }\n            }\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\n            if (suspense.isHydrating) {\n                suspense.isHydrating = false;\n            }\n            else if (!resume) {\n                const delayEnter = activeBranch &&\n                    pendingBranch.transition &&\n                    pendingBranch.transition.mode === 'out-in';\n                if (delayEnter) {\n                    activeBranch.transition.afterLeave = () => {\n                        if (pendingId === suspense.pendingId) {\n                            move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\n                        }\n                    };\n                }\n                // this is initial anchor on mount\n                let { anchor } = suspense;\n                // unmount current active tree\n                if (activeBranch) {\n                    // if the fallback tree was mounted, it may have been moved\n                    // as part of a parent suspense. get the latest anchor for insertion\n                    anchor = next(activeBranch);\n                    unmount(activeBranch, parentComponent, suspense, true);\n                }\n                if (!delayEnter) {\n                    // move content from off-dom container to actual container\n                    move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\n                }\n            }\n            setActiveBranch(suspense, pendingBranch);\n            suspense.pendingBranch = null;\n            suspense.isInFallback = false;\n            // flush buffered effects\n            // check if there is a pending parent suspense\n            let parent = suspense.parent;\n            let hasUnresolvedAncestor = false;\n            while (parent) {\n                if (parent.pendingBranch) {\n                    // found a pending parent suspense, merge buffered post jobs\n                    // into that parent\n                    parent.effects.push(...effects);\n                    hasUnresolvedAncestor = true;\n                    break;\n                }\n                parent = parent.parent;\n            }\n            // no pending parent suspense, flush all jobs\n            if (!hasUnresolvedAncestor) {\n                queuePostFlushCb(effects);\n            }\n            suspense.effects = [];\n            // invoke @resolve event\n            triggerEvent(vnode, 'onResolve');\n        },\n        fallback(fallbackVNode) {\n            if (!suspense.pendingBranch) {\n                return;\n            }\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\n            // invoke @fallback event\n            triggerEvent(vnode, 'onFallback');\n            const anchor = next(activeBranch);\n            const mountFallback = () => {\n                if (!suspense.isInFallback) {\n                    return;\n                }\n                // mount the fallback tree\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                isSVG, slotScopeIds, optimized);\n                setActiveBranch(suspense, fallbackVNode);\n            };\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\n            if (delayEnter) {\n                activeBranch.transition.afterLeave = mountFallback;\n            }\n            suspense.isInFallback = true;\n            // unmount current active branch\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\n            true // shouldRemove\n            );\n            if (!delayEnter) {\n                mountFallback();\n            }\n        },\n        move(container, anchor, type) {\n            suspense.activeBranch &&\n                move(suspense.activeBranch, container, anchor, type);\n            suspense.container = container;\n        },\n        next() {\n            return suspense.activeBranch && next(suspense.activeBranch);\n        },\n        registerDep(instance, setupRenderEffect) {\n            const isInPendingSuspense = !!suspense.pendingBranch;\n            if (isInPendingSuspense) {\n                suspense.deps++;\n            }\n            const hydratedEl = instance.vnode.el;\n            instance\n                .asyncDep.catch(err => {\n                handleError(err, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\n            })\n                .then(asyncSetupResult => {\n                // retry when the setup() promise resolves.\n                // component may have been unmounted before resolve.\n                if (instance.isUnmounted ||\n                    suspense.isUnmounted ||\n                    suspense.pendingId !== instance.suspenseId) {\n                    return;\n                }\n                // retry from this component\n                instance.asyncResolved = true;\n                const { vnode } = instance;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(vnode);\n                }\n                handleSetupResult(instance, asyncSetupResult, false);\n                if (hydratedEl) {\n                    // vnode may have been replaced if an update happened before the\n                    // async dep is resolved.\n                    vnode.el = hydratedEl;\n                }\n                const placeholder = !hydratedEl && instance.subTree.el;\n                setupRenderEffect(instance, vnode, \n                // component may have been moved before resolve.\n                // if this is not a hydration, instance.subTree will be the comment\n                // placeholder.\n                parentNode(hydratedEl || instance.subTree.el), \n                // anchor will not be used if this is hydration, so only need to\n                // consider the comment placeholder case.\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\n                if (placeholder) {\n                    remove(placeholder);\n                }\n                updateHOCHostEl(instance, vnode.el);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n                // only decrease deps count if suspense is not already resolved\n                if (isInPendingSuspense && --suspense.deps === 0) {\n                    suspense.resolve();\n                }\n            });\n        },\n        unmount(parentSuspense, doRemove) {\n            suspense.isUnmounted = true;\n            if (suspense.activeBranch) {\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\n            }\n            if (suspense.pendingBranch) {\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\n            }\n        }\n    };\n    return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n    /* eslint-disable no-restricted-globals */\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\n    // there are two possible scenarios for server-rendered suspense:\n    // - success: ssr content should be fully resolved\n    // - failure: ssr content should be the fallback branch.\n    // however, on the client we don't really know if it has failed or not\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\n    // need to construct a suspense boundary first\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\n    if (suspense.deps === 0) {\n        suspense.resolve();\n    }\n    return result;\n    /* eslint-enable no-restricted-globals */\n}\nfunction normalizeSuspenseChildren(vnode) {\n    const { shapeFlag, children } = vnode;\n    const isSlotChildren = shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */;\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\n    vnode.ssFallback = isSlotChildren\n        ? normalizeSuspenseSlot(children.fallback)\n        : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n    let block;\n    if (isFunction(s)) {\n        const trackBlock = isBlockTreeEnabled && s._c;\n        if (trackBlock) {\n            // disableTracking: false\n            // allow block tracking for compiled slots\n            // (see ./componentRenderContext.ts)\n            s._d = false;\n            openBlock();\n        }\n        s = s();\n        if (trackBlock) {\n            s._d = true;\n            block = currentBlock;\n            closeBlock();\n        }\n    }\n    if (isArray(s)) {\n        const singleChild = filterSingleRoot(s);\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\n            warn(`<Suspense> slots expect a single root node.`);\n        }\n        s = singleChild;\n    }\n    s = normalizeVNode(s);\n    if (block && !s.dynamicChildren) {\n        s.dynamicChildren = block.filter(c => c !== s);\n    }\n    return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n    if (suspense && suspense.pendingBranch) {\n        if (isArray(fn)) {\n            suspense.effects.push(...fn);\n        }\n        else {\n            suspense.effects.push(fn);\n        }\n    }\n    else {\n        queuePostFlushCb(fn);\n    }\n}\nfunction setActiveBranch(suspense, branch) {\n    suspense.activeBranch = branch;\n    const { vnode, parentComponent } = suspense;\n    const el = (vnode.el = branch.el);\n    // in case suspense is the root node of a component,\n    // recursively update the HOC el\n    if (parentComponent && parentComponent.subTree === vnode) {\n        parentComponent.vnode.el = el;\n        updateHOCHostEl(parentComponent, el);\n    }\n}\n\nfunction provide(key, value) {\n    if (!currentInstance) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`provide() can only be used inside setup().`);\n        }\n    }\n    else {\n        let provides = currentInstance.provides;\n        // by default an instance inherits its parent's provides object\n        // but when it needs to provide values of its own, it creates its\n        // own provides object using parent provides object as prototype.\n        // this way in `inject` we can simply look up injections from direct\n        // parent and let the prototype chain do the work.\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n        if (parentProvides === provides) {\n            provides = currentInstance.provides = Object.create(parentProvides);\n        }\n        // TS doesn't allow symbol as index type\n        provides[key] = value;\n    }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n    // fallback to `currentRenderingInstance` so that this can be called in\n    // a functional component\n    const instance = currentInstance || currentRenderingInstance;\n    if (instance) {\n        // #2400\n        // to support `app.use` plugins,\n        // fallback to appContext's `provides` if the instance is at root\n        const provides = instance.parent == null\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\n            : instance.parent.provides;\n        if (provides && key in provides) {\n            // TS doesn't allow symbol as index type\n            return provides[key];\n        }\n        else if (arguments.length > 1) {\n            return treatDefaultAsFactory && isFunction(defaultValue)\n                ? defaultValue.call(instance.proxy)\n                : defaultValue;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`injection \"${String(key)}\" not found.`);\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`inject() can only be used inside setup() or functional components.`);\n    }\n}\n\n// Simple effect.\nfunction watchEffect(effect, options) {\n    return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n    return doWatch(effect, null, (process.env.NODE_ENV !== 'production') ? Object.assign(Object.assign({}, options), { flush: 'post' }) : { flush: 'post' });\n}\nfunction watchSyncEffect(effect, options) {\n    return doWatch(effect, null, (process.env.NODE_ENV !== 'production') ? Object.assign(Object.assign({}, options), { flush: 'sync' }) : { flush: 'sync' });\n}\n// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE = {};\n// implementation\nfunction watch(source, cb, options) {\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\n            `supports \\`watch(source, cb, options?) signature.`);\n    }\n    return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\n        if (immediate !== undefined) {\n            warn(`watch() \"immediate\" option is only respected when using the ` +\n                `watch(source, callback, options?) signature.`);\n        }\n        if (deep !== undefined) {\n            warn(`watch() \"deep\" option is only respected when using the ` +\n                `watch(source, callback, options?) signature.`);\n        }\n    }\n    const warnInvalidSource = (s) => {\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\n            `a reactive object, or an array of these types.`);\n    };\n    const instance = getCurrentScope() === (currentInstance === null || currentInstance === void 0 ? void 0 : currentInstance.scope) ? currentInstance : null;\n    // const instance = currentInstance\n    let getter;\n    let forceTrigger = false;\n    let isMultiSource = false;\n    if (isRef(source)) {\n        getter = () => source.value;\n        forceTrigger = isShallow$1(source);\n    }\n    else if (isReactive(source)) {\n        getter = () => source;\n        deep = true;\n    }\n    else if (isArray(source)) {\n        isMultiSource = true;\n        forceTrigger = source.some(s => isReactive(s) || isShallow$1(s));\n        getter = () => source.map(s => {\n            if (isRef(s)) {\n                return s.value;\n            }\n            else if (isReactive(s)) {\n                return traverse(s);\n            }\n            else if (isFunction(s)) {\n                return callWithErrorHandling(s, instance, 2 /* ErrorCodes.WATCH_GETTER */);\n            }\n            else {\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\n            }\n        });\n    }\n    else if (isFunction(source)) {\n        if (cb) {\n            // getter with cb\n            getter = () => callWithErrorHandling(source, instance, 2 /* ErrorCodes.WATCH_GETTER */);\n        }\n        else {\n            // no cb -> simple effect\n            getter = () => {\n                if (instance && instance.isUnmounted) {\n                    return;\n                }\n                if (cleanup) {\n                    cleanup();\n                }\n                return callWithAsyncErrorHandling(source, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [onCleanup]);\n            };\n        }\n    }\n    else {\n        getter = NOOP;\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\n    }\n    if (cb && deep) {\n        const baseGetter = getter;\n        getter = () => traverse(baseGetter());\n    }\n    let cleanup;\n    let onCleanup = (fn) => {\n        cleanup = effect.onStop = () => {\n            callWithErrorHandling(fn, instance, 4 /* ErrorCodes.WATCH_CLEANUP */);\n        };\n    };\n    // in SSR there is no need to setup an actual effect, and it should be noop\n    // unless it's eager or sync flush\n    let ssrCleanup;\n    if (isInSSRComponentSetup) {\n        // we will also not call the invalidate callback (+ runner is not set up)\n        onCleanup = NOOP;\n        if (!cb) {\n            getter();\n        }\n        else if (immediate) {\n            callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\n                getter(),\n                isMultiSource ? [] : undefined,\n                onCleanup\n            ]);\n        }\n        if (flush === 'sync') {\n            const ctx = useSSRContext();\n            ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n        }\n        else {\n            return NOOP;\n        }\n    }\n    let oldValue = isMultiSource\n        ? new Array(source.length).fill(INITIAL_WATCHER_VALUE)\n        : INITIAL_WATCHER_VALUE;\n    const job = () => {\n        if (!effect.active) {\n            return;\n        }\n        if (cb) {\n            // watch(source, cb)\n            const newValue = effect.run();\n            if (deep ||\n                forceTrigger ||\n                (isMultiSource\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\n                    : hasChanged(newValue, oldValue)) ||\n                (false  )) {\n                // cleanup before running cb again\n                if (cleanup) {\n                    cleanup();\n                }\n                callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\n                    newValue,\n                    // pass undefined as the old value when it's changed for the first time\n                    oldValue === INITIAL_WATCHER_VALUE\n                        ? undefined\n                        : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE\n                            ? []\n                            : oldValue,\n                    onCleanup\n                ]);\n                oldValue = newValue;\n            }\n        }\n        else {\n            // watchEffect\n            effect.run();\n        }\n    };\n    // important: mark the job as a watcher callback so that scheduler knows\n    // it is allowed to self-trigger (#1727)\n    job.allowRecurse = !!cb;\n    let scheduler;\n    if (flush === 'sync') {\n        scheduler = job; // the scheduler function gets called directly\n    }\n    else if (flush === 'post') {\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n    }\n    else {\n        // default: 'pre'\n        job.pre = true;\n        if (instance)\n            job.id = instance.uid;\n        scheduler = () => queueJob(job);\n    }\n    const effect = new ReactiveEffect(getter, scheduler);\n    if ((process.env.NODE_ENV !== 'production')) {\n        effect.onTrack = onTrack;\n        effect.onTrigger = onTrigger;\n    }\n    // initial run\n    if (cb) {\n        if (immediate) {\n            job();\n        }\n        else {\n            oldValue = effect.run();\n        }\n    }\n    else if (flush === 'post') {\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\n    }\n    else {\n        effect.run();\n    }\n    const unwatch = () => {\n        effect.stop();\n        if (instance && instance.scope) {\n            remove(instance.scope.effects, effect);\n        }\n    };\n    if (ssrCleanup)\n        ssrCleanup.push(unwatch);\n    return unwatch;\n}\n// this.$watch\nfunction instanceWatch(source, value, options) {\n    const publicThis = this.proxy;\n    const getter = isString(source)\n        ? source.includes('.')\n            ? createPathGetter(publicThis, source)\n            : () => publicThis[source]\n        : source.bind(publicThis, publicThis);\n    let cb;\n    if (isFunction(value)) {\n        cb = value;\n    }\n    else {\n        cb = value.handler;\n        options = value;\n    }\n    const cur = currentInstance;\n    setCurrentInstance(this);\n    const res = doWatch(getter, cb.bind(publicThis), options);\n    if (cur) {\n        setCurrentInstance(cur);\n    }\n    else {\n        unsetCurrentInstance();\n    }\n    return res;\n}\nfunction createPathGetter(ctx, path) {\n    const segments = path.split('.');\n    return () => {\n        let cur = ctx;\n        for (let i = 0; i < segments.length && cur; i++) {\n            cur = cur[segments[i]];\n        }\n        return cur;\n    };\n}\nfunction traverse(value, seen) {\n    if (!isObject(value) || value[\"__v_skip\" /* ReactiveFlags.SKIP */]) {\n        return value;\n    }\n    seen = seen || new Set();\n    if (seen.has(value)) {\n        return value;\n    }\n    seen.add(value);\n    if (isRef(value)) {\n        traverse(value.value, seen);\n    }\n    else if (isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            traverse(value[i], seen);\n        }\n    }\n    else if (isSet(value) || isMap(value)) {\n        value.forEach((v) => {\n            traverse(v, seen);\n        });\n    }\n    else if (isPlainObject(value)) {\n        for (const key in value) {\n            traverse(value[key], seen);\n        }\n    }\n    return value;\n}\n\nfunction useTransitionState() {\n    const state = {\n        isMounted: false,\n        isLeaving: false,\n        isUnmounting: false,\n        leavingVNodes: new Map()\n    };\n    onMounted(() => {\n        state.isMounted = true;\n    });\n    onBeforeUnmount(() => {\n        state.isUnmounting = true;\n    });\n    return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionImpl = {\n    name: `BaseTransition`,\n    props: {\n        mode: String,\n        appear: Boolean,\n        persisted: Boolean,\n        // enter\n        onBeforeEnter: TransitionHookValidator,\n        onEnter: TransitionHookValidator,\n        onAfterEnter: TransitionHookValidator,\n        onEnterCancelled: TransitionHookValidator,\n        // leave\n        onBeforeLeave: TransitionHookValidator,\n        onLeave: TransitionHookValidator,\n        onAfterLeave: TransitionHookValidator,\n        onLeaveCancelled: TransitionHookValidator,\n        // appear\n        onBeforeAppear: TransitionHookValidator,\n        onAppear: TransitionHookValidator,\n        onAfterAppear: TransitionHookValidator,\n        onAppearCancelled: TransitionHookValidator\n    },\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        const state = useTransitionState();\n        let prevTransitionKey;\n        return () => {\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\n            if (!children || !children.length) {\n                return;\n            }\n            let child = children[0];\n            if (children.length > 1) {\n                let hasFound = false;\n                // locate first non-comment child\n                for (const c of children) {\n                    if (c.type !== Comment) {\n                        if ((process.env.NODE_ENV !== 'production') && hasFound) {\n                            // warn more than one non-comment child\n                            warn('<transition> can only be used on a single element or component. ' +\n                                'Use <transition-group> for lists.');\n                            break;\n                        }\n                        child = c;\n                        hasFound = true;\n                        if (!(process.env.NODE_ENV !== 'production'))\n                            break;\n                    }\n                }\n            }\n            // there's no need to track reactivity for these props so use the raw\n            // props for a bit better perf\n            const rawProps = toRaw(props);\n            const { mode } = rawProps;\n            // check mode\n            if ((process.env.NODE_ENV !== 'production') &&\n                mode &&\n                mode !== 'in-out' &&\n                mode !== 'out-in' &&\n                mode !== 'default') {\n                warn(`invalid <transition> mode: ${mode}`);\n            }\n            if (state.isLeaving) {\n                return emptyPlaceholder(child);\n            }\n            // in the case of <transition><keep-alive/></transition>, we need to\n            // compare the type of the kept-alive children.\n            const innerChild = getKeepAliveChild(child);\n            if (!innerChild) {\n                return emptyPlaceholder(child);\n            }\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\n            setTransitionHooks(innerChild, enterHooks);\n            const oldChild = instance.subTree;\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n            let transitionKeyChanged = false;\n            const { getTransitionKey } = innerChild.type;\n            if (getTransitionKey) {\n                const key = getTransitionKey();\n                if (prevTransitionKey === undefined) {\n                    prevTransitionKey = key;\n                }\n                else if (key !== prevTransitionKey) {\n                    prevTransitionKey = key;\n                    transitionKeyChanged = true;\n                }\n            }\n            // handle mode\n            if (oldInnerChild &&\n                oldInnerChild.type !== Comment &&\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\n                // update old tree's hooks in case of dynamic transition\n                setTransitionHooks(oldInnerChild, leavingHooks);\n                // switching between different views\n                if (mode === 'out-in') {\n                    state.isLeaving = true;\n                    // return placeholder node and queue update when leave finishes\n                    leavingHooks.afterLeave = () => {\n                        state.isLeaving = false;\n                        // #6835\n                        // it also needs to be updated when active is undefined\n                        if (instance.update.active !== false) {\n                            instance.update();\n                        }\n                    };\n                    return emptyPlaceholder(child);\n                }\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n                        // early removal callback\n                        el._leaveCb = () => {\n                            earlyRemove();\n                            el._leaveCb = undefined;\n                            delete enterHooks.delayedLeave;\n                        };\n                        enterHooks.delayedLeave = delayedLeave;\n                    };\n                }\n            }\n            return child;\n        };\n    }\n};\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n    const { leavingVNodes } = state;\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\n    if (!leavingVNodesCache) {\n        leavingVNodesCache = Object.create(null);\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\n    }\n    return leavingVNodesCache;\n}\n// The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\n    const key = String(vnode.key);\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n    const callHook = (hook, args) => {\n        hook &&\n            callWithAsyncErrorHandling(hook, instance, 9 /* ErrorCodes.TRANSITION_HOOK */, args);\n    };\n    const callAsyncHook = (hook, args) => {\n        const done = args[1];\n        callHook(hook, args);\n        if (isArray(hook)) {\n            if (hook.every(hook => hook.length <= 1))\n                done();\n        }\n        else if (hook.length <= 1) {\n            done();\n        }\n    };\n    const hooks = {\n        mode,\n        persisted,\n        beforeEnter(el) {\n            let hook = onBeforeEnter;\n            if (!state.isMounted) {\n                if (appear) {\n                    hook = onBeforeAppear || onBeforeEnter;\n                }\n                else {\n                    return;\n                }\n            }\n            // for same element (v-show)\n            if (el._leaveCb) {\n                el._leaveCb(true /* cancelled */);\n            }\n            // for toggled element with same key (v-if)\n            const leavingVNode = leavingVNodesCache[key];\n            if (leavingVNode &&\n                isSameVNodeType(vnode, leavingVNode) &&\n                leavingVNode.el._leaveCb) {\n                // force early removal (not cancelled)\n                leavingVNode.el._leaveCb();\n            }\n            callHook(hook, [el]);\n        },\n        enter(el) {\n            let hook = onEnter;\n            let afterHook = onAfterEnter;\n            let cancelHook = onEnterCancelled;\n            if (!state.isMounted) {\n                if (appear) {\n                    hook = onAppear || onEnter;\n                    afterHook = onAfterAppear || onAfterEnter;\n                    cancelHook = onAppearCancelled || onEnterCancelled;\n                }\n                else {\n                    return;\n                }\n            }\n            let called = false;\n            const done = (el._enterCb = (cancelled) => {\n                if (called)\n                    return;\n                called = true;\n                if (cancelled) {\n                    callHook(cancelHook, [el]);\n                }\n                else {\n                    callHook(afterHook, [el]);\n                }\n                if (hooks.delayedLeave) {\n                    hooks.delayedLeave();\n                }\n                el._enterCb = undefined;\n            });\n            if (hook) {\n                callAsyncHook(hook, [el, done]);\n            }\n            else {\n                done();\n            }\n        },\n        leave(el, remove) {\n            const key = String(vnode.key);\n            if (el._enterCb) {\n                el._enterCb(true /* cancelled */);\n            }\n            if (state.isUnmounting) {\n                return remove();\n            }\n            callHook(onBeforeLeave, [el]);\n            let called = false;\n            const done = (el._leaveCb = (cancelled) => {\n                if (called)\n                    return;\n                called = true;\n                remove();\n                if (cancelled) {\n                    callHook(onLeaveCancelled, [el]);\n                }\n                else {\n                    callHook(onAfterLeave, [el]);\n                }\n                el._leaveCb = undefined;\n                if (leavingVNodesCache[key] === vnode) {\n                    delete leavingVNodesCache[key];\n                }\n            });\n            leavingVNodesCache[key] = vnode;\n            if (onLeave) {\n                callAsyncHook(onLeave, [el, done]);\n            }\n            else {\n                done();\n            }\n        },\n        clone(vnode) {\n            return resolveTransitionHooks(vnode, props, state, instance);\n        }\n    };\n    return hooks;\n}\n// the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\nfunction emptyPlaceholder(vnode) {\n    if (isKeepAlive(vnode)) {\n        vnode = cloneVNode(vnode);\n        vnode.children = null;\n        return vnode;\n    }\n}\nfunction getKeepAliveChild(vnode) {\n    return isKeepAlive(vnode)\n        ? vnode.children\n            ? vnode.children[0]\n            : undefined\n        : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n    if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */ && vnode.component) {\n        setTransitionHooks(vnode.component.subTree, hooks);\n    }\n    else if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n    }\n    else {\n        vnode.transition = hooks;\n    }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n    let ret = [];\n    let keyedFragmentCount = 0;\n    for (let i = 0; i < children.length; i++) {\n        let child = children[i];\n        // #5360 inherit parent key in case of <template v-for>\n        const key = parentKey == null\n            ? child.key\n            : String(parentKey) + String(child.key != null ? child.key : i);\n        // handle fragment children case, e.g. v-for\n        if (child.type === Fragment) {\n            if (child.patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */)\n                keyedFragmentCount++;\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\n        }\n        // comment placeholders should be skipped, e.g. v-if\n        else if (keepComment || child.type !== Comment) {\n            ret.push(key != null ? cloneVNode(child, { key }) : child);\n        }\n    }\n    // #1126 if a transition children list contains multiple sub fragments, these\n    // fragments will be merged into a flat children array. Since each v-for\n    // fragment may contain different static bindings inside, we need to de-op\n    // these children to force full diffs to ensure correct behavior.\n    if (keyedFragmentCount > 1) {\n        for (let i = 0; i < ret.length; i++) {\n            ret[i].patchFlag = -2 /* PatchFlags.BAIL */;\n        }\n    }\n    return ret;\n}\n\n// implementation, close to no-op\nfunction defineComponent(options) {\n    return isFunction(options) ? { setup: options, name: options.name } : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\nfunction defineAsyncComponent(source) {\n    if (isFunction(source)) {\n        source = { loader: source };\n    }\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\n    suspensible = true, onError: userOnError } = source;\n    let pendingRequest = null;\n    let resolvedComp;\n    let retries = 0;\n    const retry = () => {\n        retries++;\n        pendingRequest = null;\n        return load();\n    };\n    const load = () => {\n        let thisRequest;\n        return (pendingRequest ||\n            (thisRequest = pendingRequest =\n                loader()\n                    .catch(err => {\n                    err = err instanceof Error ? err : new Error(String(err));\n                    if (userOnError) {\n                        return new Promise((resolve, reject) => {\n                            const userRetry = () => resolve(retry());\n                            const userFail = () => reject(err);\n                            userOnError(err, userRetry, userFail, retries + 1);\n                        });\n                    }\n                    else {\n                        throw err;\n                    }\n                })\n                    .then((comp) => {\n                    if (thisRequest !== pendingRequest && pendingRequest) {\n                        return pendingRequest;\n                    }\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\n                        warn(`Async component loader resolved to undefined. ` +\n                            `If you are using retry(), make sure to return its return value.`);\n                    }\n                    // interop module default\n                    if (comp &&\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\n                        comp = comp.default;\n                    }\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\n                        throw new Error(`Invalid async component load result: ${comp}`);\n                    }\n                    resolvedComp = comp;\n                    return comp;\n                })));\n    };\n    return defineComponent({\n        name: 'AsyncComponentWrapper',\n        __asyncLoader: load,\n        get __asyncResolved() {\n            return resolvedComp;\n        },\n        setup() {\n            const instance = currentInstance;\n            // already resolved\n            if (resolvedComp) {\n                return () => createInnerComp(resolvedComp, instance);\n            }\n            const onError = (err) => {\n                pendingRequest = null;\n                handleError(err, instance, 13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\n            };\n            // suspense-controlled or SSR.\n            if ((suspensible && instance.suspense) ||\n                (isInSSRComponentSetup)) {\n                return load()\n                    .then(comp => {\n                    return () => createInnerComp(comp, instance);\n                })\n                    .catch(err => {\n                    onError(err);\n                    return () => errorComponent\n                        ? createVNode(errorComponent, {\n                            error: err\n                        })\n                        : null;\n                });\n            }\n            const loaded = ref(false);\n            const error = ref();\n            const delayed = ref(!!delay);\n            if (delay) {\n                setTimeout(() => {\n                    delayed.value = false;\n                }, delay);\n            }\n            if (timeout != null) {\n                setTimeout(() => {\n                    if (!loaded.value && !error.value) {\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\n                        onError(err);\n                        error.value = err;\n                    }\n                }, timeout);\n            }\n            load()\n                .then(() => {\n                loaded.value = true;\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n                    // parent is keep-alive, force update so the loaded component's\n                    // name is taken into account\n                    queueJob(instance.parent.update);\n                }\n            })\n                .catch(err => {\n                onError(err);\n                error.value = err;\n            });\n            return () => {\n                if (loaded.value && resolvedComp) {\n                    return createInnerComp(resolvedComp, instance);\n                }\n                else if (error.value && errorComponent) {\n                    return createVNode(errorComponent, {\n                        error: error.value\n                    });\n                }\n                else if (loadingComponent && !delayed.value) {\n                    return createVNode(loadingComponent);\n                }\n            };\n        }\n    });\n}\nfunction createInnerComp(comp, parent) {\n    const { ref, props, children, ce } = parent.vnode;\n    const vnode = createVNode(comp, props, children);\n    // ensure inner component inherits the async wrapper's ref owner\n    vnode.ref = ref;\n    // pass the custom element callback on to the inner comp\n    // and remove it from the async wrapper\n    vnode.ce = ce;\n    delete parent.vnode.ce;\n    return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n    name: `KeepAlive`,\n    // Marker for special handling inside the renderer. We are not using a ===\n    // check directly on KeepAlive in the renderer, because importing it directly\n    // would prevent it from being tree-shaken.\n    __isKeepAlive: true,\n    props: {\n        include: [String, RegExp, Array],\n        exclude: [String, RegExp, Array],\n        max: [String, Number]\n    },\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        // KeepAlive communicates with the instantiated renderer via the\n        // ctx where the renderer passes in its internals,\n        // and the KeepAlive instance exposes activate/deactivate implementations.\n        // The whole point of this is to avoid importing KeepAlive directly in the\n        // renderer to facilitate tree-shaking.\n        const sharedContext = instance.ctx;\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\n        // for KeepAlive, we just need to render its children\n        if (!sharedContext.renderer) {\n            return () => {\n                const children = slots.default && slots.default();\n                return children && children.length === 1 ? children[0] : children;\n            };\n        }\n        const cache = new Map();\n        const keys = new Set();\n        let current = null;\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            instance.__v_cache = cache;\n        }\n        const parentSuspense = instance.suspense;\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\n        const storageContainer = createElement('div');\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n            const instance = vnode.component;\n            move(vnode, container, anchor, 0 /* MoveType.ENTER */, parentSuspense);\n            // in case props have changed\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\n            queuePostRenderEffect(() => {\n                instance.isDeactivated = false;\n                if (instance.a) {\n                    invokeArrayFns(instance.a);\n                }\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n                if (vnodeHook) {\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\n                }\n            }, parentSuspense);\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                // Update components tree\n                devtoolsComponentAdded(instance);\n            }\n        };\n        sharedContext.deactivate = (vnode) => {\n            const instance = vnode.component;\n            move(vnode, storageContainer, null, 1 /* MoveType.LEAVE */, parentSuspense);\n            queuePostRenderEffect(() => {\n                if (instance.da) {\n                    invokeArrayFns(instance.da);\n                }\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n                if (vnodeHook) {\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\n                }\n                instance.isDeactivated = true;\n            }, parentSuspense);\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                // Update components tree\n                devtoolsComponentAdded(instance);\n            }\n        };\n        function unmount(vnode) {\n            // reset the shapeFlag so it can be properly unmounted\n            resetShapeFlag(vnode);\n            _unmount(vnode, instance, parentSuspense, true);\n        }\n        function pruneCache(filter) {\n            cache.forEach((vnode, key) => {\n                const name = getComponentName(vnode.type);\n                if (name && (!filter || !filter(name))) {\n                    pruneCacheEntry(key);\n                }\n            });\n        }\n        function pruneCacheEntry(key) {\n            const cached = cache.get(key);\n            if (!current || !isSameVNodeType(cached, current)) {\n                unmount(cached);\n            }\n            else if (current) {\n                // current active instance should no longer be kept-alive.\n                // we can't unmount it now but it might be later, so reset its flag now.\n                resetShapeFlag(current);\n            }\n            cache.delete(key);\n            keys.delete(key);\n        }\n        // prune cache on include/exclude prop change\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\n            include && pruneCache(name => matches(include, name));\n            exclude && pruneCache(name => !matches(exclude, name));\n        }, \n        // prune post-render after `current` has been updated\n        { flush: 'post', deep: true });\n        // cache sub tree after render\n        let pendingCacheKey = null;\n        const cacheSubtree = () => {\n            // fix #1621, the pendingCacheKey could be 0\n            if (pendingCacheKey != null) {\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n            }\n        };\n        onMounted(cacheSubtree);\n        onUpdated(cacheSubtree);\n        onBeforeUnmount(() => {\n            cache.forEach(cached => {\n                const { subTree, suspense } = instance;\n                const vnode = getInnerChild(subTree);\n                if (cached.type === vnode.type && cached.key === vnode.key) {\n                    // current instance will be unmounted as part of keep-alive's unmount\n                    resetShapeFlag(vnode);\n                    // but invoke its deactivated hook here\n                    const da = vnode.component.da;\n                    da && queuePostRenderEffect(da, suspense);\n                    return;\n                }\n                unmount(cached);\n            });\n        });\n        return () => {\n            pendingCacheKey = null;\n            if (!slots.default) {\n                return null;\n            }\n            const children = slots.default();\n            const rawVNode = children[0];\n            if (children.length > 1) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`KeepAlive should contain exactly one component child.`);\n                }\n                current = null;\n                return children;\n            }\n            else if (!isVNode(rawVNode) ||\n                (!(rawVNode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) &&\n                    !(rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */))) {\n                current = null;\n                return rawVNode;\n            }\n            let vnode = getInnerChild(rawVNode);\n            const comp = vnode.type;\n            // for async components, name check should be based in its loaded\n            // inner component if available\n            const name = getComponentName(isAsyncWrapper(vnode)\n                ? vnode.type.__asyncResolved || {}\n                : comp);\n            const { include, exclude, max } = props;\n            if ((include && (!name || !matches(include, name))) ||\n                (exclude && name && matches(exclude, name))) {\n                current = vnode;\n                return rawVNode;\n            }\n            const key = vnode.key == null ? comp : vnode.key;\n            const cachedVNode = cache.get(key);\n            // clone vnode if it's reused because we are going to mutate it\n            if (vnode.el) {\n                vnode = cloneVNode(vnode);\n                if (rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    rawVNode.ssContent = vnode;\n                }\n            }\n            // #1513 it's possible for the returned vnode to be cloned due to attr\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\n            // that is mounted. Instead of caching it directly, we store the pending\n            // key and cache `instance.subTree` (the normalized vnode) in\n            // beforeMount/beforeUpdate hooks.\n            pendingCacheKey = key;\n            if (cachedVNode) {\n                // copy over mounted state\n                vnode.el = cachedVNode.el;\n                vnode.component = cachedVNode.component;\n                if (vnode.transition) {\n                    // recursively update transition hooks on subTree\n                    setTransitionHooks(vnode, vnode.transition);\n                }\n                // avoid vnode being mounted as fresh\n                vnode.shapeFlag |= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n                // make this key the freshest\n                keys.delete(key);\n                keys.add(key);\n            }\n            else {\n                keys.add(key);\n                // prune oldest entry\n                if (max && keys.size > parseInt(max, 10)) {\n                    pruneCacheEntry(keys.values().next().value);\n                }\n            }\n            // avoid vnode being unmounted\n            vnode.shapeFlag |= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n            current = vnode;\n            return isSuspense(rawVNode.type) ? rawVNode : vnode;\n        };\n    }\n};\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n    if (isArray(pattern)) {\n        return pattern.some((p) => matches(p, name));\n    }\n    else if (isString(pattern)) {\n        return pattern.split(',').includes(name);\n    }\n    else if (isRegExp(pattern)) {\n        return pattern.test(name);\n    }\n    /* istanbul ignore next */\n    return false;\n}\nfunction onActivated(hook, target) {\n    registerKeepAliveHook(hook, \"a\" /* LifecycleHooks.ACTIVATED */, target);\n}\nfunction onDeactivated(hook, target) {\n    registerKeepAliveHook(hook, \"da\" /* LifecycleHooks.DEACTIVATED */, target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n    // cache the deactivate branch check wrapper for injected hooks so the same\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n    // deactivation check\".\n    const wrappedHook = hook.__wdc ||\n        (hook.__wdc = () => {\n            // only fire the hook if the target instance is NOT in a deactivated branch.\n            let current = target;\n            while (current) {\n                if (current.isDeactivated) {\n                    return;\n                }\n                current = current.parent;\n            }\n            return hook();\n        });\n    injectHook(type, wrappedHook, target);\n    // In addition to registering it on the target instance, we walk up the parent\n    // chain and register it on all ancestor instances that are keep-alive roots.\n    // This avoids the need to walk the entire component tree when invoking these\n    // hooks, and more importantly, avoids the need to track child components in\n    // arrays.\n    if (target) {\n        let current = target.parent;\n        while (current && current.parent) {\n            if (isKeepAlive(current.parent.vnode)) {\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\n            }\n            current = current.parent;\n        }\n    }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n    // injectHook wraps the original for error handling, so make sure to remove\n    // the wrapped version.\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\n    onUnmounted(() => {\n        remove(keepAliveRoot[type], injected);\n    }, target);\n}\nfunction resetShapeFlag(vnode) {\n    // bitwise operations to remove keep alive flags\n    vnode.shapeFlag &= ~256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n    vnode.shapeFlag &= ~512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n}\nfunction getInnerChild(vnode) {\n    return vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */ ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n    if (target) {\n        const hooks = target[type] || (target[type] = []);\n        // cache the error handling wrapper for injected hooks so the same hook\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n        // handling\".\n        const wrappedHook = hook.__weh ||\n            (hook.__weh = (...args) => {\n                if (target.isUnmounted) {\n                    return;\n                }\n                // disable tracking inside all lifecycle hooks\n                // since they can potentially be called inside effects.\n                pauseTracking();\n                // Set currentInstance during hook invocation.\n                // This assumes the hook does not synchronously trigger other hooks, which\n                // can only be false when the user does something really funky.\n                setCurrentInstance(target);\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\n                unsetCurrentInstance();\n                resetTracking();\n                return res;\n            });\n        if (prepend) {\n            hooks.unshift(wrappedHook);\n        }\n        else {\n            hooks.push(wrappedHook);\n        }\n        return wrappedHook;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\n        warn(`${apiName} is called when there is no active component instance to be ` +\n            `associated with. ` +\n            `Lifecycle injection APIs can only be used during execution of setup().` +\n            (` If you are using async setup(), make sure to register lifecycle ` +\n                    `hooks before the first await statement.`\n                ));\n    }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* LifecycleHooks.SERVER_PREFETCH */) &&\n    injectHook(lifecycle, (...args) => hook(...args), target);\nconst onBeforeMount = createHook(\"bm\" /* LifecycleHooks.BEFORE_MOUNT */);\nconst onMounted = createHook(\"m\" /* LifecycleHooks.MOUNTED */);\nconst onBeforeUpdate = createHook(\"bu\" /* LifecycleHooks.BEFORE_UPDATE */);\nconst onUpdated = createHook(\"u\" /* LifecycleHooks.UPDATED */);\nconst onBeforeUnmount = createHook(\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */);\nconst onUnmounted = createHook(\"um\" /* LifecycleHooks.UNMOUNTED */);\nconst onServerPrefetch = createHook(\"sp\" /* LifecycleHooks.SERVER_PREFETCH */);\nconst onRenderTriggered = createHook(\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */);\nconst onRenderTracked = createHook(\"rtc\" /* LifecycleHooks.RENDER_TRACKED */);\nfunction onErrorCaptured(hook, target = currentInstance) {\n    injectHook(\"ec\" /* LifecycleHooks.ERROR_CAPTURED */, hook, target);\n}\n\n/**\nRuntime helper for applying directives to a vnode. Example usage:\n\nconst comp = resolveComponent('comp')\nconst foo = resolveDirective('foo')\nconst bar = resolveDirective('bar')\n\nreturn withDirectives(h(comp), [\n  [foo, this.x],\n  [bar, this.y]\n])\n*/\nfunction validateDirectiveName(name) {\n    if (isBuiltInDirective(name)) {\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\n    }\n}\n/**\n * Adds directives to a VNode.\n */\nfunction withDirectives(vnode, directives) {\n    const internalInstance = currentRenderingInstance;\n    if (internalInstance === null) {\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\n        return vnode;\n    }\n    const instance = getExposeProxy(internalInstance) ||\n        internalInstance.proxy;\n    const bindings = vnode.dirs || (vnode.dirs = []);\n    for (let i = 0; i < directives.length; i++) {\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n        if (dir) {\n            if (isFunction(dir)) {\n                dir = {\n                    mounted: dir,\n                    updated: dir\n                };\n            }\n            if (dir.deep) {\n                traverse(value);\n            }\n            bindings.push({\n                dir,\n                instance,\n                value,\n                oldValue: void 0,\n                arg,\n                modifiers\n            });\n        }\n    }\n    return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n    const bindings = vnode.dirs;\n    const oldBindings = prevVNode && prevVNode.dirs;\n    for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        if (oldBindings) {\n            binding.oldValue = oldBindings[i].value;\n        }\n        let hook = binding.dir[name];\n        if (hook) {\n            // disable tracking inside all lifecycle hooks\n            // since they can potentially be called inside effects.\n            pauseTracking();\n            callWithAsyncErrorHandling(hook, instance, 8 /* ErrorCodes.DIRECTIVE_HOOK */, [\n                vnode.el,\n                binding,\n                vnode,\n                prevVNode\n            ]);\n            resetTracking();\n        }\n    }\n}\n\nconst COMPONENTS = 'components';\nconst DIRECTIVES = 'directives';\n/**\n * @private\n */\nfunction resolveComponent(name, maybeSelfReference) {\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol();\n/**\n * @private\n */\nfunction resolveDynamicComponent(component) {\n    if (isString(component)) {\n        return resolveAsset(COMPONENTS, component, false) || component;\n    }\n    else {\n        // invalid types will fallthrough to createVNode and raise warning\n        return (component || NULL_DYNAMIC_COMPONENT);\n    }\n}\n/**\n * @private\n */\nfunction resolveDirective(name) {\n    return resolveAsset(DIRECTIVES, name);\n}\n// implementation\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n    const instance = currentRenderingInstance || currentInstance;\n    if (instance) {\n        const Component = instance.type;\n        // explicit self name has highest priority\n        if (type === COMPONENTS) {\n            const selfName = getComponentName(Component, false /* do not include inferred name to avoid breaking existing code */);\n            if (selfName &&\n                (selfName === name ||\n                    selfName === camelize(name) ||\n                    selfName === capitalize(camelize(name)))) {\n                return Component;\n            }\n        }\n        const res = \n        // local registration\n        // check instance[type] first which is resolved for options API\n        resolve(instance[type] || Component[type], name) ||\n            // global registration\n            resolve(instance.appContext[type], name);\n        if (!res && maybeSelfReference) {\n            // fallback to implicit self-reference\n            return Component;\n        }\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\n            const extra = type === COMPONENTS\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\n                    `component resolution via compilerOptions.isCustomElement.`\n                : ``;\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n        }\n        return res;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\n            `can only be used in render() or setup().`);\n    }\n}\nfunction resolve(registry, name) {\n    return (registry &&\n        (registry[name] ||\n            registry[camelize(name)] ||\n            registry[capitalize(camelize(name))]));\n}\n\n/**\n * Actual implementation\n */\nfunction renderList(source, renderItem, cache, index) {\n    let ret;\n    const cached = (cache && cache[index]);\n    if (isArray(source) || isString(source)) {\n        ret = new Array(source.length);\n        for (let i = 0, l = source.length; i < l; i++) {\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\n        }\n    }\n    else if (typeof source === 'number') {\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\n            warn(`The v-for range expect an integer value but got ${source}.`);\n        }\n        ret = new Array(source);\n        for (let i = 0; i < source; i++) {\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\n        }\n    }\n    else if (isObject(source)) {\n        if (source[Symbol.iterator]) {\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\n        }\n        else {\n            const keys = Object.keys(source);\n            ret = new Array(keys.length);\n            for (let i = 0, l = keys.length; i < l; i++) {\n                const key = keys[i];\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n            }\n        }\n    }\n    else {\n        ret = [];\n    }\n    if (cache) {\n        cache[index] = ret;\n    }\n    return ret;\n}\n\n/**\n * Compiler runtime helper for creating dynamic slots object\n * @private\n */\nfunction createSlots(slots, dynamicSlots) {\n    for (let i = 0; i < dynamicSlots.length; i++) {\n        const slot = dynamicSlots[i];\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n        if (isArray(slot)) {\n            for (let j = 0; j < slot.length; j++) {\n                slots[slot[j].name] = slot[j].fn;\n            }\n        }\n        else if (slot) {\n            // conditional single slot generated by <template v-if=\"...\" #foo>\n            slots[slot.name] = slot.key\n                ? (...args) => {\n                    const res = slot.fn(...args);\n                    // attach branch key so each conditional branch is considered a\n                    // different fragment\n                    if (res)\n                        res.key = slot.key;\n                    return res;\n                }\n                : slot.fn;\n        }\n    }\n    return slots;\n}\n\n/**\n * Compiler runtime helper for rendering `<slot/>`\n * @private\n */\nfunction renderSlot(slots, name, props = {}, \n// this is not a user-facing function, so the fallback is always generated by\n// the compiler and guaranteed to be a function returning an array\nfallback, noSlotted) {\n    if (currentRenderingInstance.isCE ||\n        (currentRenderingInstance.parent &&\n            isAsyncWrapper(currentRenderingInstance.parent) &&\n            currentRenderingInstance.parent.isCE)) {\n        if (name !== 'default')\n            props.name = name;\n        return createVNode('slot', props, fallback && fallback());\n    }\n    let slot = slots[name];\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\n            `function. You need to mark this component with $dynamic-slots in the ` +\n            `parent template.`);\n        slot = () => [];\n    }\n    // a compiled slot disables block tracking by default to avoid manual\n    // invocation interfering with template-based block tracking, but in\n    // `renderSlot` we can be sure that it's template-based so we can force\n    // enable it.\n    if (slot && slot._c) {\n        slot._d = false;\n    }\n    openBlock();\n    const validSlotContent = slot && ensureValidVNode(slot(props));\n    const rendered = createBlock(Fragment, {\n        key: props.key ||\n            // slot content array of a dynamic conditional slot may have a branch\n            // key attached in the `createSlots` helper, respect that\n            (validSlotContent && validSlotContent.key) ||\n            `_${name}`\n    }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* SlotFlags.STABLE */\n        ? 64 /* PatchFlags.STABLE_FRAGMENT */\n        : -2 /* PatchFlags.BAIL */);\n    if (!noSlotted && rendered.scopeId) {\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\n    }\n    if (slot && slot._c) {\n        slot._d = true;\n    }\n    return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n    return vnodes.some(child => {\n        if (!isVNode(child))\n            return true;\n        if (child.type === Comment)\n            return false;\n        if (child.type === Fragment &&\n            !ensureValidVNode(child.children))\n            return false;\n        return true;\n    })\n        ? vnodes\n        : null;\n}\n\n/**\n * For prefixing keys in v-on=\"obj\" with \"on\"\n * @private\n */\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n    const ret = {};\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\n        warn(`v-on with no argument expects an object value.`);\n        return ret;\n    }\n    for (const key in obj) {\n        ret[preserveCaseIfNecessary && /[A-Z]/.test(key)\n            ? `on:${key}`\n            : toHandlerKey(key)] = obj[key];\n    }\n    return ret;\n}\n\n/**\n * #2437 In Vue 3, functional components do not have a public instance proxy but\n * they exist in the internal parent chain. For code that relies on traversing\n * public $parent chains, skip functional ones and go to the parent instead.\n */\nconst getPublicInstance = (i) => {\n    if (!i)\n        return null;\n    if (isStatefulComponent(i))\n        return getExposeProxy(i) || i.proxy;\n    return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = \n// Move PURE marker to new line to workaround compiler discarding it\n// due to type annotation\n/*#__PURE__*/ extend(Object.create(null), {\n    $: i => i,\n    $el: i => i.vnode.el,\n    $data: i => i.data,\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\n    $parent: i => getPublicInstance(i.parent),\n    $root: i => getPublicInstance(i.root),\n    $emit: i => i.emit,\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\n});\nconst isReservedPrefix = (key) => key === '_' || key === '$';\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n    get({ _: instance }, key) {\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n        // for internal formatters to know that this is a Vue instance\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\n            return true;\n        }\n        // data / props / ctx\n        // This getter gets called for every property access on the render context\n        // during render and is a major hotspot. The most expensive part of this\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\n        // access on a plain object, so we use an accessCache object (with null\n        // prototype) to memoize what access type a key corresponds to.\n        let normalizedProps;\n        if (key[0] !== '$') {\n            const n = accessCache[key];\n            if (n !== undefined) {\n                switch (n) {\n                    case 1 /* AccessTypes.SETUP */:\n                        return setupState[key];\n                    case 2 /* AccessTypes.DATA */:\n                        return data[key];\n                    case 4 /* AccessTypes.CONTEXT */:\n                        return ctx[key];\n                    case 3 /* AccessTypes.PROPS */:\n                        return props[key];\n                    // default: just fallthrough\n                }\n            }\n            else if (hasSetupBinding(setupState, key)) {\n                accessCache[key] = 1 /* AccessTypes.SETUP */;\n                return setupState[key];\n            }\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n                accessCache[key] = 2 /* AccessTypes.DATA */;\n                return data[key];\n            }\n            else if (\n            // only cache other properties when instance has declared (thus stable)\n            // props\n            (normalizedProps = instance.propsOptions[0]) &&\n                hasOwn(normalizedProps, key)) {\n                accessCache[key] = 3 /* AccessTypes.PROPS */;\n                return props[key];\n            }\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n                accessCache[key] = 4 /* AccessTypes.CONTEXT */;\n                return ctx[key];\n            }\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n                accessCache[key] = 0 /* AccessTypes.OTHER */;\n            }\n        }\n        const publicGetter = publicPropertiesMap[key];\n        let cssModule, globalProperties;\n        // public $xxx properties\n        if (publicGetter) {\n            if (key === '$attrs') {\n                track(instance, \"get\" /* TrackOpTypes.GET */, key);\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\n            }\n            return publicGetter(instance);\n        }\n        else if (\n        // css module (injected by vue-loader)\n        (cssModule = type.__cssModules) &&\n            (cssModule = cssModule[key])) {\n            return cssModule;\n        }\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n            // user may set custom properties to `this` that start with `$`\n            accessCache[key] = 4 /* AccessTypes.CONTEXT */;\n            return ctx[key];\n        }\n        else if (\n        // global properties\n        ((globalProperties = appContext.config.globalProperties),\n            hasOwn(globalProperties, key))) {\n            {\n                return globalProperties[key];\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production') &&\n            currentRenderingInstance &&\n            (!isString(key) ||\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\n                // to infinite warning loop\n                key.indexOf('__v') !== 0)) {\n            if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\n            }\n            else if (instance === currentRenderingInstance) {\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\n                    `but is not defined on instance.`);\n            }\n        }\n    },\n    set({ _: instance }, key, value) {\n        const { data, setupState, ctx } = instance;\n        if (hasSetupBinding(setupState, key)) {\n            setupState[key] = value;\n            return true;\n        }\n        else if ((process.env.NODE_ENV !== 'production') &&\n            setupState.__isScriptSetup &&\n            hasOwn(setupState, key)) {\n            warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n            return false;\n        }\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n            data[key] = value;\n            return true;\n        }\n        else if (hasOwn(instance.props, key)) {\n            (process.env.NODE_ENV !== 'production') && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n            return false;\n        }\n        if (key[0] === '$' && key.slice(1) in instance) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Attempting to mutate public property \"${key}\". ` +\n                    `Properties starting with $ are reserved and readonly.`);\n            return false;\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\n                Object.defineProperty(ctx, key, {\n                    enumerable: true,\n                    configurable: true,\n                    value\n                });\n            }\n            else {\n                ctx[key] = value;\n            }\n        }\n        return true;\n    },\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\n        let normalizedProps;\n        return (!!accessCache[key] ||\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\n            hasSetupBinding(setupState, key) ||\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\n            hasOwn(ctx, key) ||\n            hasOwn(publicPropertiesMap, key) ||\n            hasOwn(appContext.config.globalProperties, key));\n    },\n    defineProperty(target, key, descriptor) {\n        if (descriptor.get != null) {\n            // invalidate key cache of a getter based property #5417\n            target._.accessCache[key] = 0;\n        }\n        else if (hasOwn(descriptor, 'value')) {\n            this.set(target, key, descriptor.value, null);\n        }\n        return Reflect.defineProperty(target, key, descriptor);\n    }\n};\nif ((process.env.NODE_ENV !== 'production') && !false) {\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\n            `The keys will be empty in production mode to avoid performance overhead.`);\n        return Reflect.ownKeys(target);\n    };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\n    get(target, key) {\n        // fast path for unscopables when using `with` block\n        if (key === Symbol.unscopables) {\n            return;\n        }\n        return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\n        }\n        return has;\n    }\n});\n// dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\nfunction createDevRenderContext(instance) {\n    const target = {};\n    // expose internal instance for proxy handlers\n    Object.defineProperty(target, `_`, {\n        configurable: true,\n        enumerable: false,\n        get: () => instance\n    });\n    // expose public properties\n    Object.keys(publicPropertiesMap).forEach(key => {\n        Object.defineProperty(target, key, {\n            configurable: true,\n            enumerable: false,\n            get: () => publicPropertiesMap[key](instance),\n            // intercepted by the proxy so no need for implementation,\n            // but needed to prevent set errors\n            set: NOOP\n        });\n    });\n    return target;\n}\n// dev only\nfunction exposePropsOnRenderContext(instance) {\n    const { ctx, propsOptions: [propsOptions] } = instance;\n    if (propsOptions) {\n        Object.keys(propsOptions).forEach(key => {\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => instance.props[key],\n                set: NOOP\n            });\n        });\n    }\n}\n// dev only\nfunction exposeSetupStateOnRenderContext(instance) {\n    const { ctx, setupState } = instance;\n    Object.keys(toRaw(setupState)).forEach(key => {\n        if (!setupState.__isScriptSetup) {\n            if (isReservedPrefix(key[0])) {\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\n                    `which are reserved prefixes for Vue internals.`);\n                return;\n            }\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => setupState[key],\n                set: NOOP\n            });\n        }\n    });\n}\n\nfunction createDuplicateChecker() {\n    const cache = Object.create(null);\n    return (type, key) => {\n        if (cache[key]) {\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n        }\n        else {\n            cache[key] = type;\n        }\n    };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n    const options = resolveMergedOptions(instance);\n    const publicThis = instance.proxy;\n    const ctx = instance.ctx;\n    // do not cache property access on public proxy during state initialization\n    shouldCacheAccess = false;\n    // call beforeCreate first before accessing other options since\n    // the hook may mutate resolved options (#2791)\n    if (options.beforeCreate) {\n        callHook(options.beforeCreate, instance, \"bc\" /* LifecycleHooks.BEFORE_CREATE */);\n    }\n    const { \n    // state\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \n    // lifecycle\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \n    // public API\n    expose, inheritAttrs, \n    // assets\n    components, directives, filters } = options;\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\n    if ((process.env.NODE_ENV !== 'production')) {\n        const [propsOptions] = instance.propsOptions;\n        if (propsOptions) {\n            for (const key in propsOptions) {\n                checkDuplicateProperties(\"Props\" /* OptionTypes.PROPS */, key);\n            }\n        }\n    }\n    // options initialization order (to be consistent with Vue 2):\n    // - props (already done outside of this function)\n    // - inject\n    // - methods\n    // - data (deferred since it relies on `this` access)\n    // - computed\n    // - watch (deferred since it relies on `this` access)\n    if (injectOptions) {\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\n    }\n    if (methods) {\n        for (const key in methods) {\n            const methodHandler = methods[key];\n            if (isFunction(methodHandler)) {\n                // In dev mode, we use the `createRenderContext` function to define\n                // methods to the proxy target, and those are read-only but\n                // reconfigurable, so it needs to be redefined here\n                if ((process.env.NODE_ENV !== 'production')) {\n                    Object.defineProperty(ctx, key, {\n                        value: methodHandler.bind(publicThis),\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    });\n                }\n                else {\n                    ctx[key] = methodHandler.bind(publicThis);\n                }\n                if ((process.env.NODE_ENV !== 'production')) {\n                    checkDuplicateProperties(\"Methods\" /* OptionTypes.METHODS */, key);\n                }\n            }\n            else if ((process.env.NODE_ENV !== 'production')) {\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\n                    `Did you reference the function correctly?`);\n            }\n        }\n    }\n    if (dataOptions) {\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\n            warn(`The data option must be a function. ` +\n                `Plain object usage is no longer supported.`);\n        }\n        const data = dataOptions.call(publicThis, publicThis);\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\n                `intend to perform data fetching before component renders, use ` +\n                `async setup() + <Suspense>.`);\n        }\n        if (!isObject(data)) {\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\n        }\n        else {\n            instance.data = reactive(data);\n            if ((process.env.NODE_ENV !== 'production')) {\n                for (const key in data) {\n                    checkDuplicateProperties(\"Data\" /* OptionTypes.DATA */, key);\n                    // expose data on ctx during dev\n                    if (!isReservedPrefix(key[0])) {\n                        Object.defineProperty(ctx, key, {\n                            configurable: true,\n                            enumerable: true,\n                            get: () => data[key],\n                            set: NOOP\n                        });\n                    }\n                }\n            }\n        }\n    }\n    // state initialization complete at this point - start caching access\n    shouldCacheAccess = true;\n    if (computedOptions) {\n        for (const key in computedOptions) {\n            const opt = computedOptions[key];\n            const get = isFunction(opt)\n                ? opt.bind(publicThis, publicThis)\n                : isFunction(opt.get)\n                    ? opt.get.bind(publicThis, publicThis)\n                    : NOOP;\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\n                warn(`Computed property \"${key}\" has no getter.`);\n            }\n            const set = !isFunction(opt) && isFunction(opt.set)\n                ? opt.set.bind(publicThis)\n                : (process.env.NODE_ENV !== 'production')\n                    ? () => {\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\n                    }\n                    : NOOP;\n            const c = computed({\n                get,\n                set\n            });\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => c.value,\n                set: v => (c.value = v)\n            });\n            if ((process.env.NODE_ENV !== 'production')) {\n                checkDuplicateProperties(\"Computed\" /* OptionTypes.COMPUTED */, key);\n            }\n        }\n    }\n    if (watchOptions) {\n        for (const key in watchOptions) {\n            createWatcher(watchOptions[key], ctx, publicThis, key);\n        }\n    }\n    if (provideOptions) {\n        const provides = isFunction(provideOptions)\n            ? provideOptions.call(publicThis)\n            : provideOptions;\n        Reflect.ownKeys(provides).forEach(key => {\n            provide(key, provides[key]);\n        });\n    }\n    if (created) {\n        callHook(created, instance, \"c\" /* LifecycleHooks.CREATED */);\n    }\n    function registerLifecycleHook(register, hook) {\n        if (isArray(hook)) {\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\n        }\n        else if (hook) {\n            register(hook.bind(publicThis));\n        }\n    }\n    registerLifecycleHook(onBeforeMount, beforeMount);\n    registerLifecycleHook(onMounted, mounted);\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n    registerLifecycleHook(onUpdated, updated);\n    registerLifecycleHook(onActivated, activated);\n    registerLifecycleHook(onDeactivated, deactivated);\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\n    registerLifecycleHook(onRenderTracked, renderTracked);\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n    registerLifecycleHook(onUnmounted, unmounted);\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\n    if (isArray(expose)) {\n        if (expose.length) {\n            const exposed = instance.exposed || (instance.exposed = {});\n            expose.forEach(key => {\n                Object.defineProperty(exposed, key, {\n                    get: () => publicThis[key],\n                    set: val => (publicThis[key] = val)\n                });\n            });\n        }\n        else if (!instance.exposed) {\n            instance.exposed = {};\n        }\n    }\n    // options that are handled when creating the instance but also need to be\n    // applied from mixins\n    if (render && instance.render === NOOP) {\n        instance.render = render;\n    }\n    if (inheritAttrs != null) {\n        instance.inheritAttrs = inheritAttrs;\n    }\n    // asset options.\n    if (components)\n        instance.components = components;\n    if (directives)\n        instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\n    if (isArray(injectOptions)) {\n        injectOptions = normalizeInject(injectOptions);\n    }\n    for (const key in injectOptions) {\n        const opt = injectOptions[key];\n        let injected;\n        if (isObject(opt)) {\n            if ('default' in opt) {\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\n            }\n            else {\n                injected = inject(opt.from || key);\n            }\n        }\n        else {\n            injected = inject(opt);\n        }\n        if (isRef(injected)) {\n            // TODO remove the check in 3.3\n            if (unwrapRef) {\n                Object.defineProperty(ctx, key, {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => injected.value,\n                    set: v => (injected.value = v)\n                });\n            }\n            else {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\n                        `To opt-in to the new behavior now, ` +\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\n                        `temporary and will not be needed in the future.)`);\n                }\n                ctx[key] = injected;\n            }\n        }\n        else {\n            ctx[key] = injected;\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            checkDuplicateProperties(\"Inject\" /* OptionTypes.INJECT */, key);\n        }\n    }\n}\nfunction callHook(hook, instance, type) {\n    callWithAsyncErrorHandling(isArray(hook)\n        ? hook.map(h => h.bind(instance.proxy))\n        : hook.bind(instance.proxy), instance, type);\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n    const getter = key.includes('.')\n        ? createPathGetter(publicThis, key)\n        : () => publicThis[key];\n    if (isString(raw)) {\n        const handler = ctx[raw];\n        if (isFunction(handler)) {\n            watch(getter, handler);\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n        }\n    }\n    else if (isFunction(raw)) {\n        watch(getter, raw.bind(publicThis));\n    }\n    else if (isObject(raw)) {\n        if (isArray(raw)) {\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\n        }\n        else {\n            const handler = isFunction(raw.handler)\n                ? raw.handler.bind(publicThis)\n                : ctx[raw.handler];\n            if (isFunction(handler)) {\n                watch(getter, handler, raw);\n            }\n            else if ((process.env.NODE_ENV !== 'production')) {\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n            }\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`Invalid watch option: \"${key}\"`, raw);\n    }\n}\n/**\n * Resolve merged options and cache it on the component.\n * This is done only once per-component since the merging does not involve\n * instances.\n */\nfunction resolveMergedOptions(instance) {\n    const base = instance.type;\n    const { mixins, extends: extendsOptions } = base;\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\n    const cached = cache.get(base);\n    let resolved;\n    if (cached) {\n        resolved = cached;\n    }\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\n        {\n            resolved = base;\n        }\n    }\n    else {\n        resolved = {};\n        if (globalMixins.length) {\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\n        }\n        mergeOptions(resolved, base, optionMergeStrategies);\n    }\n    if (isObject(base)) {\n        cache.set(base, resolved);\n    }\n    return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n    const { mixins, extends: extendsOptions } = from;\n    if (extendsOptions) {\n        mergeOptions(to, extendsOptions, strats, true);\n    }\n    if (mixins) {\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\n    }\n    for (const key in from) {\n        if (asMixin && key === 'expose') {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\n                    `It should only be declared in the base component itself.`);\n        }\n        else {\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\n        }\n    }\n    return to;\n}\nconst internalOptionMergeStrats = {\n    data: mergeDataFn,\n    props: mergeObjectOptions,\n    emits: mergeObjectOptions,\n    // objects\n    methods: mergeObjectOptions,\n    computed: mergeObjectOptions,\n    // lifecycle\n    beforeCreate: mergeAsArray,\n    created: mergeAsArray,\n    beforeMount: mergeAsArray,\n    mounted: mergeAsArray,\n    beforeUpdate: mergeAsArray,\n    updated: mergeAsArray,\n    beforeDestroy: mergeAsArray,\n    beforeUnmount: mergeAsArray,\n    destroyed: mergeAsArray,\n    unmounted: mergeAsArray,\n    activated: mergeAsArray,\n    deactivated: mergeAsArray,\n    errorCaptured: mergeAsArray,\n    serverPrefetch: mergeAsArray,\n    // assets\n    components: mergeObjectOptions,\n    directives: mergeObjectOptions,\n    // watch\n    watch: mergeWatchOptions,\n    // provide / inject\n    provide: mergeDataFn,\n    inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n    if (!from) {\n        return to;\n    }\n    if (!to) {\n        return from;\n    }\n    return function mergedDataFn() {\n        return (extend)(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\n    };\n}\nfunction mergeInject(to, from) {\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n    if (isArray(raw)) {\n        const res = {};\n        for (let i = 0; i < raw.length; i++) {\n            res[raw[i]] = raw[i];\n        }\n        return res;\n    }\n    return raw;\n}\nfunction mergeAsArray(to, from) {\n    return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n    return to ? extend(extend(Object.create(null), to), from) : from;\n}\nfunction mergeWatchOptions(to, from) {\n    if (!to)\n        return from;\n    if (!from)\n        return to;\n    const merged = extend(Object.create(null), to);\n    for (const key in from) {\n        merged[key] = mergeAsArray(to[key], from[key]);\n    }\n    return merged;\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\nisSSR = false) {\n    const props = {};\n    const attrs = {};\n    def(attrs, InternalObjectKey, 1);\n    instance.propsDefaults = Object.create(null);\n    setFullProps(instance, rawProps, props, attrs);\n    // ensure all declared prop keys are present\n    for (const key in instance.propsOptions[0]) {\n        if (!(key in props)) {\n            props[key] = undefined;\n        }\n    }\n    // validation\n    if ((process.env.NODE_ENV !== 'production')) {\n        validateProps(rawProps || {}, props, instance);\n    }\n    if (isStateful) {\n        // stateful\n        instance.props = isSSR ? props : shallowReactive(props);\n    }\n    else {\n        if (!instance.type.props) {\n            // functional w/ optional props, props === attrs\n            instance.props = attrs;\n        }\n        else {\n            // functional w/ declared props\n            instance.props = props;\n        }\n    }\n    instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n    while (instance) {\n        if (instance.type.__hmrId)\n            return true;\n        instance = instance.parent;\n    }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n    const { props, attrs, vnode: { patchFlag } } = instance;\n    const rawCurrentProps = toRaw(props);\n    const [options] = instance.propsOptions;\n    let hasAttrsChanged = false;\n    if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !((process.env.NODE_ENV !== 'production') && isInHmrContext(instance)) &&\n        (optimized || patchFlag > 0) &&\n        !(patchFlag & 16 /* PatchFlags.FULL_PROPS */)) {\n        if (patchFlag & 8 /* PatchFlags.PROPS */) {\n            // Compiler-generated props & no keys change, just set the updated\n            // the props.\n            const propsToUpdate = instance.vnode.dynamicProps;\n            for (let i = 0; i < propsToUpdate.length; i++) {\n                let key = propsToUpdate[i];\n                // skip if the prop key is a declared emit event listener\n                if (isEmitListener(instance.emitsOptions, key)) {\n                    continue;\n                }\n                // PROPS flag guarantees rawProps to be non-null\n                const value = rawProps[key];\n                if (options) {\n                    // attr / props separation was done on init and will be consistent\n                    // in this code path, so just check if attrs have it.\n                    if (hasOwn(attrs, key)) {\n                        if (value !== attrs[key]) {\n                            attrs[key] = value;\n                            hasAttrsChanged = true;\n                        }\n                    }\n                    else {\n                        const camelizedKey = camelize(key);\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\n                    }\n                }\n                else {\n                    if (value !== attrs[key]) {\n                        attrs[key] = value;\n                        hasAttrsChanged = true;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        // full props update.\n        if (setFullProps(instance, rawProps, props, attrs)) {\n            hasAttrsChanged = true;\n        }\n        // in case of dynamic props, check if we need to delete keys from\n        // the props object\n        let kebabKey;\n        for (const key in rawCurrentProps) {\n            if (!rawProps ||\n                // for camelCase\n                (!hasOwn(rawProps, key) &&\n                    // it's possible the original props was passed in as kebab-case\n                    // and converted to camelCase (#955)\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\n                if (options) {\n                    if (rawPrevProps &&\n                        // for camelCase\n                        (rawPrevProps[key] !== undefined ||\n                            // for kebab-case\n                            rawPrevProps[kebabKey] !== undefined)) {\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\n                    }\n                }\n                else {\n                    delete props[key];\n                }\n            }\n        }\n        // in the case of functional component w/o props declaration, props and\n        // attrs point to the same object so it should already have been updated.\n        if (attrs !== rawCurrentProps) {\n            for (const key in attrs) {\n                if (!rawProps ||\n                    (!hasOwn(rawProps, key) &&\n                        (!false ))) {\n                    delete attrs[key];\n                    hasAttrsChanged = true;\n                }\n            }\n        }\n    }\n    // trigger updates for $attrs in case it's used in component slots\n    if (hasAttrsChanged) {\n        trigger(instance, \"set\" /* TriggerOpTypes.SET */, '$attrs');\n    }\n    if ((process.env.NODE_ENV !== 'production')) {\n        validateProps(rawProps || {}, props, instance);\n    }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n    const [options, needCastKeys] = instance.propsOptions;\n    let hasAttrsChanged = false;\n    let rawCastValues;\n    if (rawProps) {\n        for (let key in rawProps) {\n            // key, ref are reserved and never passed down\n            if (isReservedProp(key)) {\n                continue;\n            }\n            const value = rawProps[key];\n            // prop option names are camelized during normalization, so to support\n            // kebab -> camel conversion here we need to camelize the key.\n            let camelKey;\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n                    props[camelKey] = value;\n                }\n                else {\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n                }\n            }\n            else if (!isEmitListener(instance.emitsOptions, key)) {\n                if (!(key in attrs) || value !== attrs[key]) {\n                    attrs[key] = value;\n                    hasAttrsChanged = true;\n                }\n            }\n        }\n    }\n    if (needCastKeys) {\n        const rawCurrentProps = toRaw(props);\n        const castValues = rawCastValues || EMPTY_OBJ;\n        for (let i = 0; i < needCastKeys.length; i++) {\n            const key = needCastKeys[i];\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\n        }\n    }\n    return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n    const opt = options[key];\n    if (opt != null) {\n        const hasDefault = hasOwn(opt, 'default');\n        // default values\n        if (hasDefault && value === undefined) {\n            const defaultValue = opt.default;\n            if (opt.type !== Function && isFunction(defaultValue)) {\n                const { propsDefaults } = instance;\n                if (key in propsDefaults) {\n                    value = propsDefaults[key];\n                }\n                else {\n                    setCurrentInstance(instance);\n                    value = propsDefaults[key] = defaultValue.call(null, props);\n                    unsetCurrentInstance();\n                }\n            }\n            else {\n                value = defaultValue;\n            }\n        }\n        // boolean casting\n        if (opt[0 /* BooleanFlags.shouldCast */]) {\n            if (isAbsent && !hasDefault) {\n                value = false;\n            }\n            else if (opt[1 /* BooleanFlags.shouldCastTrue */] &&\n                (value === '' || value === hyphenate(key))) {\n                value = true;\n            }\n        }\n    }\n    return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n    const cache = appContext.propsCache;\n    const cached = cache.get(comp);\n    if (cached) {\n        return cached;\n    }\n    const raw = comp.props;\n    const normalized = {};\n    const needCastKeys = [];\n    // apply mixin/extends props\n    let hasExtends = false;\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n        const extendProps = (raw) => {\n            hasExtends = true;\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\n            extend(normalized, props);\n            if (keys)\n                needCastKeys.push(...keys);\n        };\n        if (!asMixin && appContext.mixins.length) {\n            appContext.mixins.forEach(extendProps);\n        }\n        if (comp.extends) {\n            extendProps(comp.extends);\n        }\n        if (comp.mixins) {\n            comp.mixins.forEach(extendProps);\n        }\n    }\n    if (!raw && !hasExtends) {\n        if (isObject(comp)) {\n            cache.set(comp, EMPTY_ARR);\n        }\n        return EMPTY_ARR;\n    }\n    if (isArray(raw)) {\n        for (let i = 0; i < raw.length; i++) {\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\n                warn(`props must be strings when using array syntax.`, raw[i]);\n            }\n            const normalizedKey = camelize(raw[i]);\n            if (validatePropName(normalizedKey)) {\n                normalized[normalizedKey] = EMPTY_OBJ;\n            }\n        }\n    }\n    else if (raw) {\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\n            warn(`invalid props options`, raw);\n        }\n        for (const key in raw) {\n            const normalizedKey = camelize(key);\n            if (validatePropName(normalizedKey)) {\n                const opt = raw[key];\n                const prop = (normalized[normalizedKey] =\n                    isArray(opt) || isFunction(opt) ? { type: opt } : Object.assign({}, opt));\n                if (prop) {\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\n                    const stringIndex = getTypeIndex(String, prop.type);\n                    prop[0 /* BooleanFlags.shouldCast */] = booleanIndex > -1;\n                    prop[1 /* BooleanFlags.shouldCastTrue */] =\n                        stringIndex < 0 || booleanIndex < stringIndex;\n                    // if the prop needs boolean casting or default value\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\n                        needCastKeys.push(normalizedKey);\n                    }\n                }\n            }\n        }\n    }\n    const res = [normalized, needCastKeys];\n    if (isObject(comp)) {\n        cache.set(comp, res);\n    }\n    return res;\n}\nfunction validatePropName(key) {\n    if (key[0] !== '$') {\n        return true;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n    }\n    return false;\n}\n// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor) {\n    const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/);\n    return match ? match[2] : ctor === null ? 'null' : '';\n}\nfunction isSameType(a, b) {\n    return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n    if (isArray(expectedTypes)) {\n        return expectedTypes.findIndex(t => isSameType(t, type));\n    }\n    else if (isFunction(expectedTypes)) {\n        return isSameType(expectedTypes, type) ? 0 : -1;\n    }\n    return -1;\n}\n/**\n * dev only\n */\nfunction validateProps(rawProps, props, instance) {\n    const resolvedValues = toRaw(props);\n    const options = instance.propsOptions[0];\n    for (const key in options) {\n        let opt = options[key];\n        if (opt == null)\n            continue;\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\n    }\n}\n/**\n * dev only\n */\nfunction validateProp(name, value, prop, isAbsent) {\n    const { type, required, validator } = prop;\n    // required!\n    if (required && isAbsent) {\n        warn('Missing required prop: \"' + name + '\"');\n        return;\n    }\n    // missing but optional\n    if (value == null && !prop.required) {\n        return;\n    }\n    // type check\n    if (type != null && type !== true) {\n        let isValid = false;\n        const types = isArray(type) ? type : [type];\n        const expectedTypes = [];\n        // value is valid as long as one of the specified types match\n        for (let i = 0; i < types.length && !isValid; i++) {\n            const { valid, expectedType } = assertType(value, types[i]);\n            expectedTypes.push(expectedType || '');\n            isValid = valid;\n        }\n        if (!isValid) {\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\n            return;\n        }\n    }\n    // custom validator\n    if (validator && !validator(value)) {\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n    }\n}\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\n/**\n * dev only\n */\nfunction assertType(value, type) {\n    let valid;\n    const expectedType = getType(type);\n    if (isSimpleType(expectedType)) {\n        const t = typeof value;\n        valid = t === expectedType.toLowerCase();\n        // for primitive wrapper objects\n        if (!valid && t === 'object') {\n            valid = value instanceof type;\n        }\n    }\n    else if (expectedType === 'Object') {\n        valid = isObject(value);\n    }\n    else if (expectedType === 'Array') {\n        valid = isArray(value);\n    }\n    else if (expectedType === 'null') {\n        valid = value === null;\n    }\n    else {\n        valid = value instanceof type;\n    }\n    return {\n        valid,\n        expectedType\n    };\n}\n/**\n * dev only\n */\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\n    const expectedType = expectedTypes[0];\n    const receivedType = toRawType(value);\n    const expectedValue = styleValue(value, expectedType);\n    const receivedValue = styleValue(value, receivedType);\n    // check if we need to specify expected value\n    if (expectedTypes.length === 1 &&\n        isExplicable(expectedType) &&\n        !isBoolean(expectedType, receivedType)) {\n        message += ` with value ${expectedValue}`;\n    }\n    message += `, got ${receivedType} `;\n    // check if we need to specify received value\n    if (isExplicable(receivedType)) {\n        message += `with value ${receivedValue}.`;\n    }\n    return message;\n}\n/**\n * dev only\n */\nfunction styleValue(value, type) {\n    if (type === 'String') {\n        return `\"${value}\"`;\n    }\n    else if (type === 'Number') {\n        return `${Number(value)}`;\n    }\n    else {\n        return `${value}`;\n    }\n}\n/**\n * dev only\n */\nfunction isExplicable(type) {\n    const explicitTypes = ['string', 'number', 'boolean'];\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\n}\n/**\n * dev only\n */\nfunction isBoolean(...args) {\n    return args.some(elem => elem.toLowerCase() === 'boolean');\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\nconst normalizeSlotValue = (value) => isArray(value)\n    ? value.map(normalizeVNode)\n    : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n    if (rawSlot._n) {\n        // already normalized - #5353\n        return rawSlot;\n    }\n    const normalized = withCtx((...args) => {\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\n                `this will not track dependencies used in the slot. ` +\n                `Invoke the slot function inside the render function instead.`);\n        }\n        return normalizeSlotValue(rawSlot(...args));\n    }, ctx);\n    normalized._c = false;\n    return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n    const ctx = rawSlots._ctx;\n    for (const key in rawSlots) {\n        if (isInternalKey(key))\n            continue;\n        const value = rawSlots[key];\n        if (isFunction(value)) {\n            slots[key] = normalizeSlot(key, value, ctx);\n        }\n        else if (value != null) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                !(false )) {\n                warn(`Non-function value encountered for slot \"${key}\". ` +\n                    `Prefer function slots for better performance.`);\n            }\n            const normalized = normalizeSlotValue(value);\n            slots[key] = () => normalized;\n        }\n    }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n    if ((process.env.NODE_ENV !== 'production') &&\n        !isKeepAlive(instance.vnode) &&\n        !(false )) {\n        warn(`Non-function value encountered for default slot. ` +\n            `Prefer function slots for better performance.`);\n    }\n    const normalized = normalizeSlotValue(children);\n    instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n    if (instance.vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\n        const type = children._;\n        if (type) {\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\n            // we should avoid the proxy object polluting the slots of the internal instance\n            instance.slots = toRaw(children);\n            // make compiler marker non-enumerable\n            def(children, '_', type);\n        }\n        else {\n            normalizeObjectSlots(children, (instance.slots = {}));\n        }\n    }\n    else {\n        instance.slots = {};\n        if (children) {\n            normalizeVNodeSlots(instance, children);\n        }\n    }\n    def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n    const { vnode, slots } = instance;\n    let needDeletionCheck = true;\n    let deletionComparisonTarget = EMPTY_OBJ;\n    if (vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\n        const type = children._;\n        if (type) {\n            // compiled slots.\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n                // Parent was HMR updated so slot content may have changed.\n                // force update slots and mark instance for hmr as well\n                extend(slots, children);\n            }\n            else if (optimized && type === 1 /* SlotFlags.STABLE */) {\n                // compiled AND stable.\n                // no need to update, and skip stale slots removal.\n                needDeletionCheck = false;\n            }\n            else {\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n                // normalization.\n                extend(slots, children);\n                // #2893\n                // when rendering the optimized slots by manually written render function,\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\n                // i.e. let the `renderSlot` create the bailed Fragment\n                if (!optimized && type === 1 /* SlotFlags.STABLE */) {\n                    delete slots._;\n                }\n            }\n        }\n        else {\n            needDeletionCheck = !children.$stable;\n            normalizeObjectSlots(children, slots);\n        }\n        deletionComparisonTarget = children;\n    }\n    else if (children) {\n        // non slot object children (direct value) passed to a component\n        normalizeVNodeSlots(instance, children);\n        deletionComparisonTarget = { default: 1 };\n    }\n    // delete stale slots\n    if (needDeletionCheck) {\n        for (const key in slots) {\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n                delete slots[key];\n            }\n        }\n    }\n};\n\nfunction createAppContext() {\n    return {\n        app: null,\n        config: {\n            isNativeTag: NO,\n            performance: false,\n            globalProperties: {},\n            optionMergeStrategies: {},\n            errorHandler: undefined,\n            warnHandler: undefined,\n            compilerOptions: {}\n        },\n        mixins: [],\n        components: {},\n        directives: {},\n        provides: Object.create(null),\n        optionsCache: new WeakMap(),\n        propsCache: new WeakMap(),\n        emitsCache: new WeakMap()\n    };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n    return function createApp(rootComponent, rootProps = null) {\n        if (!isFunction(rootComponent)) {\n            rootComponent = Object.assign({}, rootComponent);\n        }\n        if (rootProps != null && !isObject(rootProps)) {\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\n            rootProps = null;\n        }\n        const context = createAppContext();\n        const installedPlugins = new Set();\n        let isMounted = false;\n        const app = (context.app = {\n            _uid: uid$1++,\n            _component: rootComponent,\n            _props: rootProps,\n            _container: null,\n            _context: context,\n            _instance: null,\n            version,\n            get config() {\n                return context.config;\n            },\n            set config(v) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\n                }\n            },\n            use(plugin, ...options) {\n                if (installedPlugins.has(plugin)) {\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\n                }\n                else if (plugin && isFunction(plugin.install)) {\n                    installedPlugins.add(plugin);\n                    plugin.install(app, ...options);\n                }\n                else if (isFunction(plugin)) {\n                    installedPlugins.add(plugin);\n                    plugin(app, ...options);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\n                        `function.`);\n                }\n                return app;\n            },\n            mixin(mixin) {\n                if (__VUE_OPTIONS_API__) {\n                    if (!context.mixins.includes(mixin)) {\n                        context.mixins.push(mixin);\n                    }\n                    else if ((process.env.NODE_ENV !== 'production')) {\n                        warn('Mixin has already been applied to target app' +\n                            (mixin.name ? `: ${mixin.name}` : ''));\n                    }\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Mixins are only available in builds supporting Options API');\n                }\n                return app;\n            },\n            component(name, component) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    validateComponentName(name, context.config);\n                }\n                if (!component) {\n                    return context.components[name];\n                }\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\n                    warn(`Component \"${name}\" has already been registered in target app.`);\n                }\n                context.components[name] = component;\n                return app;\n            },\n            directive(name, directive) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    validateDirectiveName(name);\n                }\n                if (!directive) {\n                    return context.directives[name];\n                }\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\n                }\n                context.directives[name] = directive;\n                return app;\n            },\n            mount(rootContainer, isHydrate, isSVG) {\n                if (!isMounted) {\n                    // #5571\n                    if ((process.env.NODE_ENV !== 'production') && rootContainer.__vue_app__) {\n                        warn(`There is already an app instance mounted on the host container.\\n` +\n                            ` If you want to mount another app on the same host container,` +\n                            ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`);\n                    }\n                    const vnode = createVNode(rootComponent, rootProps);\n                    // store app context on the root VNode.\n                    // this will be set on the root instance on initial mount.\n                    vnode.appContext = context;\n                    // HMR root reload\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        context.reload = () => {\n                            render(cloneVNode(vnode), rootContainer, isSVG);\n                        };\n                    }\n                    if (isHydrate && hydrate) {\n                        hydrate(vnode, rootContainer);\n                    }\n                    else {\n                        render(vnode, rootContainer, isSVG);\n                    }\n                    isMounted = true;\n                    app._container = rootContainer;\n                    rootContainer.__vue_app__ = app;\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                        app._instance = vnode.component;\n                        devtoolsInitApp(app, version);\n                    }\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`App has already been mounted.\\n` +\n                        `If you want to remount the same app, move your app creation logic ` +\n                        `into a factory function and create fresh app instances for each ` +\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\n                }\n            },\n            unmount() {\n                if (isMounted) {\n                    render(null, app._container);\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                        app._instance = null;\n                        devtoolsUnmountApp(app);\n                    }\n                    delete app._container.__vue_app__;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`Cannot unmount an app that is not mounted.`);\n                }\n            },\n            provide(key, value) {\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\n                    warn(`App already provides property with key \"${String(key)}\". ` +\n                        `It will be overwritten with the new value.`);\n                }\n                context.provides[key] = value;\n                return app;\n            }\n        });\n        return app;\n    };\n}\n\n/**\n * Function for handling a template ref\n */\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n    if (isArray(rawRef)) {\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\n        return;\n    }\n    if (isAsyncWrapper(vnode) && !isUnmount) {\n        // when mounting async components, nothing needs to be done,\n        // because the template ref is forwarded to inner component\n        return;\n    }\n    const refValue = vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\n        : vnode.el;\n    const value = isUnmount ? null : refValue;\n    const { i: owner, r: ref } = rawRef;\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\n            `A vnode with ref must be created inside the render function.`);\n        return;\n    }\n    const oldRef = oldRawRef && oldRawRef.r;\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\n    const setupState = owner.setupState;\n    // dynamic ref changed. unset old ref\n    if (oldRef != null && oldRef !== ref) {\n        if (isString(oldRef)) {\n            refs[oldRef] = null;\n            if (hasOwn(setupState, oldRef)) {\n                setupState[oldRef] = null;\n            }\n        }\n        else if (isRef(oldRef)) {\n            oldRef.value = null;\n        }\n    }\n    if (isFunction(ref)) {\n        callWithErrorHandling(ref, owner, 12 /* ErrorCodes.FUNCTION_REF */, [value, refs]);\n    }\n    else {\n        const _isString = isString(ref);\n        const _isRef = isRef(ref);\n        if (_isString || _isRef) {\n            const doSet = () => {\n                if (rawRef.f) {\n                    const existing = _isString\n                        ? hasOwn(setupState, ref)\n                            ? setupState[ref]\n                            : refs[ref]\n                        : ref.value;\n                    if (isUnmount) {\n                        isArray(existing) && remove(existing, refValue);\n                    }\n                    else {\n                        if (!isArray(existing)) {\n                            if (_isString) {\n                                refs[ref] = [refValue];\n                                if (hasOwn(setupState, ref)) {\n                                    setupState[ref] = refs[ref];\n                                }\n                            }\n                            else {\n                                ref.value = [refValue];\n                                if (rawRef.k)\n                                    refs[rawRef.k] = ref.value;\n                            }\n                        }\n                        else if (!existing.includes(refValue)) {\n                            existing.push(refValue);\n                        }\n                    }\n                }\n                else if (_isString) {\n                    refs[ref] = value;\n                    if (hasOwn(setupState, ref)) {\n                        setupState[ref] = value;\n                    }\n                }\n                else if (_isRef) {\n                    ref.value = value;\n                    if (rawRef.k)\n                        refs[rawRef.k] = value;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\n                }\n            };\n            if (value) {\n                doSet.id = -1;\n                queuePostRenderEffect(doSet, parentSuspense);\n            }\n            else {\n                doSet();\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\n        }\n    }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\nconst isComment = (node) => node.nodeType === 8 /* DOMNodeTypes.COMMENT */;\n// Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\nfunction createHydrationFunctions(rendererInternals) {\n    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\n    const hydrate = (vnode, container) => {\n        if (!container.hasChildNodes()) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\n                    `Performing full mount instead.`);\n            patch(null, vnode, container);\n            flushPostFlushCbs();\n            container._vnode = vnode;\n            return;\n        }\n        hasMismatch = false;\n        hydrateNode(container.firstChild, vnode, null, null, null);\n        flushPostFlushCbs();\n        container._vnode = vnode;\n        if (hasMismatch && !false) {\n            // this error should show up in production\n            console.error(`Hydration completed but contains mismatches.`);\n        }\n    };\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n        const isFragmentStart = isComment(node) && node.data === '[';\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\n        const { type, ref, shapeFlag, patchFlag } = vnode;\n        let domType = node.nodeType;\n        vnode.el = node;\n        if (patchFlag === -2 /* PatchFlags.BAIL */) {\n            optimized = false;\n            vnode.dynamicChildren = null;\n        }\n        let nextNode = null;\n        switch (type) {\n            case Text:\n                if (domType !== 3 /* DOMNodeTypes.TEXT */) {\n                    // #5728 empty text node inside a slot can cause hydration failure\n                    // because the server rendered HTML won't contain a text node\n                    if (vnode.children === '') {\n                        insert((vnode.el = createText('')), parentNode(node), node);\n                        nextNode = node;\n                    }\n                    else {\n                        nextNode = onMismatch();\n                    }\n                }\n                else {\n                    if (node.data !== vnode.children) {\n                        hasMismatch = true;\n                        (process.env.NODE_ENV !== 'production') &&\n                            warn(`Hydration text mismatch:` +\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\n                        node.data = vnode.children;\n                    }\n                    nextNode = nextSibling(node);\n                }\n                break;\n            case Comment:\n                if (domType !== 8 /* DOMNodeTypes.COMMENT */ || isFragmentStart) {\n                    nextNode = onMismatch();\n                }\n                else {\n                    nextNode = nextSibling(node);\n                }\n                break;\n            case Static:\n                if (isFragmentStart) {\n                    // entire template is static but SSRed as a fragment\n                    node = nextSibling(node);\n                    domType = node.nodeType;\n                }\n                if (domType === 1 /* DOMNodeTypes.ELEMENT */ || domType === 3 /* DOMNodeTypes.TEXT */) {\n                    // determine anchor, adopt content\n                    nextNode = node;\n                    // if the static vnode has its content stripped during build,\n                    // adopt it from the server-rendered HTML.\n                    const needToAdoptContent = !vnode.children.length;\n                    for (let i = 0; i < vnode.staticCount; i++) {\n                        if (needToAdoptContent)\n                            vnode.children +=\n                                nextNode.nodeType === 1 /* DOMNodeTypes.ELEMENT */\n                                    ? nextNode.outerHTML\n                                    : nextNode.data;\n                        if (i === vnode.staticCount - 1) {\n                            vnode.anchor = nextNode;\n                        }\n                        nextNode = nextSibling(nextNode);\n                    }\n                    return isFragmentStart ? nextSibling(nextNode) : nextNode;\n                }\n                else {\n                    onMismatch();\n                }\n                break;\n            case Fragment:\n                if (!isFragmentStart) {\n                    nextNode = onMismatch();\n                }\n                else {\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n                }\n                break;\n            default:\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\n                    if (domType !== 1 /* DOMNodeTypes.ELEMENT */ ||\n                        vnode.type.toLowerCase() !==\n                            node.tagName.toLowerCase()) {\n                        nextNode = onMismatch();\n                    }\n                    else {\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n                    }\n                }\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                    // when setting up the render effect, if the initial vnode already\n                    // has .el set, the component will perform hydration instead of mount\n                    // on its sub-tree.\n                    vnode.slotScopeIds = slotScopeIds;\n                    const container = parentNode(node);\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\n                    // component may be async, so in the case of fragments we cannot rely\n                    // on component's rendered output to determine the end of the fragment\n                    // instead, we do a lookahead to find the end anchor node.\n                    nextNode = isFragmentStart\n                        ? locateClosingAsyncAnchor(node)\n                        : nextSibling(node);\n                    // #4293 teleport as component root\n                    if (nextNode &&\n                        isComment(nextNode) &&\n                        nextNode.data === 'teleport end') {\n                        nextNode = nextSibling(nextNode);\n                    }\n                    // #3787\n                    // if component is async, it may get moved / unmounted before its\n                    // inner component is loaded, so we need to give it a placeholder\n                    // vnode that matches its adopted DOM.\n                    if (isAsyncWrapper(vnode)) {\n                        let subTree;\n                        if (isFragmentStart) {\n                            subTree = createVNode(Fragment);\n                            subTree.anchor = nextNode\n                                ? nextNode.previousSibling\n                                : container.lastChild;\n                        }\n                        else {\n                            subTree =\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\n                        }\n                        subTree.el = node;\n                        vnode.component.subTree = subTree;\n                    }\n                }\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                    if (domType !== 8 /* DOMNodeTypes.COMMENT */) {\n                        nextNode = onMismatch();\n                    }\n                    else {\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\n                    }\n                }\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\n                }\n        }\n        if (ref != null) {\n            setRef(ref, null, parentSuspense, vnode);\n        }\n        return nextNode;\n    };\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        optimized = optimized || !!vnode.dynamicChildren;\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\n        // #4006 for form elements with non-string v-model value bindings\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\n        // skip props & children if this is hoisted static nodes\n        // #5405 in dev, always hydrate children for HMR\n        if ((process.env.NODE_ENV !== 'production') || forcePatchValue || patchFlag !== -1 /* PatchFlags.HOISTED */) {\n            if (dirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\n            }\n            // props\n            if (props) {\n                if (forcePatchValue ||\n                    !optimized ||\n                    patchFlag & (16 /* PatchFlags.FULL_PROPS */ | 32 /* PatchFlags.HYDRATE_EVENTS */)) {\n                    for (const key in props) {\n                        if ((forcePatchValue && key.endsWith('value')) ||\n                            (isOn(key) && !isReservedProp(key))) {\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\n                        }\n                    }\n                }\n                else if (props.onClick) {\n                    // Fast path for click listeners (which is most often) to avoid\n                    // iterating through props.\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\n                }\n            }\n            // vnode / directive hooks\n            let vnodeHooks;\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n            }\n            if (dirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n            }\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n                queueEffectWithSuspense(() => {\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n                }, parentSuspense);\n            }\n            // children\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */ &&\n                // skip if element has innerHTML / textContent\n                !(props && (props.innerHTML || props.textContent))) {\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\n                let hasWarned = false;\n                while (next) {\n                    hasMismatch = true;\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\n                            `server rendered element contains more child nodes than client vdom.`);\n                        hasWarned = true;\n                    }\n                    // The SSRed DOM contains more nodes than it should. Remove them.\n                    const cur = next;\n                    next = next.nextSibling;\n                    remove(cur);\n                }\n            }\n            else if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n                if (el.textContent !== vnode.children) {\n                    hasMismatch = true;\n                    (process.env.NODE_ENV !== 'production') &&\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\n                            `- Client: ${el.textContent}\\n` +\n                            `- Server: ${vnode.children}`);\n                    el.textContent = vnode.children;\n                }\n            }\n        }\n        return el.nextSibling;\n    };\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        optimized = optimized || !!parentVNode.dynamicChildren;\n        const children = parentVNode.children;\n        const l = children.length;\n        let hasWarned = false;\n        for (let i = 0; i < l; i++) {\n            const vnode = optimized\n                ? children[i]\n                : (children[i] = normalizeVNode(children[i]));\n            if (node) {\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n            }\n            else if (vnode.type === Text && !vnode.children) {\n                continue;\n            }\n            else {\n                hasMismatch = true;\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\n                        `server rendered element contains fewer child nodes than client vdom.`);\n                    hasWarned = true;\n                }\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n            }\n        }\n        return node;\n    };\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n        if (fragmentSlotScopeIds) {\n            slotScopeIds = slotScopeIds\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\n                : fragmentSlotScopeIds;\n        }\n        const container = parentNode(node);\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\n        if (next && isComment(next) && next.data === ']') {\n            return nextSibling((vnode.anchor = next));\n        }\n        else {\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\n            // back. This should have led to node/children mismatch warnings.\n            hasMismatch = true;\n            // since the anchor is missing, we need to create one and insert it\n            insert((vnode.anchor = createComment(`]`)), container, next);\n            return next;\n        }\n    };\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n        hasMismatch = true;\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* DOMNodeTypes.TEXT */\n                ? `(text)`\n                : isComment(node) && node.data === '['\n                    ? `(start of fragment)`\n                    : ``);\n        vnode.el = null;\n        if (isFragment) {\n            // remove excessive fragment nodes\n            const end = locateClosingAsyncAnchor(node);\n            while (true) {\n                const next = nextSibling(node);\n                if (next && next !== end) {\n                    remove(next);\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        const next = nextSibling(node);\n        const container = parentNode(node);\n        remove(node);\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n        return next;\n    };\n    const locateClosingAsyncAnchor = (node) => {\n        let match = 0;\n        while (node) {\n            node = nextSibling(node);\n            if (node && isComment(node)) {\n                if (node.data === '[')\n                    match++;\n                if (node.data === ']') {\n                    if (match === 0) {\n                        return nextSibling(node);\n                    }\n                    else {\n                        match--;\n                    }\n                }\n            }\n        }\n        return node;\n    };\n    return [hydrate, hydrateNode];\n}\n\n/* eslint-disable no-restricted-globals */\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n    if (instance.appContext.config.performance && isSupported()) {\n        perf.mark(`vue-${type}-${instance.uid}`);\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n    }\n}\nfunction endMeasure(instance, type) {\n    if (instance.appContext.config.performance && isSupported()) {\n        const startTag = `vue-${type}-${instance.uid}`;\n        const endTag = startTag + `:end`;\n        perf.mark(endTag);\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\n        perf.clearMarks(startTag);\n        perf.clearMarks(endTag);\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n    }\n}\nfunction isSupported() {\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\n\n/**\n * This is only called in esm-bundler builds.\n * It is called when a renderer is created, in `baseCreateRenderer` so that\n * importing runtime-core is side-effects free.\n *\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    const needWarn = [];\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_OPTIONS_API__`);\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\n    }\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n    }\n    if ((process.env.NODE_ENV !== 'production') && needWarn.length) {\n        const multi = needWarn.length > 1;\n        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, ` +\n            `which expects these compile-time feature flags to be globally injected ` +\n            `via the bundler config in order to get better tree-shaking in the ` +\n            `production bundle.\\n\\n` +\n            `For more details, see https://link.vuejs.org/feature-flags.`);\n    }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\n    ;\n/**\n * The createRenderer function accepts two generic arguments:\n * HostNode and HostElement, corresponding to Node and Element types in the\n * host environment. For example, for runtime-dom, HostNode would be the DOM\n * `Node` interface and HostElement would be the DOM `Element` interface.\n *\n * Custom renderers can pass in the platform specific types like this:\n *\n * ``` js\n * const { render, createApp } = createRenderer<Node, Element>({\n *   patchProp,\n *   ...nodeOps\n * })\n * ```\n */\nfunction createRenderer(options) {\n    return baseCreateRenderer(options);\n}\n// Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\nfunction createHydrationRenderer(options) {\n    return baseCreateRenderer(options, createHydrationFunctions);\n}\n// implementation\nfunction baseCreateRenderer(options, createHydrationFns) {\n    // compile-time feature flags check\n    {\n        initFeatureFlags();\n    }\n    const target = getGlobalThis();\n    target.__VUE__ = true;\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n    }\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, insertStaticContent: hostInsertStaticContent } = options;\n    // Note: functions inside this closure should use `const xxx = () => {}`\n    // style in order to prevent being inlined by minifiers.\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n        if (n1 === n2) {\n            return;\n        }\n        // patching & not same type, unmount old tree\n        if (n1 && !isSameVNodeType(n1, n2)) {\n            anchor = getNextHostNode(n1);\n            unmount(n1, parentComponent, parentSuspense, true);\n            n1 = null;\n        }\n        if (n2.patchFlag === -2 /* PatchFlags.BAIL */) {\n            optimized = false;\n            n2.dynamicChildren = null;\n        }\n        const { type, ref, shapeFlag } = n2;\n        switch (type) {\n            case Text:\n                processText(n1, n2, container, anchor);\n                break;\n            case Comment:\n                processCommentNode(n1, n2, container, anchor);\n                break;\n            case Static:\n                if (n1 == null) {\n                    mountStaticNode(n2, container, anchor, isSVG);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    patchStaticNode(n1, n2, container, isSVG);\n                }\n                break;\n            case Fragment:\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                break;\n            default:\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n                }\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\n                }\n        }\n        // set ref\n        if (ref != null && parentComponent) {\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n        }\n    };\n    const processText = (n1, n2, container, anchor) => {\n        if (n1 == null) {\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\n        }\n        else {\n            const el = (n2.el = n1.el);\n            if (n2.children !== n1.children) {\n                hostSetText(el, n2.children);\n            }\n        }\n    };\n    const processCommentNode = (n1, n2, container, anchor) => {\n        if (n1 == null) {\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\n        }\n        else {\n            // there's no support for dynamic comments\n            n2.el = n1.el;\n        }\n    };\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\n    };\n    /**\n     * Dev / HMR only\n     */\n    const patchStaticNode = (n1, n2, container, isSVG) => {\n        // static nodes are only patched during dev for HMR\n        if (n2.children !== n1.children) {\n            const anchor = hostNextSibling(n1.anchor);\n            // remove existing\n            removeStaticNode(n1);\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\n        }\n        else {\n            n2.el = n1.el;\n            n2.anchor = n1.anchor;\n        }\n    };\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n        let next;\n        while (el && el !== anchor) {\n            next = hostNextSibling(el);\n            hostInsert(el, container, nextSibling);\n            el = next;\n        }\n        hostInsert(anchor, container, nextSibling);\n    };\n    const removeStaticNode = ({ el, anchor }) => {\n        let next;\n        while (el && el !== anchor) {\n            next = hostNextSibling(el);\n            hostRemove(el);\n            el = next;\n        }\n        hostRemove(anchor);\n    };\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        isSVG = isSVG || n2.type === 'svg';\n        if (n1 == null) {\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        else {\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n    };\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        let el;\n        let vnodeHook;\n        const { type, props, shapeFlag, transition, dirs } = vnode;\n        el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\n        // mount children first, since some props may rely on child content\n        // being already rendered, e.g. `<select value>`\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n            hostSetElementText(el, vnode.children);\n        }\n        else if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\n        }\n        if (dirs) {\n            invokeDirectiveHook(vnode, null, parentComponent, 'created');\n        }\n        // scopeId\n        setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n        // props\n        if (props) {\n            for (const key in props) {\n                if (key !== 'value' && !isReservedProp(key)) {\n                    hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                }\n            }\n            /**\n             * Special case for setting value on DOM elements:\n             * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\n             * - it needs to be forced (#1471)\n             * #2353 proposes adding another renderer option to configure this, but\n             * the properties affects are so finite it is worth special casing it\n             * here to reduce the complexity. (Special casing it also should not\n             * affect non-DOM renderers)\n             */\n            if ('value' in props) {\n                hostPatchProp(el, 'value', null, props.value);\n            }\n            if ((vnodeHook = props.onVnodeBeforeMount)) {\n                invokeVNodeHook(vnodeHook, parentComponent, vnode);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            Object.defineProperty(el, '__vnode', {\n                value: vnode,\n                enumerable: false\n            });\n            Object.defineProperty(el, '__vueParentComponent', {\n                value: parentComponent,\n                enumerable: false\n            });\n        }\n        if (dirs) {\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n        }\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n        // #1689 For inside suspense + suspense resolved case, just call it\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\n            transition &&\n            !transition.persisted;\n        if (needCallTransitionHooks) {\n            transition.beforeEnter(el);\n        }\n        hostInsert(el, container, anchor);\n        if ((vnodeHook = props && props.onVnodeMounted) ||\n            needCallTransitionHooks ||\n            dirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n                needCallTransitionHooks && transition.enter(el);\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n            }, parentSuspense);\n        }\n    };\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n        if (scopeId) {\n            hostSetScopeId(el, scopeId);\n        }\n        if (slotScopeIds) {\n            for (let i = 0; i < slotScopeIds.length; i++) {\n                hostSetScopeId(el, slotScopeIds[i]);\n            }\n        }\n        if (parentComponent) {\n            let subTree = parentComponent.subTree;\n            if ((process.env.NODE_ENV !== 'production') &&\n                subTree.patchFlag > 0 &&\n                subTree.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\n                subTree =\n                    filterSingleRoot(subTree.children) || subTree;\n            }\n            if (vnode === subTree) {\n                const parentVNode = parentComponent.vnode;\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\n            }\n        }\n    };\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n        for (let i = start; i < children.length; i++) {\n            const child = (children[i] = optimized\n                ? cloneIfMounted(children[i])\n                : normalizeVNode(children[i]));\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n    };\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        const el = (n2.el = n1.el);\n        let { patchFlag, dynamicChildren, dirs } = n2;\n        // #1426 take the old vnode's patch flag into account since user may clone a\n        // compiler-generated vnode, which de-opts to FULL_PROPS\n        patchFlag |= n1.patchFlag & 16 /* PatchFlags.FULL_PROPS */;\n        const oldProps = n1.props || EMPTY_OBJ;\n        const newProps = n2.props || EMPTY_OBJ;\n        let vnodeHook;\n        // disable recurse in beforeUpdate hooks\n        parentComponent && toggleRecurse(parentComponent, false);\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        }\n        if (dirs) {\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\n        }\n        parentComponent && toggleRecurse(parentComponent, true);\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n            // HMR updated, force full diff\n            patchFlag = 0;\n            optimized = false;\n            dynamicChildren = null;\n        }\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\n        if (dynamicChildren) {\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\n                traverseStaticChildren(n1, n2);\n            }\n        }\n        else if (!optimized) {\n            // full diff\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\n        }\n        if (patchFlag > 0) {\n            // the presence of a patchFlag means this element's render code was\n            // generated by the compiler and can take the fast path.\n            // in this path old node and new node are guaranteed to have the same shape\n            // (i.e. at the exact same position in the source template)\n            if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\n                // element props contain dynamic keys, full diff needed\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n            }\n            else {\n                // class\n                // this flag is matched when the element has dynamic class bindings.\n                if (patchFlag & 2 /* PatchFlags.CLASS */) {\n                    if (oldProps.class !== newProps.class) {\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\n                    }\n                }\n                // style\n                // this flag is matched when the element has dynamic style bindings\n                if (patchFlag & 4 /* PatchFlags.STYLE */) {\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\n                }\n                // props\n                // This flag is matched when the element has dynamic prop/attr bindings\n                // other than class and style. The keys of dynamic prop/attrs are saved for\n                // faster iteration.\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n                // bail out and go through a full diff because we need to unset the old key\n                if (patchFlag & 8 /* PatchFlags.PROPS */) {\n                    // if the flag is present then dynamicProps must be non-null\n                    const propsToUpdate = n2.dynamicProps;\n                    for (let i = 0; i < propsToUpdate.length; i++) {\n                        const key = propsToUpdate[i];\n                        const prev = oldProps[key];\n                        const next = newProps[key];\n                        // #1471 force patch value\n                        if (next !== prev || key === 'value') {\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\n                        }\n                    }\n                }\n            }\n            // text\n            // This flag is matched when the element has only dynamic text children.\n            if (patchFlag & 1 /* PatchFlags.TEXT */) {\n                if (n1.children !== n2.children) {\n                    hostSetElementText(el, n2.children);\n                }\n            }\n        }\n        else if (!optimized && dynamicChildren == null) {\n            // unoptimized, full diff\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n        }\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\n            }, parentSuspense);\n        }\n    };\n    // The fast path for blocks.\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n        for (let i = 0; i < newChildren.length; i++) {\n            const oldVNode = oldChildren[i];\n            const newVNode = newChildren[i];\n            // Determine the container (parent element) for the patch.\n            const container = \n            // oldVNode may be an errored async setup() component inside Suspense\n            // which will not have a mounted element\n            oldVNode.el &&\n                // - In the case of a Fragment, we need to provide the actual parent\n                // of the Fragment itself so it can move its children.\n                (oldVNode.type === Fragment ||\n                    // - In the case of different nodes, there is going to be a replacement\n                    // which also requires the correct parent container\n                    !isSameVNodeType(oldVNode, newVNode) ||\n                    // - In the case of a component, it could contain anything.\n                    oldVNode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 64 /* ShapeFlags.TELEPORT */))\n                ? hostParentNode(oldVNode.el)\n                : // In other cases, the parent container is not actually used so we\n                    // just pass the block element here to avoid a DOM parentNode call.\n                    fallbackContainer;\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\n        }\n    };\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n        if (oldProps !== newProps) {\n            if (oldProps !== EMPTY_OBJ) {\n                for (const key in oldProps) {\n                    if (!isReservedProp(key) && !(key in newProps)) {\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                    }\n                }\n            }\n            for (const key in newProps) {\n                // empty string is not valid prop\n                if (isReservedProp(key))\n                    continue;\n                const next = newProps[key];\n                const prev = oldProps[key];\n                // defer patching value\n                if (next !== prev && key !== 'value') {\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                }\n            }\n            if ('value' in newProps) {\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\n            }\n        }\n    };\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n        if ((process.env.NODE_ENV !== 'production') &&\n            // #5523 dev root fragment may inherit directives\n            (isHmrUpdating || patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */)) {\n            // HMR updated / Dev root fragment (w/ comments), force full diff\n            patchFlag = 0;\n            optimized = false;\n            dynamicChildren = null;\n        }\n        // check if this is a slot fragment with :slotted scope ids\n        if (fragmentSlotScopeIds) {\n            slotScopeIds = slotScopeIds\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\n                : fragmentSlotScopeIds;\n        }\n        if (n1 == null) {\n            hostInsert(fragmentStartAnchor, container, anchor);\n            hostInsert(fragmentEndAnchor, container, anchor);\n            // a fragment can only have array children\n            // since they are either generated by the compiler, or implicitly created\n            // from arrays.\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        else {\n            if (patchFlag > 0 &&\n                patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */ &&\n                dynamicChildren &&\n                // #2715 the previous fragment could've been a BAILed one as a result\n                // of renderSlot() with no valid children\n                n1.dynamicChildren) {\n                // a stable fragment (template root or <template v-for>) doesn't need to\n                // patch children order, but it may contain dynamicChildren.\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\n                    traverseStaticChildren(n1, n2);\n                }\n                else if (\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\n                //  get moved around. Make sure all root level vnodes inherit el.\n                // #2134 or if it's a component root, it may also get moved around\n                // as the component is being moved.\n                n2.key != null ||\n                    (parentComponent && n2 === parentComponent.subTree)) {\n                    traverseStaticChildren(n1, n2, true /* shallow */);\n                }\n            }\n            else {\n                // keyed / unkeyed, or manual fragments.\n                // for keyed & unkeyed, since they are compiler generated from v-for,\n                // each child is guaranteed to be a block so the fragment will never\n                // have dynamicChildren.\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n        }\n    };\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        n2.slotScopeIds = slotScopeIds;\n        if (n1 == null) {\n            if (n2.shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\n            }\n            else {\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\n            }\n        }\n        else {\n            updateComponent(n1, n2, optimized);\n        }\n    };\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\n            registerHMR(instance);\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            pushWarningContext(initialVNode);\n            startMeasure(instance, `mount`);\n        }\n        // inject renderer internals for keepAlive\n        if (isKeepAlive(initialVNode)) {\n            instance.ctx.renderer = internals;\n        }\n        // resolve props and slots for setup context\n        {\n            if ((process.env.NODE_ENV !== 'production')) {\n                startMeasure(instance, `init`);\n            }\n            setupComponent(instance);\n            if ((process.env.NODE_ENV !== 'production')) {\n                endMeasure(instance, `init`);\n            }\n        }\n        // setup() is async. This component relies on async logic to be resolved\n        // before proceeding\n        if (instance.asyncDep) {\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n            // Give it a placeholder if this is not hydration\n            // TODO handle self-defined fallback\n            if (!initialVNode.el) {\n                const placeholder = (instance.subTree = createVNode(Comment));\n                processCommentNode(null, placeholder, container, anchor);\n            }\n            return;\n        }\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\n        if ((process.env.NODE_ENV !== 'production')) {\n            popWarningContext();\n            endMeasure(instance, `mount`);\n        }\n    };\n    const updateComponent = (n1, n2, optimized) => {\n        const instance = (n2.component = n1.component);\n        if (shouldUpdateComponent(n1, n2, optimized)) {\n            if (instance.asyncDep &&\n                !instance.asyncResolved) {\n                // async & still pending - just update props and slots\n                // since the component's reactive effect for render isn't set-up yet\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(n2);\n                }\n                updateComponentPreRender(instance, n2, optimized);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n                return;\n            }\n            else {\n                // normal update\n                instance.next = n2;\n                // in case the child component is also queued, remove it to avoid\n                // double updating the same child component in the same flush.\n                invalidateJob(instance.update);\n                // instance.update is the reactive effect.\n                instance.update();\n            }\n        }\n        else {\n            // no update needed. just copy over properties\n            n2.el = n1.el;\n            instance.vnode = n2;\n        }\n    };\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n        const componentUpdateFn = () => {\n            if (!instance.isMounted) {\n                let vnodeHook;\n                const { el, props } = initialVNode;\n                const { bm, m, parent } = instance;\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n                toggleRecurse(instance, false);\n                // beforeMount hook\n                if (bm) {\n                    invokeArrayFns(bm);\n                }\n                // onVnodeBeforeMount\n                if (!isAsyncWrapperVNode &&\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\n                }\n                toggleRecurse(instance, true);\n                if (el && hydrateNode) {\n                    // vnode has adopted host node - perform hydration instead of mount.\n                    const hydrateSubTree = () => {\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            startMeasure(instance, `render`);\n                        }\n                        instance.subTree = renderComponentRoot(instance);\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            endMeasure(instance, `render`);\n                        }\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            startMeasure(instance, `hydrate`);\n                        }\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            endMeasure(instance, `hydrate`);\n                        }\n                    };\n                    if (isAsyncWrapperVNode) {\n                        initialVNode.type.__asyncLoader().then(\n                        // note: we are moving the render call into an async callback,\n                        // which means it won't track dependencies - but it's ok because\n                        // a server-rendered async wrapper is already in resolved state\n                        // and it will never need to change.\n                        () => !instance.isUnmounted && hydrateSubTree());\n                    }\n                    else {\n                        hydrateSubTree();\n                    }\n                }\n                else {\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        startMeasure(instance, `render`);\n                    }\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        endMeasure(instance, `render`);\n                    }\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        startMeasure(instance, `patch`);\n                    }\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        endMeasure(instance, `patch`);\n                    }\n                    initialVNode.el = subTree.el;\n                }\n                // mounted hook\n                if (m) {\n                    queuePostRenderEffect(m, parentSuspense);\n                }\n                // onVnodeMounted\n                if (!isAsyncWrapperVNode &&\n                    (vnodeHook = props && props.onVnodeMounted)) {\n                    const scopedInitialVNode = initialVNode;\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\n                }\n                // activated hook for keep-alive roots.\n                // #1742 activated hook must be accessed after first render\n                // since the hook may be injected by a child keep-alive\n                if (initialVNode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */ ||\n                    (parent &&\n                        isAsyncWrapper(parent.vnode) &&\n                        parent.vnode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */)) {\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n                }\n                instance.isMounted = true;\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                    devtoolsComponentAdded(instance);\n                }\n                // #2458: deference mount-only object parameters to prevent memleaks\n                initialVNode = container = anchor = null;\n            }\n            else {\n                // updateComponent\n                // This is triggered by mutation of component's own state (next: null)\n                // OR parent calling processComponent (next: VNode)\n                let { next, bu, u, parent, vnode } = instance;\n                let originNext = next;\n                let vnodeHook;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(next || instance.vnode);\n                }\n                // Disallow component effect recursion during pre-lifecycle hooks.\n                toggleRecurse(instance, false);\n                if (next) {\n                    next.el = vnode.el;\n                    updateComponentPreRender(instance, next, optimized);\n                }\n                else {\n                    next = vnode;\n                }\n                // beforeUpdate hook\n                if (bu) {\n                    invokeArrayFns(bu);\n                }\n                // onVnodeBeforeUpdate\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\n                }\n                toggleRecurse(instance, true);\n                // render\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `render`);\n                }\n                const nextTree = renderComponentRoot(instance);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `render`);\n                }\n                const prevTree = instance.subTree;\n                instance.subTree = nextTree;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `patch`);\n                }\n                patch(prevTree, nextTree, \n                // parent may have changed if it's in a teleport\n                hostParentNode(prevTree.el), \n                // anchor may have changed if it's in a fragment\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `patch`);\n                }\n                next.el = nextTree.el;\n                if (originNext === null) {\n                    // self-triggered update. In case of HOC, update parent component\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\n                    // to child component's vnode\n                    updateHOCHostEl(instance, nextTree.el);\n                }\n                // updated hook\n                if (u) {\n                    queuePostRenderEffect(u, parentSuspense);\n                }\n                // onVnodeUpdated\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\n                }\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                    devtoolsComponentUpdated(instance);\n                }\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n            }\n        };\n        // create reactive effect for rendering\n        const effect = (instance.effect = new ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\n        ));\n        const update = (instance.update = () => effect.run());\n        update.id = instance.uid;\n        // allowRecurse\n        // #1801, #2043 component render effects should allow recursive updates\n        toggleRecurse(instance, true);\n        if ((process.env.NODE_ENV !== 'production')) {\n            effect.onTrack = instance.rtc\n                ? e => invokeArrayFns(instance.rtc, e)\n                : void 0;\n            effect.onTrigger = instance.rtg\n                ? e => invokeArrayFns(instance.rtg, e)\n                : void 0;\n            update.ownerInstance = instance;\n        }\n        update();\n    };\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\n        nextVNode.component = instance;\n        const prevProps = instance.vnode.props;\n        instance.vnode = nextVNode;\n        instance.next = null;\n        updateProps(instance, nextVNode.props, prevProps, optimized);\n        updateSlots(instance, nextVNode.children, optimized);\n        pauseTracking();\n        // props update may have triggered pre-flush watchers.\n        // flush them before the render update.\n        flushPreFlushCbs();\n        resetTracking();\n    };\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n        const c1 = n1 && n1.children;\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n        const c2 = n2.children;\n        const { patchFlag, shapeFlag } = n2;\n        // fast path\n        if (patchFlag > 0) {\n            if (patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */) {\n                // this could be either fully-keyed or mixed (some keyed some not)\n                // presence of patchFlag means children are guaranteed to be arrays\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                return;\n            }\n            else if (patchFlag & 256 /* PatchFlags.UNKEYED_FRAGMENT */) {\n                // unkeyed\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                return;\n            }\n        }\n        // children has 3 possibilities: text, array or no children.\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n            // text children fast path\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                unmountChildren(c1, parentComponent, parentSuspense);\n            }\n            if (c2 !== c1) {\n                hostSetElementText(container, c2);\n            }\n        }\n        else {\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                // prev children was array\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    // two arrays, cannot assume anything, do full diff\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else {\n                    // no new children, just unmount old\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\n                }\n            }\n            else {\n                // prev children was text OR null\n                // new children is array OR null\n                if (prevShapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n                    hostSetElementText(container, '');\n                }\n                // mount new if array\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n            }\n        }\n    };\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        c1 = c1 || EMPTY_ARR;\n        c2 = c2 || EMPTY_ARR;\n        const oldLength = c1.length;\n        const newLength = c2.length;\n        const commonLength = Math.min(oldLength, newLength);\n        let i;\n        for (i = 0; i < commonLength; i++) {\n            const nextChild = (c2[i] = optimized\n                ? cloneIfMounted(c2[i])\n                : normalizeVNode(c2[i]));\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        if (oldLength > newLength) {\n            // remove old\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\n        }\n        else {\n            // mount new\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\n        }\n    };\n    // can be all-keyed or mixed\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        let i = 0;\n        const l2 = c2.length;\n        let e1 = c1.length - 1; // prev ending index\n        let e2 = l2 - 1; // next ending index\n        // 1. sync from start\n        // (a b) c\n        // (a b) d e\n        while (i <= e1 && i <= e2) {\n            const n1 = c1[i];\n            const n2 = (c2[i] = optimized\n                ? cloneIfMounted(c2[i])\n                : normalizeVNode(c2[i]));\n            if (isSameVNodeType(n1, n2)) {\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n            else {\n                break;\n            }\n            i++;\n        }\n        // 2. sync from end\n        // a (b c)\n        // d e (b c)\n        while (i <= e1 && i <= e2) {\n            const n1 = c1[e1];\n            const n2 = (c2[e2] = optimized\n                ? cloneIfMounted(c2[e2])\n                : normalizeVNode(c2[e2]));\n            if (isSameVNodeType(n1, n2)) {\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n            else {\n                break;\n            }\n            e1--;\n            e2--;\n        }\n        // 3. common sequence + mount\n        // (a b)\n        // (a b) c\n        // i = 2, e1 = 1, e2 = 2\n        // (a b)\n        // c (a b)\n        // i = 0, e1 = -1, e2 = 0\n        if (i > e1) {\n            if (i <= e2) {\n                const nextPos = e2 + 1;\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n                while (i <= e2) {\n                    patch(null, (c2[i] = optimized\n                        ? cloneIfMounted(c2[i])\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                    i++;\n                }\n            }\n        }\n        // 4. common sequence + unmount\n        // (a b) c\n        // (a b)\n        // i = 2, e1 = 2, e2 = 1\n        // a (b c)\n        // (b c)\n        // i = 0, e1 = 0, e2 = -1\n        else if (i > e2) {\n            while (i <= e1) {\n                unmount(c1[i], parentComponent, parentSuspense, true);\n                i++;\n            }\n        }\n        // 5. unknown sequence\n        // [i ... e1 + 1]: a b [c d e] f g\n        // [i ... e2 + 1]: a b [e d c h] f g\n        // i = 2, e1 = 4, e2 = 5\n        else {\n            const s1 = i; // prev starting index\n            const s2 = i; // next starting index\n            // 5.1 build key:index map for newChildren\n            const keyToNewIndexMap = new Map();\n            for (i = s2; i <= e2; i++) {\n                const nextChild = (c2[i] = optimized\n                    ? cloneIfMounted(c2[i])\n                    : normalizeVNode(c2[i]));\n                if (nextChild.key != null) {\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\n                    }\n                    keyToNewIndexMap.set(nextChild.key, i);\n                }\n            }\n            // 5.2 loop through old children left to be patched and try to patch\n            // matching nodes & remove nodes that are no longer present\n            let j;\n            let patched = 0;\n            const toBePatched = e2 - s2 + 1;\n            let moved = false;\n            // used to track whether any node has moved\n            let maxNewIndexSoFar = 0;\n            // works as Map<newIndex, oldIndex>\n            // Note that oldIndex is offset by +1\n            // and oldIndex = 0 is a special value indicating the new node has\n            // no corresponding old node.\n            // used for determining longest stable subsequence\n            const newIndexToOldIndexMap = new Array(toBePatched);\n            for (i = 0; i < toBePatched; i++)\n                newIndexToOldIndexMap[i] = 0;\n            for (i = s1; i <= e1; i++) {\n                const prevChild = c1[i];\n                if (patched >= toBePatched) {\n                    // all new children have been patched so this can only be a removal\n                    unmount(prevChild, parentComponent, parentSuspense, true);\n                    continue;\n                }\n                let newIndex;\n                if (prevChild.key != null) {\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\n                }\n                else {\n                    // key-less node, try to locate a key-less node of the same type\n                    for (j = s2; j <= e2; j++) {\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\n                            isSameVNodeType(prevChild, c2[j])) {\n                            newIndex = j;\n                            break;\n                        }\n                    }\n                }\n                if (newIndex === undefined) {\n                    unmount(prevChild, parentComponent, parentSuspense, true);\n                }\n                else {\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\n                    if (newIndex >= maxNewIndexSoFar) {\n                        maxNewIndexSoFar = newIndex;\n                    }\n                    else {\n                        moved = true;\n                    }\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                    patched++;\n                }\n            }\n            // 5.3 move and mount\n            // generate longest stable subsequence only when nodes have moved\n            const increasingNewIndexSequence = moved\n                ? getSequence(newIndexToOldIndexMap)\n                : EMPTY_ARR;\n            j = increasingNewIndexSequence.length - 1;\n            // looping backwards so that we can use last patched node as anchor\n            for (i = toBePatched - 1; i >= 0; i--) {\n                const nextIndex = s2 + i;\n                const nextChild = c2[nextIndex];\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n                if (newIndexToOldIndexMap[i] === 0) {\n                    // mount new\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (moved) {\n                    // move if:\n                    // There is no stable subsequence (e.g. a reverse)\n                    // OR current node is not among the stable sequence\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\n                        move(nextChild, container, anchor, 2 /* MoveType.REORDER */);\n                    }\n                    else {\n                        j--;\n                    }\n                }\n            }\n        }\n    };\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n        const { el, type, transition, children, shapeFlag } = vnode;\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            move(vnode.component.subTree, container, anchor, moveType);\n            return;\n        }\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            vnode.suspense.move(container, anchor, moveType);\n            return;\n        }\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n            type.move(vnode, container, anchor, internals);\n            return;\n        }\n        if (type === Fragment) {\n            hostInsert(el, container, anchor);\n            for (let i = 0; i < children.length; i++) {\n                move(children[i], container, anchor, moveType);\n            }\n            hostInsert(vnode.anchor, container, anchor);\n            return;\n        }\n        if (type === Static) {\n            moveStaticNode(vnode, container, anchor);\n            return;\n        }\n        // single nodes\n        const needTransition = moveType !== 2 /* MoveType.REORDER */ &&\n            shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\n            transition;\n        if (needTransition) {\n            if (moveType === 0 /* MoveType.ENTER */) {\n                transition.beforeEnter(el);\n                hostInsert(el, container, anchor);\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n            }\n            else {\n                const { leave, delayLeave, afterLeave } = transition;\n                const remove = () => hostInsert(el, container, anchor);\n                const performLeave = () => {\n                    leave(el, () => {\n                        remove();\n                        afterLeave && afterLeave();\n                    });\n                };\n                if (delayLeave) {\n                    delayLeave(el, remove, performLeave);\n                }\n                else {\n                    performLeave();\n                }\n            }\n        }\n        else {\n            hostInsert(el, container, anchor);\n        }\n    };\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\n        // unset ref\n        if (ref != null) {\n            setRef(ref, null, parentSuspense, vnode, true);\n        }\n        if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\n            parentComponent.ctx.deactivate(vnode);\n            return;\n        }\n        const shouldInvokeDirs = shapeFlag & 1 /* ShapeFlags.ELEMENT */ && dirs;\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n        let vnodeHook;\n        if (shouldInvokeVnodeHook &&\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        }\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            unmountComponent(vnode.component, parentSuspense, doRemove);\n        }\n        else {\n            if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                vnode.suspense.unmount(parentSuspense, doRemove);\n                return;\n            }\n            if (shouldInvokeDirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\n            }\n            if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\n            }\n            else if (dynamicChildren &&\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\n                (type !== Fragment ||\n                    (patchFlag > 0 && patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */))) {\n                // fast path for block nodes: only need to unmount dynamic children.\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\n            }\n            else if ((type === Fragment &&\n                patchFlag &\n                    (128 /* PatchFlags.KEYED_FRAGMENT */ | 256 /* PatchFlags.UNKEYED_FRAGMENT */)) ||\n                (!optimized && shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */)) {\n                unmountChildren(children, parentComponent, parentSuspense);\n            }\n            if (doRemove) {\n                remove(vnode);\n            }\n        }\n        if ((shouldInvokeVnodeHook &&\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\n            shouldInvokeDirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n                shouldInvokeDirs &&\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\n            }, parentSuspense);\n        }\n    };\n    const remove = vnode => {\n        const { type, el, anchor, transition } = vnode;\n        if (type === Fragment) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                vnode.patchFlag > 0 &&\n                vnode.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */ &&\n                transition &&\n                !transition.persisted) {\n                vnode.children.forEach(child => {\n                    if (child.type === Comment) {\n                        hostRemove(child.el);\n                    }\n                    else {\n                        remove(child);\n                    }\n                });\n            }\n            else {\n                removeFragment(el, anchor);\n            }\n            return;\n        }\n        if (type === Static) {\n            removeStaticNode(vnode);\n            return;\n        }\n        const performRemove = () => {\n            hostRemove(el);\n            if (transition && !transition.persisted && transition.afterLeave) {\n                transition.afterLeave();\n            }\n        };\n        if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\n            transition &&\n            !transition.persisted) {\n            const { leave, delayLeave } = transition;\n            const performLeave = () => leave(el, performRemove);\n            if (delayLeave) {\n                delayLeave(vnode.el, performRemove, performLeave);\n            }\n            else {\n                performLeave();\n            }\n        }\n        else {\n            performRemove();\n        }\n    };\n    const removeFragment = (cur, end) => {\n        // For fragments, directly remove all contained DOM nodes.\n        // (fragment child nodes cannot have transition)\n        let next;\n        while (cur !== end) {\n            next = hostNextSibling(cur);\n            hostRemove(cur);\n            cur = next;\n        }\n        hostRemove(end);\n    };\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\n            unregisterHMR(instance);\n        }\n        const { bum, scope, update, subTree, um } = instance;\n        // beforeUnmount hook\n        if (bum) {\n            invokeArrayFns(bum);\n        }\n        // stop effects in component scope\n        scope.stop();\n        // update may be null if a component is unmounted before its async\n        // setup has resolved.\n        if (update) {\n            // so that scheduler will no longer invoke it\n            update.active = false;\n            unmount(subTree, instance, parentSuspense, doRemove);\n        }\n        // unmounted hook\n        if (um) {\n            queuePostRenderEffect(um, parentSuspense);\n        }\n        queuePostRenderEffect(() => {\n            instance.isUnmounted = true;\n        }, parentSuspense);\n        // A component with async dep inside a pending suspense is unmounted before\n        // its async dep resolves. This should remove the dep from the suspense, and\n        // cause the suspense to resolve immediately if that was the last dep.\n        if (parentSuspense &&\n            parentSuspense.pendingBranch &&\n            !parentSuspense.isUnmounted &&\n            instance.asyncDep &&\n            !instance.asyncResolved &&\n            instance.suspenseId === parentSuspense.pendingId) {\n            parentSuspense.deps--;\n            if (parentSuspense.deps === 0) {\n                parentSuspense.resolve();\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            devtoolsComponentRemoved(instance);\n        }\n    };\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n        for (let i = start; i < children.length; i++) {\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n        }\n    };\n    const getNextHostNode = vnode => {\n        if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            return getNextHostNode(vnode.component.subTree);\n        }\n        if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            return vnode.suspense.next();\n        }\n        return hostNextSibling((vnode.anchor || vnode.el));\n    };\n    const render = (vnode, container, isSVG) => {\n        if (vnode == null) {\n            if (container._vnode) {\n                unmount(container._vnode, null, null, true);\n            }\n        }\n        else {\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n        }\n        flushPreFlushCbs();\n        flushPostFlushCbs();\n        container._vnode = vnode;\n    };\n    const internals = {\n        p: patch,\n        um: unmount,\n        m: move,\n        r: remove,\n        mt: mountComponent,\n        mc: mountChildren,\n        pc: patchChildren,\n        pbc: patchBlockChildren,\n        n: getNextHostNode,\n        o: options\n    };\n    let hydrate;\n    let hydrateNode;\n    if (createHydrationFns) {\n        [hydrate, hydrateNode] = createHydrationFns(internals);\n    }\n    return {\n        render,\n        hydrate,\n        createApp: createAppAPI(render, hydrate)\n    };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n    effect.allowRecurse = update.allowRecurse = allowed;\n}\n/**\n * #1156\n * When a component is HMR-enabled, we need to make sure that all static nodes\n * inside a block also inherit the DOM element from the previous tree so that\n * HMR updates (which are full updates) can retrieve the element for patching.\n *\n * #2080\n * Inside keyed `template` fragment static children, if a fragment is moved,\n * the children will always be moved. Therefore, in order to ensure correct move\n * position, el should be inherited from previous nodes.\n */\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n    const ch1 = n1.children;\n    const ch2 = n2.children;\n    if (isArray(ch1) && isArray(ch2)) {\n        for (let i = 0; i < ch1.length; i++) {\n            // this is only called in the optimized path so array children are\n            // guaranteed to be vnodes\n            const c1 = ch1[i];\n            let c2 = ch2[i];\n            if (c2.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && !c2.dynamicChildren) {\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) {\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\n                    c2.el = c1.el;\n                }\n                if (!shallow)\n                    traverseStaticChildren(c1, c2);\n            }\n            // #6852 also inherit for text nodes\n            if (c2.type === Text) {\n                c2.el = c1.el;\n            }\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\n            // would have received .el during block patch)\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\n                c2.el = c1.el;\n            }\n        }\n    }\n}\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr) {\n    const p = arr.slice();\n    const result = [0];\n    let i, j, u, v, c;\n    const len = arr.length;\n    for (i = 0; i < len; i++) {\n        const arrI = arr[i];\n        if (arrI !== 0) {\n            j = result[result.length - 1];\n            if (arr[j] < arrI) {\n                p[i] = j;\n                result.push(i);\n                continue;\n            }\n            u = 0;\n            v = result.length - 1;\n            while (u < v) {\n                c = (u + v) >> 1;\n                if (arr[result[c]] < arrI) {\n                    u = c + 1;\n                }\n                else {\n                    v = c;\n                }\n            }\n            if (arrI < arr[result[u]]) {\n                if (u > 0) {\n                    p[i] = result[u - 1];\n                }\n                result[u] = i;\n            }\n        }\n    }\n    u = result.length;\n    v = result[u - 1];\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n    return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n    const targetSelector = props && props.to;\n    if (isString(targetSelector)) {\n        if (!select) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Current renderer does not support string target for Teleports. ` +\n                    `(missing querySelector renderer option)`);\n            return null;\n        }\n        else {\n            const target = select(targetSelector);\n            if (!target) {\n                (process.env.NODE_ENV !== 'production') &&\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\n                        `Note the target element must exist before the component is mounted - ` +\n                        `i.e. the target cannot be rendered by the component itself, and ` +\n                        `ideally should be outside of the entire Vue component tree.`);\n            }\n            return target;\n        }\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\n            warn(`Invalid Teleport target: ${targetSelector}`);\n        }\n        return targetSelector;\n    }\n};\nconst TeleportImpl = {\n    __isTeleport: true,\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\n        const disabled = isTeleportDisabled(n2.props);\n        let { shapeFlag, children, dynamicChildren } = n2;\n        // #3302\n        // HMR updated, force full diff\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n            optimized = false;\n            dynamicChildren = null;\n        }\n        if (n1 == null) {\n            // insert anchors in the main view\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\n                ? createComment('teleport start')\n                : createText(''));\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\n                ? createComment('teleport end')\n                : createText(''));\n            insert(placeholder, container, anchor);\n            insert(mainAnchor, container, anchor);\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\n            const targetAnchor = (n2.targetAnchor = createText(''));\n            if (target) {\n                insert(targetAnchor, target);\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n                isSVG = isSVG || isTargetSVG(target);\n            }\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\n            }\n            const mount = (container, anchor) => {\n                // Teleport *always* has Array children. This is enforced in both the\n                // compiler and vnode children normalization.\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n            };\n            if (disabled) {\n                mount(container, mainAnchor);\n            }\n            else if (target) {\n                mount(target, targetAnchor);\n            }\n        }\n        else {\n            // update content\n            n2.el = n1.el;\n            const mainAnchor = (n2.anchor = n1.anchor);\n            const target = (n2.target = n1.target);\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\n            const wasDisabled = isTeleportDisabled(n1.props);\n            const currentContainer = wasDisabled ? container : target;\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n            isSVG = isSVG || isTargetSVG(target);\n            if (dynamicChildren) {\n                // fast path when the teleport happens to be a block root\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\n                // even in block tree mode we need to make sure all root-level nodes\n                // in the teleport inherit previous DOM references so that they can\n                // be moved in future patches.\n                traverseStaticChildren(n1, n2, true);\n            }\n            else if (!optimized) {\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\n            }\n            if (disabled) {\n                if (!wasDisabled) {\n                    // enabled -> disabled\n                    // move into main container\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\n                }\n            }\n            else {\n                // target changed\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\n                    if (nextTarget) {\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TeleportMoveTypes.TARGET_CHANGE */);\n                    }\n                    else if ((process.env.NODE_ENV !== 'production')) {\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\n                    }\n                }\n                else if (wasDisabled) {\n                    // disabled -> enabled\n                    // move into teleport target\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\n                }\n            }\n        }\n        updateCssVars(n2);\n    },\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n        if (target) {\n            hostRemove(targetAnchor);\n        }\n        // an unmounted teleport should always remove its children if not disabled\n        if (doRemove || !isTeleportDisabled(props)) {\n            hostRemove(anchor);\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                for (let i = 0; i < children.length; i++) {\n                    const child = children[i];\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\n                }\n            }\n        }\n    },\n    move: moveTeleport,\n    hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* TeleportMoveTypes.REORDER */) {\n    // move target anchor if this is a target change.\n    if (moveType === 0 /* TeleportMoveTypes.TARGET_CHANGE */) {\n        insert(vnode.targetAnchor, container, parentAnchor);\n    }\n    const { el, anchor, shapeFlag, children, props } = vnode;\n    const isReorder = moveType === 2 /* TeleportMoveTypes.REORDER */;\n    // move main view anchor if this is a re-order.\n    if (isReorder) {\n        insert(el, container, parentAnchor);\n    }\n    // if this is a re-order and teleport is enabled (content is in target)\n    // do not move children. So the opposite is: only move children if this\n    // is not a reorder, or the teleport is disabled\n    if (!isReorder || isTeleportDisabled(props)) {\n        // Teleport has either Array children or no children.\n        if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            for (let i = 0; i < children.length; i++) {\n                move(children[i], container, parentAnchor, 2 /* MoveType.REORDER */);\n            }\n        }\n    }\n    // move main view anchor if this is a re-order.\n    if (isReorder) {\n        insert(anchor, container, parentAnchor);\n    }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\n    if (target) {\n        // if multiple teleports rendered to the same target element, we need to\n        // pick up from where the last teleport finished instead of the first node\n        const targetNode = target._lpa || target.firstChild;\n        if (vnode.shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            if (isTeleportDisabled(vnode.props)) {\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\n                vnode.targetAnchor = targetNode;\n            }\n            else {\n                vnode.anchor = nextSibling(node);\n                // lookahead until we find the target anchor\n                // we cannot rely on return value of hydrateChildren() because there\n                // could be nested teleports\n                let targetAnchor = targetNode;\n                while (targetAnchor) {\n                    targetAnchor = nextSibling(targetAnchor);\n                    if (targetAnchor &&\n                        targetAnchor.nodeType === 8 &&\n                        targetAnchor.data === 'teleport anchor') {\n                        vnode.targetAnchor = targetAnchor;\n                        target._lpa =\n                            vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n                        break;\n                    }\n                }\n                hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\n            }\n        }\n        updateCssVars(vnode);\n    }\n    return vnode.anchor && nextSibling(vnode.anchor);\n}\n// Force-casted public typing for h and TSX props inference\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n    // presence of .ut method indicates owner component uses css vars.\n    // code path here can assume browser environment.\n    const ctx = vnode.ctx;\n    if (ctx && ctx.ut) {\n        let node = vnode.children[0].el;\n        while (node !== vnode.targetAnchor) {\n            if (node.nodeType === 1)\n                node.setAttribute('data-v-owner', ctx.uid);\n            node = node.nextSibling;\n        }\n        ctx.ut();\n    }\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\n// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nconst blockStack = [];\nlet currentBlock = null;\n/**\n * Open a block.\n * This must be called before `createBlock`. It cannot be part of `createBlock`\n * because the children of the block are evaluated before `createBlock` itself\n * is called. The generated code typically looks like this:\n *\n * ```js\n * function render() {\n *   return (openBlock(),createBlock('div', null, [...]))\n * }\n * ```\n * disableTracking is true when creating a v-for fragment block, since a v-for\n * fragment always diffs its children.\n *\n * @private\n */\nfunction openBlock(disableTracking = false) {\n    blockStack.push((currentBlock = disableTracking ? null : []));\n}\nfunction closeBlock() {\n    blockStack.pop();\n    currentBlock = blockStack[blockStack.length - 1] || null;\n}\n// Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\nlet isBlockTreeEnabled = 1;\n/**\n * Block tracking sometimes needs to be disabled, for example during the\n * creation of a tree that needs to be cached by v-once. The compiler generates\n * code like this:\n *\n * ``` js\n * _cache[1] || (\n *   setBlockTracking(-1),\n *   _cache[1] = createVNode(...),\n *   setBlockTracking(1),\n *   _cache[1]\n * )\n * ```\n *\n * @private\n */\nfunction setBlockTracking(value) {\n    isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n    // save current block children on the block vnode\n    vnode.dynamicChildren =\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n    // close block\n    closeBlock();\n    // a block is always going to be patched, so track it as a child of its\n    // parent block\n    if (isBlockTreeEnabled > 0 && currentBlock) {\n        currentBlock.push(vnode);\n    }\n    return vnode;\n}\n/**\n * @private\n */\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\n}\n/**\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\n * A block root keeps track of dynamic nodes within the block in the\n * `dynamicChildren` array.\n *\n * @private\n */\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\n}\nfunction isVNode(value) {\n    return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n    if ((process.env.NODE_ENV !== 'production') &&\n        n2.shapeFlag & 6 /* ShapeFlags.COMPONENT */ &&\n        hmrDirtyComponents.has(n2.type)) {\n        // #7042, ensure the vnode being unmounted during HMR\n        // bitwise operations to remove keep alive flags\n        n1.shapeFlag &= ~256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n        n2.shapeFlag &= ~512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n        // HMR only: if the component has been hot-updated, force a reload.\n        return false;\n    }\n    return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\n/**\n * Internal API for registering an arguments transform for createVNode\n * used for creating stubs in the test-utils\n * It is *internal* but needs to be exposed for test-utils to pick up proper\n * typings\n */\nfunction transformVNodeArgs(transformer) {\n    vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n    return _createVNode(...(vnodeArgsTransformer\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\n        : args));\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\n    return (ref != null\n        ? isString(ref) || isRef(ref) || isFunction(ref)\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\n            : ref\n        : null);\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ShapeFlags.ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\n    const vnode = {\n        __v_isVNode: true,\n        __v_skip: true,\n        type,\n        props,\n        key: props && normalizeKey(props),\n        ref: props && normalizeRef(props),\n        scopeId: currentScopeId,\n        slotScopeIds: null,\n        children,\n        component: null,\n        suspense: null,\n        ssContent: null,\n        ssFallback: null,\n        dirs: null,\n        transition: null,\n        el: null,\n        anchor: null,\n        target: null,\n        targetAnchor: null,\n        staticCount: 0,\n        shapeFlag,\n        patchFlag,\n        dynamicProps,\n        dynamicChildren: null,\n        appContext: null,\n        ctx: currentRenderingInstance\n    };\n    if (needFullChildrenNormalization) {\n        normalizeChildren(vnode, children);\n        // normalize suspense children\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            type.normalize(vnode);\n        }\n    }\n    else if (children) {\n        // compiled element vnode - if children is passed, only possible types are\n        // string or Array.\n        vnode.shapeFlag |= isString(children)\n            ? 8 /* ShapeFlags.TEXT_CHILDREN */\n            : 16 /* ShapeFlags.ARRAY_CHILDREN */;\n    }\n    // validate key\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n    }\n    // track vnode for block tree\n    if (isBlockTreeEnabled > 0 &&\n        // avoid a block node from tracking itself\n        !isBlockNode &&\n        // has current parent block\n        currentBlock &&\n        // presence of a patch flag indicates this node needs patching on updates.\n        // component nodes also should always be patched, because even if the\n        // component doesn't need to update, it needs to persist the instance on to\n        // the next vnode so that it can be properly unmounted later.\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* ShapeFlags.COMPONENT */) &&\n        // the EVENTS flag is only for hydration and if it is the only flag, the\n        // vnode should not be considered dynamic due to handler caching.\n        vnode.patchFlag !== 32 /* PatchFlags.HYDRATE_EVENTS */) {\n        currentBlock.push(vnode);\n    }\n    return vnode;\n}\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\n        if ((process.env.NODE_ENV !== 'production') && !type) {\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\n        }\n        type = Comment;\n    }\n    if (isVNode(type)) {\n        // createVNode receiving an existing vnode. This happens in cases like\n        // <component :is=\"vnode\"/>\n        // #2078 make sure to merge refs during the clone instead of overwriting it\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\n        if (children) {\n            normalizeChildren(cloned, children);\n        }\n        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n            if (cloned.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                currentBlock[currentBlock.indexOf(type)] = cloned;\n            }\n            else {\n                currentBlock.push(cloned);\n            }\n        }\n        cloned.patchFlag |= -2 /* PatchFlags.BAIL */;\n        return cloned;\n    }\n    // class component normalization.\n    if (isClassComponent(type)) {\n        type = type.__vccOpts;\n    }\n    // class & style normalization.\n    if (props) {\n        // for reactive or proxy objects, we need to clone it to enable mutation.\n        props = guardReactiveProps(props);\n        let { class: klass, style } = props;\n        if (klass && !isString(klass)) {\n            props.class = normalizeClass(klass);\n        }\n        if (isObject(style)) {\n            // reactive state objects need to be cloned since they are likely to be\n            // mutated\n            if (isProxy(style) && !isArray(style)) {\n                style = extend({}, style);\n            }\n            props.style = normalizeStyle(style);\n        }\n    }\n    // encode the vnode type information into a bitmap\n    const shapeFlag = isString(type)\n        ? 1 /* ShapeFlags.ELEMENT */\n        : isSuspense(type)\n            ? 128 /* ShapeFlags.SUSPENSE */\n            : isTeleport(type)\n                ? 64 /* ShapeFlags.TELEPORT */\n                : isObject(type)\n                    ? 4 /* ShapeFlags.STATEFUL_COMPONENT */\n                    : isFunction(type)\n                        ? 2 /* ShapeFlags.FUNCTIONAL_COMPONENT */\n                        : 0;\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */ && isProxy(type)) {\n        type = toRaw(type);\n        warn(`Vue received a Component which was made a reactive object. This can ` +\n            `lead to unnecessary performance overhead, and should be avoided by ` +\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\n    }\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\n}\nfunction guardReactiveProps(props) {\n    if (!props)\n        return null;\n    return isProxy(props) || InternalObjectKey in props\n        ? extend({}, props)\n        : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n    // This is intentionally NOT using spread or extend to avoid the runtime\n    // key enumeration cost.\n    const { props, ref, patchFlag, children } = vnode;\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n    const cloned = {\n        __v_isVNode: true,\n        __v_skip: true,\n        type: vnode.type,\n        props: mergedProps,\n        key: mergedProps && normalizeKey(mergedProps),\n        ref: extraProps && extraProps.ref\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n                // if the vnode itself already has a ref, cloneVNode will need to merge\n                // the refs so the single vnode can be set on multiple refs\n                mergeRef && ref\n                    ? isArray(ref)\n                        ? ref.concat(normalizeRef(extraProps))\n                        : [ref, normalizeRef(extraProps)]\n                    : normalizeRef(extraProps)\n            : ref,\n        scopeId: vnode.scopeId,\n        slotScopeIds: vnode.slotScopeIds,\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* PatchFlags.HOISTED */ && isArray(children)\n            ? children.map(deepCloneVNode)\n            : children,\n        target: vnode.target,\n        targetAnchor: vnode.targetAnchor,\n        staticCount: vnode.staticCount,\n        shapeFlag: vnode.shapeFlag,\n        // if the vnode is cloned with extra props, we can no longer assume its\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n        // note: preserve flag for fragments since they use the flag for children\n        // fast paths only.\n        patchFlag: extraProps && vnode.type !== Fragment\n            ? patchFlag === -1 // hoisted node\n                ? 16 /* PatchFlags.FULL_PROPS */\n                : patchFlag | 16 /* PatchFlags.FULL_PROPS */\n            : patchFlag,\n        dynamicProps: vnode.dynamicProps,\n        dynamicChildren: vnode.dynamicChildren,\n        appContext: vnode.appContext,\n        dirs: vnode.dirs,\n        transition: vnode.transition,\n        // These should technically only be non-null on mounted VNodes. However,\n        // they *should* be copied for kept-alive vnodes. So we just always copy\n        // them since them being non-null during a mount doesn't affect the logic as\n        // they will simply be overwritten.\n        component: vnode.component,\n        suspense: vnode.suspense,\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n        el: vnode.el,\n        anchor: vnode.anchor,\n        ctx: vnode.ctx,\n        ce: vnode.ce\n    };\n    return cloned;\n}\n/**\n * Dev only, for HMR of hoisted vnodes reused in v-for\n * https://github.com/vitejs/vite/issues/2022\n */\nfunction deepCloneVNode(vnode) {\n    const cloned = cloneVNode(vnode);\n    if (isArray(vnode.children)) {\n        cloned.children = vnode.children.map(deepCloneVNode);\n    }\n    return cloned;\n}\n/**\n * @private\n */\nfunction createTextVNode(text = ' ', flag = 0) {\n    return createVNode(Text, null, text, flag);\n}\n/**\n * @private\n */\nfunction createStaticVNode(content, numberOfNodes) {\n    // A static vnode can contain multiple stringified elements, and the number\n    // of elements is necessary for hydration.\n    const vnode = createVNode(Static, null, content);\n    vnode.staticCount = numberOfNodes;\n    return vnode;\n}\n/**\n * @private\n */\nfunction createCommentVNode(text = '', \n// when used as the v-else branch, the comment node must be created as a\n// block to ensure correct updates.\nasBlock = false) {\n    return asBlock\n        ? (openBlock(), createBlock(Comment, null, text))\n        : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n    if (child == null || typeof child === 'boolean') {\n        // empty placeholder\n        return createVNode(Comment);\n    }\n    else if (isArray(child)) {\n        // fragment\n        return createVNode(Fragment, null, \n        // #3666, avoid reference pollution when reusing vnode\n        child.slice());\n    }\n    else if (typeof child === 'object') {\n        // already vnode, this should be the most common since compiled templates\n        // always produce all-vnode children arrays\n        return cloneIfMounted(child);\n    }\n    else {\n        // strings and numbers\n        return createVNode(Text, null, String(child));\n    }\n}\n// optimized normalization for template-compiled render fns\nfunction cloneIfMounted(child) {\n    return (child.el === null && child.patchFlag !== -1 /* PatchFlags.HOISTED */) ||\n        child.memo\n        ? child\n        : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n    let type = 0;\n    const { shapeFlag } = vnode;\n    if (children == null) {\n        children = null;\n    }\n    else if (isArray(children)) {\n        type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\n    }\n    else if (typeof children === 'object') {\n        if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 64 /* ShapeFlags.TELEPORT */)) {\n            // Normalize slot to plain children for plain element and Teleport\n            const slot = children.default;\n            if (slot) {\n                // _c marker is added by withCtx() indicating this is a compiled slot\n                slot._c && (slot._d = false);\n                normalizeChildren(vnode, slot());\n                slot._c && (slot._d = true);\n            }\n            return;\n        }\n        else {\n            type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\n            const slotFlag = children._;\n            if (!slotFlag && !(InternalObjectKey in children)) {\n                children._ctx = currentRenderingInstance;\n            }\n            else if (slotFlag === 3 /* SlotFlags.FORWARDED */ && currentRenderingInstance) {\n                // a child component receives forwarded slots from the parent.\n                // its slot type is determined by its parent's slot type.\n                if (currentRenderingInstance.slots._ === 1 /* SlotFlags.STABLE */) {\n                    children._ = 1 /* SlotFlags.STABLE */;\n                }\n                else {\n                    children._ = 2 /* SlotFlags.DYNAMIC */;\n                    vnode.patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                }\n            }\n        }\n    }\n    else if (isFunction(children)) {\n        children = { default: children, _ctx: currentRenderingInstance };\n        type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\n    }\n    else {\n        children = String(children);\n        // force teleport children to array so it can be moved around\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n            type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\n            children = [createTextVNode(children)];\n        }\n        else {\n            type = 8 /* ShapeFlags.TEXT_CHILDREN */;\n        }\n    }\n    vnode.children = children;\n    vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n    const ret = {};\n    for (let i = 0; i < args.length; i++) {\n        const toMerge = args[i];\n        for (const key in toMerge) {\n            if (key === 'class') {\n                if (ret.class !== toMerge.class) {\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\n                }\n            }\n            else if (key === 'style') {\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\n            }\n            else if (isOn(key)) {\n                const existing = ret[key];\n                const incoming = toMerge[key];\n                if (incoming &&\n                    existing !== incoming &&\n                    !(isArray(existing) && existing.includes(incoming))) {\n                    ret[key] = existing\n                        ? [].concat(existing, incoming)\n                        : incoming;\n                }\n            }\n            else if (key !== '') {\n                ret[key] = toMerge[key];\n            }\n        }\n    }\n    return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n    callWithAsyncErrorHandling(hook, instance, 7 /* ErrorCodes.VNODE_HOOK */, [\n        vnode,\n        prevVNode\n    ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n    const type = vnode.type;\n    // inherit parent app context - or - if root, adopt from root vnode\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n    const instance = {\n        uid: uid++,\n        vnode,\n        type,\n        parent,\n        appContext,\n        root: null,\n        next: null,\n        subTree: null,\n        effect: null,\n        update: null,\n        scope: new EffectScope(true /* detached */),\n        render: null,\n        proxy: null,\n        exposed: null,\n        exposeProxy: null,\n        withProxy: null,\n        provides: parent ? parent.provides : Object.create(appContext.provides),\n        accessCache: null,\n        renderCache: [],\n        // local resolved assets\n        components: null,\n        directives: null,\n        // resolved props and emits options\n        propsOptions: normalizePropsOptions(type, appContext),\n        emitsOptions: normalizeEmitsOptions(type, appContext),\n        // emit\n        emit: null,\n        emitted: null,\n        // props default value\n        propsDefaults: EMPTY_OBJ,\n        // inheritAttrs\n        inheritAttrs: type.inheritAttrs,\n        // state\n        ctx: EMPTY_OBJ,\n        data: EMPTY_OBJ,\n        props: EMPTY_OBJ,\n        attrs: EMPTY_OBJ,\n        slots: EMPTY_OBJ,\n        refs: EMPTY_OBJ,\n        setupState: EMPTY_OBJ,\n        setupContext: null,\n        // suspense related\n        suspense,\n        suspenseId: suspense ? suspense.pendingId : 0,\n        asyncDep: null,\n        asyncResolved: false,\n        // lifecycle hooks\n        // not using enums here because it results in computed properties\n        isMounted: false,\n        isUnmounted: false,\n        isDeactivated: false,\n        bc: null,\n        c: null,\n        bm: null,\n        m: null,\n        bu: null,\n        u: null,\n        um: null,\n        bum: null,\n        da: null,\n        a: null,\n        rtg: null,\n        rtc: null,\n        ec: null,\n        sp: null\n    };\n    if ((process.env.NODE_ENV !== 'production')) {\n        instance.ctx = createDevRenderContext(instance);\n    }\n    else {\n        instance.ctx = { _: instance };\n    }\n    instance.root = parent ? parent.root : instance;\n    instance.emit = emit.bind(null, instance);\n    // apply custom element special handling\n    if (vnode.ce) {\n        vnode.ce(instance);\n    }\n    return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nconst setCurrentInstance = (instance) => {\n    currentInstance = instance;\n    instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n    currentInstance && currentInstance.scope.off();\n    currentInstance = null;\n};\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\nfunction validateComponentName(name, config) {\n    const appIsNativeTag = config.isNativeTag || NO;\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\n    }\n}\nfunction isStatefulComponent(instance) {\n    return instance.vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n    isInSSRComponentSetup = isSSR;\n    const { props, children } = instance.vnode;\n    const isStateful = isStatefulComponent(instance);\n    initProps(instance, props, isStateful, isSSR);\n    initSlots(instance, children);\n    const setupResult = isStateful\n        ? setupStatefulComponent(instance, isSSR)\n        : undefined;\n    isInSSRComponentSetup = false;\n    return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n    var _a;\n    const Component = instance.type;\n    if ((process.env.NODE_ENV !== 'production')) {\n        if (Component.name) {\n            validateComponentName(Component.name, instance.appContext.config);\n        }\n        if (Component.components) {\n            const names = Object.keys(Component.components);\n            for (let i = 0; i < names.length; i++) {\n                validateComponentName(names[i], instance.appContext.config);\n            }\n        }\n        if (Component.directives) {\n            const names = Object.keys(Component.directives);\n            for (let i = 0; i < names.length; i++) {\n                validateDirectiveName(names[i]);\n            }\n        }\n        if (Component.compilerOptions && isRuntimeOnly()) {\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\n                `includes the runtime compiler. Since you are using a runtime-only ` +\n                `build, the options should be passed via your build tool config instead.`);\n        }\n    }\n    // 0. create render proxy property access cache\n    instance.accessCache = Object.create(null);\n    // 1. create public instance / render proxy\n    // also mark it raw so it's never observed\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n    if ((process.env.NODE_ENV !== 'production')) {\n        exposePropsOnRenderContext(instance);\n    }\n    // 2. call setup()\n    const { setup } = Component;\n    if (setup) {\n        const setupContext = (instance.setupContext =\n            setup.length > 1 ? createSetupContext(instance) : null);\n        setCurrentInstance(instance);\n        pauseTracking();\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* ErrorCodes.SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\n        resetTracking();\n        unsetCurrentInstance();\n        if (isPromise(setupResult)) {\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n            if (isSSR) {\n                // return the promise so server-renderer can wait on it\n                return setupResult\n                    .then((resolvedResult) => {\n                    handleSetupResult(instance, resolvedResult, isSSR);\n                })\n                    .catch(e => {\n                    handleError(e, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\n                });\n            }\n            else {\n                // async setup returned Promise.\n                // bail here and wait for re-entry.\n                instance.asyncDep = setupResult;\n                if ((process.env.NODE_ENV !== 'production') && !instance.suspense) {\n                    const name = (_a = Component.name) !== null && _a !== void 0 ? _a : 'Anonymous';\n                    warn(`Component <${name}>: setup function returned a promise, but no ` +\n                        `<Suspense> boundary was found in the parent component tree. ` +\n                        `A component with async setup() must be nested in a <Suspense> ` +\n                        `in order to be rendered.`);\n                }\n            }\n        }\n        else {\n            handleSetupResult(instance, setupResult, isSSR);\n        }\n    }\n    else {\n        finishComponentSetup(instance, isSSR);\n    }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n    if (isFunction(setupResult)) {\n        // setup returned an inline render function\n        if (instance.type.__ssrInlineRender) {\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\n            // set it as ssrRender instead.\n            instance.ssrRender = setupResult;\n        }\n        else {\n            instance.render = setupResult;\n        }\n    }\n    else if (isObject(setupResult)) {\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\n            warn(`setup() should not return VNodes directly - ` +\n                `return a render function instead.`);\n        }\n        // setup returned bindings.\n        // assuming a render function compiled from template is present.\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            instance.devtoolsRawSetupState = setupResult;\n        }\n        instance.setupState = proxyRefs(setupResult);\n        if ((process.env.NODE_ENV !== 'production')) {\n            exposeSetupStateOnRenderContext(instance);\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\n    }\n    finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\n/**\n * For runtime-dom to register the compiler.\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\n */\nfunction registerRuntimeCompiler(_compile) {\n    compile = _compile;\n    installWithProxy = i => {\n        if (i.render._rc) {\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n        }\n    };\n}\n// dev only\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n    const Component = instance.type;\n    // template / render function normalization\n    // could be already set when returned from setup()\n    if (!instance.render) {\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n        // is done by server-renderer\n        if (!isSSR && compile && !Component.render) {\n            const template = Component.template ||\n                resolveMergedOptions(instance).template;\n            if (template) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `compile`);\n                }\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n                const finalCompilerOptions = extend(extend({\n                    isCustomElement,\n                    delimiters\n                }, compilerOptions), componentCompilerOptions);\n                Component.render = compile(template, finalCompilerOptions);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `compile`);\n                }\n            }\n        }\n        instance.render = (Component.render || NOOP);\n        // for runtime-compiled render functions using `with` blocks, the render\n        // proxy used needs a different `has` handler which is more performant and\n        // also only allows a whitelist of globals to fallthrough.\n        if (installWithProxy) {\n            installWithProxy(instance);\n        }\n    }\n    // support for 2.x options\n    if (__VUE_OPTIONS_API__ && !(false )) {\n        setCurrentInstance(instance);\n        pauseTracking();\n        applyOptions(instance);\n        resetTracking();\n        unsetCurrentInstance();\n    }\n    // warn missing template/render\n    // the runtime compilation of template in SSR is done by server-render\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\n        /* istanbul ignore if */\n        if (!compile && Component.template) {\n            warn(`Component provided template option but ` +\n                `runtime compilation is not supported in this build of Vue.` +\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\n                    ) /* should not happen */);\n        }\n        else {\n            warn(`Component is missing template or render function.`);\n        }\n    }\n}\nfunction createAttrsProxy(instance) {\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\n        ? {\n            get(target, key) {\n                markAttrsAccessed();\n                track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\n                return target[key];\n            },\n            set() {\n                warn(`setupContext.attrs is readonly.`);\n                return false;\n            },\n            deleteProperty() {\n                warn(`setupContext.attrs is readonly.`);\n                return false;\n            }\n        }\n        : {\n            get(target, key) {\n                track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\n                return target[key];\n            }\n        });\n}\nfunction createSetupContext(instance) {\n    const expose = exposed => {\n        if ((process.env.NODE_ENV !== 'production')) {\n            if (instance.exposed) {\n                warn(`expose() should be called only once per setup().`);\n            }\n            if (exposed != null) {\n                let exposedType = typeof exposed;\n                if (exposedType === 'object') {\n                    if (isArray(exposed)) {\n                        exposedType = 'array';\n                    }\n                    else if (isRef(exposed)) {\n                        exposedType = 'ref';\n                    }\n                }\n                if (exposedType !== 'object') {\n                    warn(`expose() should be passed a plain object, received ${exposedType}.`);\n                }\n            }\n        }\n        instance.exposed = exposed || {};\n    };\n    let attrs;\n    if ((process.env.NODE_ENV !== 'production')) {\n        // We use getters in dev in case libs like test-utils overwrite instance\n        // properties (overwrites should not be done in prod)\n        return Object.freeze({\n            get attrs() {\n                return attrs || (attrs = createAttrsProxy(instance));\n            },\n            get slots() {\n                return shallowReadonly(instance.slots);\n            },\n            get emit() {\n                return (event, ...args) => instance.emit(event, ...args);\n            },\n            expose\n        });\n    }\n    else {\n        return {\n            get attrs() {\n                return attrs || (attrs = createAttrsProxy(instance));\n            },\n            slots: instance.slots,\n            emit: instance.emit,\n            expose\n        };\n    }\n}\nfunction getExposeProxy(instance) {\n    if (instance.exposed) {\n        return (instance.exposeProxy ||\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n                get(target, key) {\n                    if (key in target) {\n                        return target[key];\n                    }\n                    else if (key in publicPropertiesMap) {\n                        return publicPropertiesMap[key](instance);\n                    }\n                },\n                has(target, key) {\n                    return key in target || key in publicPropertiesMap;\n                }\n            })));\n    }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\nfunction getComponentName(Component, includeInferred = true) {\n    return isFunction(Component)\n        ? Component.displayName || Component.name\n        : Component.name || (includeInferred && Component.__name);\n}\n/* istanbul ignore next */\nfunction formatComponentName(instance, Component, isRoot = false) {\n    let name = getComponentName(Component);\n    if (!name && Component.__file) {\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n        if (match) {\n            name = match[1];\n        }\n    }\n    if (!name && instance && instance.parent) {\n        // try to infer the name based on reverse resolution\n        const inferFromRegistry = (registry) => {\n            for (const key in registry) {\n                if (registry[key] === Component) {\n                    return key;\n                }\n            }\n        };\n        name =\n            inferFromRegistry(instance.components ||\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\n    }\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n    return isFunction(value) && '__vccOpts' in value;\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\n    // @ts-ignore\n    return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n});\n\n// dev only\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\n    `<script setup> of a single file component. Its arguments should be ` +\n    `compiled away and passing it at runtime has no effect.`);\n// implementation\nfunction defineProps() {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineProps`);\n    }\n    return null;\n}\n// implementation\nfunction defineEmits() {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineEmits`);\n    }\n    return null;\n}\n/**\n * Vue `<script setup>` compiler macro for declaring a component's exposed\n * instance properties when it is accessed by a parent component via template\n * refs.\n *\n * `<script setup>` components are closed by default - i.e. variables inside\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\n * via `defineExpose`.\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n */\nfunction defineExpose(exposed) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineExpose`);\n    }\n}\n/**\n * Vue `<script setup>` compiler macro for providing props default values when\n * using type-based `defineProps` declaration.\n *\n * Example usage:\n * ```ts\n * withDefaults(defineProps<{\n *   size?: number\n *   labels?: string[]\n * }>(), {\n *   size: 3,\n *   labels: () => ['default label']\n * })\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the output\n * and should **not** be actually called at runtime.\n */\nfunction withDefaults(props, defaults) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`withDefaults`);\n    }\n    return null;\n}\nfunction useSlots() {\n    return getContext().slots;\n}\nfunction useAttrs() {\n    return getContext().attrs;\n}\nfunction getContext() {\n    const i = getCurrentInstance();\n    if ((process.env.NODE_ENV !== 'production') && !i) {\n        warn(`useContext() called without active instance.`);\n    }\n    return i.setupContext || (i.setupContext = createSetupContext(i));\n}\n/**\n * Runtime helper for merging default declarations. Imported by compiled code\n * only.\n * @internal\n */\nfunction mergeDefaults(raw, defaults) {\n    const props = isArray(raw)\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\n        : raw;\n    for (const key in defaults) {\n        const opt = props[key];\n        if (opt) {\n            if (isArray(opt) || isFunction(opt)) {\n                props[key] = { type: opt, default: defaults[key] };\n            }\n            else {\n                opt.default = defaults[key];\n            }\n        }\n        else if (opt === null) {\n            props[key] = { default: defaults[key] };\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\n        }\n    }\n    return props;\n}\n/**\n * Used to create a proxy for the rest element when destructuring props with\n * defineProps().\n * @internal\n */\nfunction createPropsRestProxy(props, excludedKeys) {\n    const ret = {};\n    for (const key in props) {\n        if (!excludedKeys.includes(key)) {\n            Object.defineProperty(ret, key, {\n                enumerable: true,\n                get: () => props[key]\n            });\n        }\n    }\n    return ret;\n}\n/**\n * `<script setup>` helper for persisting the current instance context over\n * async/await flows.\n *\n * `@vue/compiler-sfc` converts the following:\n *\n * ```ts\n * const x = await foo()\n * ```\n *\n * into:\n *\n * ```ts\n * let __temp, __restore\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\n * ```\n * @internal\n */\nfunction withAsyncContext(getAwaitable) {\n    const ctx = getCurrentInstance();\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\n        warn(`withAsyncContext called without active current instance. ` +\n            `This is likely a bug.`);\n    }\n    let awaitable = getAwaitable();\n    unsetCurrentInstance();\n    if (isPromise(awaitable)) {\n        awaitable = awaitable.catch(e => {\n            setCurrentInstance(ctx);\n            throw e;\n        });\n    }\n    return [awaitable, () => setCurrentInstance(ctx)];\n}\n\n// Actual implementation\nfunction h(type, propsOrChildren, children) {\n    const l = arguments.length;\n    if (l === 2) {\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n            // single vnode without props\n            if (isVNode(propsOrChildren)) {\n                return createVNode(type, null, [propsOrChildren]);\n            }\n            // props without children\n            return createVNode(type, propsOrChildren);\n        }\n        else {\n            // omit props\n            return createVNode(type, null, propsOrChildren);\n        }\n    }\n    else {\n        if (l > 3) {\n            children = Array.prototype.slice.call(arguments, 2);\n        }\n        else if (l === 3 && isVNode(children)) {\n            children = [children];\n        }\n        return createVNode(type, propsOrChildren, children);\n    }\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\nconst useSSRContext = () => {\n    {\n        const ctx = inject(ssrContextKey);\n        if (!ctx) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Server rendering context not provided. Make sure to only call ` +\n                    `useSSRContext() conditionally in the server build.`);\n        }\n        return ctx;\n    }\n};\n\nfunction isShallow(value) {\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\n}\n\nfunction initCustomFormatter() {\n    /* eslint-disable no-restricted-globals */\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\n        return;\n    }\n    const vueStyle = { style: 'color:#3ba776' };\n    const numberStyle = { style: 'color:#0b1bc9' };\n    const stringStyle = { style: 'color:#b62e24' };\n    const keywordStyle = { style: 'color:#9d288c' };\n    // custom formatter for Chrome\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n    const formatter = {\n        header(obj) {\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n            if (!isObject(obj)) {\n                return null;\n            }\n            if (obj.__isVue) {\n                return ['div', vueStyle, `VueInstance`];\n            }\n            else if (isRef(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, genRefFlag(obj)],\n                    '<',\n                    formatValue(obj.value),\n                    `>`\n                ];\n            }\n            else if (isReactive(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\n                    '<',\n                    formatValue(obj),\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\n                ];\n            }\n            else if (isReadonly(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\n                    '<',\n                    formatValue(obj),\n                    '>'\n                ];\n            }\n            return null;\n        },\n        hasBody(obj) {\n            return obj && obj.__isVue;\n        },\n        body(obj) {\n            if (obj && obj.__isVue) {\n                return [\n                    'div',\n                    {},\n                    ...formatInstance(obj.$)\n                ];\n            }\n        }\n    };\n    function formatInstance(instance) {\n        const blocks = [];\n        if (instance.type.props && instance.props) {\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\n        }\n        if (instance.setupState !== EMPTY_OBJ) {\n            blocks.push(createInstanceBlock('setup', instance.setupState));\n        }\n        if (instance.data !== EMPTY_OBJ) {\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\n        }\n        const computed = extractKeys(instance, 'computed');\n        if (computed) {\n            blocks.push(createInstanceBlock('computed', computed));\n        }\n        const injected = extractKeys(instance, 'inject');\n        if (injected) {\n            blocks.push(createInstanceBlock('injected', injected));\n        }\n        blocks.push([\n            'div',\n            {},\n            [\n                'span',\n                {\n                    style: keywordStyle.style + ';opacity:0.66'\n                },\n                '$ (internal): '\n            ],\n            ['object', { object: instance }]\n        ]);\n        return blocks;\n    }\n    function createInstanceBlock(type, target) {\n        target = extend({}, target);\n        if (!Object.keys(target).length) {\n            return ['span', {}];\n        }\n        return [\n            'div',\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\n            [\n                'div',\n                {\n                    style: 'color:#476582'\n                },\n                type\n            ],\n            [\n                'div',\n                {\n                    style: 'padding-left:1.25em'\n                },\n                ...Object.keys(target).map(key => {\n                    return [\n                        'div',\n                        {},\n                        ['span', keywordStyle, key + ': '],\n                        formatValue(target[key], false)\n                    ];\n                })\n            ]\n        ];\n    }\n    function formatValue(v, asRaw = true) {\n        if (typeof v === 'number') {\n            return ['span', numberStyle, v];\n        }\n        else if (typeof v === 'string') {\n            return ['span', stringStyle, JSON.stringify(v)];\n        }\n        else if (typeof v === 'boolean') {\n            return ['span', keywordStyle, v];\n        }\n        else if (isObject(v)) {\n            return ['object', { object: asRaw ? toRaw(v) : v }];\n        }\n        else {\n            return ['span', stringStyle, String(v)];\n        }\n    }\n    function extractKeys(instance, type) {\n        const Comp = instance.type;\n        if (isFunction(Comp)) {\n            return;\n        }\n        const extracted = {};\n        for (const key in instance.ctx) {\n            if (isKeyOfType(Comp, key, type)) {\n                extracted[key] = instance.ctx[key];\n            }\n        }\n        return extracted;\n    }\n    function isKeyOfType(Comp, key, type) {\n        const opts = Comp[type];\n        if ((isArray(opts) && opts.includes(key)) ||\n            (isObject(opts) && key in opts)) {\n            return true;\n        }\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n            return true;\n        }\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n            return true;\n        }\n    }\n    function genRefFlag(v) {\n        if (isShallow(v)) {\n            return `ShallowRef`;\n        }\n        if (v.effect) {\n            return `ComputedRef`;\n        }\n        return `Ref`;\n    }\n    if (window.devtoolsFormatters) {\n        window.devtoolsFormatters.push(formatter);\n    }\n    else {\n        window.devtoolsFormatters = [formatter];\n    }\n}\n\nfunction withMemo(memo, render, cache, index) {\n    const cached = cache[index];\n    if (cached && isMemoSame(cached, memo)) {\n        return cached;\n    }\n    const ret = render();\n    // shallow clone\n    ret.memo = memo.slice();\n    return (cache[index] = ret);\n}\nfunction isMemoSame(cached, memo) {\n    const prev = cached.memo;\n    if (prev.length != memo.length) {\n        return false;\n    }\n    for (let i = 0; i < prev.length; i++) {\n        if (hasChanged(prev[i], memo[i])) {\n            return false;\n        }\n    }\n    // make sure to let parent block track it when returning cached\n    if (isBlockTreeEnabled > 0 && currentBlock) {\n        currentBlock.push(cached);\n    }\n    return true;\n}\n\n// Core API ------------------------------------------------------------------\nconst version = \"3.2.47\";\nconst _ssrUtils = {\n    createComponentInstance,\n    setupComponent,\n    renderComponentRoot,\n    setCurrentRenderingInstance,\n    isVNode,\n    normalizeVNode\n};\n/**\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\n * @internal\n */\nconst ssrUtils = (_ssrUtils );\n/**\n * @internal only exposed in compat builds\n */\nconst resolveFilter = null;\n/**\n * @internal only exposed in compat builds.\n */\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, assertNumber, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { warn, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, assertNumber, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, isRuntimeOnly, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, camelize as camelize$1, toNumber, extend, EMPTY_OBJ, isObject, looseToNumber, looseIndexOf, isSet, looseEqual, invokeArrayFns, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\nconst doc = (typeof document !== 'undefined' ? document : null);\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template');\nconst nodeOps = {\n    insert: (child, parent, anchor) => {\n        parent.insertBefore(child, anchor || null);\n    },\n    remove: child => {\n        const parent = child.parentNode;\n        if (parent) {\n            parent.removeChild(child);\n        }\n    },\n    createElement: (tag, isSVG, is, props) => {\n        const el = isSVG\n            ? doc.createElementNS(svgNS, tag)\n            : doc.createElement(tag, is ? { is } : undefined);\n        if (tag === 'select' && props && props.multiple != null) {\n            el.setAttribute('multiple', props.multiple);\n        }\n        return el;\n    },\n    createText: text => doc.createTextNode(text),\n    createComment: text => doc.createComment(text),\n    setText: (node, text) => {\n        node.nodeValue = text;\n    },\n    setElementText: (el, text) => {\n        el.textContent = text;\n    },\n    parentNode: node => node.parentNode,\n    nextSibling: node => node.nextSibling,\n    querySelector: selector => doc.querySelector(selector),\n    setScopeId(el, id) {\n        el.setAttribute(id, '');\n    },\n    // __UNSAFE__\n    // Reason: innerHTML.\n    // Static content here can only come from compiled templates.\n    // As long as the user only uses trusted templates, this is safe.\n    insertStaticContent(content, parent, anchor, isSVG, start, end) {\n        // <parent> before | first ... last | anchor </parent>\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\n        // #5308 can only take cached path if:\n        // - has a single root node\n        // - nextSibling info is still available\n        if (start && (start === end || start.nextSibling)) {\n            // cached\n            while (true) {\n                parent.insertBefore(start.cloneNode(true), anchor);\n                if (start === end || !(start = start.nextSibling))\n                    break;\n            }\n        }\n        else {\n            // fresh insert\n            templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n            const template = templateContainer.content;\n            if (isSVG) {\n                // remove outer svg wrapper\n                const wrapper = template.firstChild;\n                while (wrapper.firstChild) {\n                    template.appendChild(wrapper.firstChild);\n                }\n                template.removeChild(wrapper);\n            }\n            parent.insertBefore(template, anchor);\n        }\n        return [\n            // first\n            before ? before.nextSibling : parent.firstChild,\n            // last\n            anchor ? anchor.previousSibling : parent.lastChild\n        ];\n    }\n};\n\n// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\nfunction patchClass(el, value, isSVG) {\n    // directly setting className should be faster than setAttribute in theory\n    // if this is an element during a transition, take the temporary transition\n    // classes into account.\n    const transitionClasses = el._vtc;\n    if (transitionClasses) {\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\n    }\n    if (value == null) {\n        el.removeAttribute('class');\n    }\n    else if (isSVG) {\n        el.setAttribute('class', value);\n    }\n    else {\n        el.className = value;\n    }\n}\n\nfunction patchStyle(el, prev, next) {\n    const style = el.style;\n    const isCssString = isString(next);\n    if (next && !isCssString) {\n        if (prev && !isString(prev)) {\n            for (const key in prev) {\n                if (next[key] == null) {\n                    setStyle(style, key, '');\n                }\n            }\n        }\n        for (const key in next) {\n            setStyle(style, key, next[key]);\n        }\n    }\n    else {\n        const currentDisplay = style.display;\n        if (isCssString) {\n            if (prev !== next) {\n                style.cssText = next;\n            }\n        }\n        else if (prev) {\n            el.removeAttribute('style');\n        }\n        // indicates that the `display` of the element is controlled by `v-show`,\n        // so we always keep the current `display` value regardless of the `style`\n        // value, thus handing over control to `v-show`.\n        if ('_vod' in el) {\n            style.display = currentDisplay;\n        }\n    }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n    if (isArray(val)) {\n        val.forEach(v => setStyle(style, name, v));\n    }\n    else {\n        if (val == null)\n            val = '';\n        if ((process.env.NODE_ENV !== 'production')) {\n            if (semicolonRE.test(val)) {\n                warn(`Unexpected semicolon at the end of '${name}' style value: '${val}'`);\n            }\n        }\n        if (name.startsWith('--')) {\n            // custom property definition\n            style.setProperty(name, val);\n        }\n        else {\n            const prefixed = autoPrefix(style, name);\n            if (importantRE.test(val)) {\n                // !important\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\n            }\n            else {\n                style[prefixed] = val;\n            }\n        }\n    }\n}\nconst prefixes = ['Webkit', 'Moz', 'ms'];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n    const cached = prefixCache[rawName];\n    if (cached) {\n        return cached;\n    }\n    let name = camelize(rawName);\n    if (name !== 'filter' && name in style) {\n        return (prefixCache[rawName] = name);\n    }\n    name = capitalize(name);\n    for (let i = 0; i < prefixes.length; i++) {\n        const prefixed = prefixes[i] + name;\n        if (prefixed in style) {\n            return (prefixCache[rawName] = prefixed);\n        }\n    }\n    return rawName;\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nfunction patchAttr(el, key, value, isSVG, instance) {\n    if (isSVG && key.startsWith('xlink:')) {\n        if (value == null) {\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n        }\n        else {\n            el.setAttributeNS(xlinkNS, key, value);\n        }\n    }\n    else {\n        // note we are only checking boolean attributes that don't have a\n        // corresponding dom prop of the same name here.\n        const isBoolean = isSpecialBooleanAttr(key);\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\n            el.removeAttribute(key);\n        }\n        else {\n            el.setAttribute(key, isBoolean ? '' : value);\n        }\n    }\n}\n\n// __UNSAFE__\n// functions. The user is responsible for using them with only trusted content.\nfunction patchDOMProp(el, key, value, \n// the following args are passed only due to potential innerHTML/textContent\n// overriding existing VNodes, in which case the old tree must be properly\n// unmounted.\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\n    if (key === 'innerHTML' || key === 'textContent') {\n        if (prevChildren) {\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\n        }\n        el[key] = value == null ? '' : value;\n        return;\n    }\n    if (key === 'value' &&\n        el.tagName !== 'PROGRESS' &&\n        // custom elements may use _value internally\n        !el.tagName.includes('-')) {\n        // store value as _value as well since\n        // non-string values will be stringified.\n        el._value = value;\n        const newValue = value == null ? '' : value;\n        if (el.value !== newValue ||\n            // #4956: always set for OPTION elements because its value falls back to\n            // textContent if no value attribute is present. And setting .value for\n            // OPTION has no side effect\n            el.tagName === 'OPTION') {\n            el.value = newValue;\n        }\n        if (value == null) {\n            el.removeAttribute(key);\n        }\n        return;\n    }\n    let needRemove = false;\n    if (value === '' || value == null) {\n        const type = typeof el[key];\n        if (type === 'boolean') {\n            // e.g. <select multiple> compiles to { multiple: '' }\n            value = includeBooleanAttr(value);\n        }\n        else if (value == null && type === 'string') {\n            // e.g. <div :id=\"null\">\n            value = '';\n            needRemove = true;\n        }\n        else if (type === 'number') {\n            // e.g. <img :width=\"null\">\n            value = 0;\n            needRemove = true;\n        }\n    }\n    // some properties perform value validation and throw,\n    // some properties has getter, no setter, will error in 'use strict'\n    // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\n    try {\n        el[key] = value;\n    }\n    catch (e) {\n        // do not warn if value is auto-coerced from nullish values\n        if ((process.env.NODE_ENV !== 'production') && !needRemove) {\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\n                `value ${value} is invalid.`, e);\n        }\n    }\n    needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n    el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n    el.removeEventListener(event, handler, options);\n}\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n    // vei = vue event invokers\n    const invokers = el._vei || (el._vei = {});\n    const existingInvoker = invokers[rawName];\n    if (nextValue && existingInvoker) {\n        // patch\n        existingInvoker.value = nextValue;\n    }\n    else {\n        const [name, options] = parseName(rawName);\n        if (nextValue) {\n            // add\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\n            addEventListener(el, name, invoker, options);\n        }\n        else if (existingInvoker) {\n            // remove\n            removeEventListener(el, name, existingInvoker, options);\n            invokers[rawName] = undefined;\n        }\n    }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n    let options;\n    if (optionsModifierRE.test(name)) {\n        options = {};\n        let m;\n        while ((m = name.match(optionsModifierRE))) {\n            name = name.slice(0, name.length - m[0].length);\n            options[m[0].toLowerCase()] = true;\n        }\n    }\n    const event = name[2] === ':' ? name.slice(3) : hyphenate(name.slice(2));\n    return [event, options];\n}\n// To avoid the overhead of repeatedly calling Date.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow = 0;\nconst p = /*#__PURE__*/ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()));\nfunction createInvoker(initialValue, instance) {\n    const invoker = (e) => {\n        // async edge case vuejs/vue#6566\n        // inner click event triggers patch, event handler\n        // attached to outer element during patch, and triggered again. This\n        // happens because browsers fire microtask ticks between event propagation.\n        // this no longer happens for templates in Vue 3, but could still be\n        // theoretically possible for hand-written render functions.\n        // the solution: we save the timestamp when a handler is attached,\n        // and also attach the timestamp to any event that was handled by vue\n        // for the first time (to avoid inconsistent event timestamp implementations\n        // or events fired from iframes, e.g. #2513)\n        // The handler would only fire if the event passed to it was fired\n        // AFTER it was attached.\n        if (!e._vts) {\n            e._vts = Date.now();\n        }\n        else if (e._vts <= invoker.attached) {\n            return;\n        }\n        callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* ErrorCodes.NATIVE_EVENT_HANDLER */, [e]);\n    };\n    invoker.value = initialValue;\n    invoker.attached = getNow();\n    return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n    if (isArray(value)) {\n        const originalStop = e.stopImmediatePropagation;\n        e.stopImmediatePropagation = () => {\n            originalStop.call(e);\n            e._stopped = true;\n        };\n        return value.map(fn => (e) => !e._stopped && fn && fn(e));\n    }\n    else {\n        return value;\n    }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n    if (key === 'class') {\n        patchClass(el, nextValue, isSVG);\n    }\n    else if (key === 'style') {\n        patchStyle(el, prevValue, nextValue);\n    }\n    else if (isOn(key)) {\n        // ignore v-model listeners\n        if (!isModelListener(key)) {\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\n        }\n    }\n    else if (key[0] === '.'\n        ? ((key = key.slice(1)), true)\n        : key[0] === '^'\n            ? ((key = key.slice(1)), false)\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\n    }\n    else {\n        // special case for <input v-model type=\"checkbox\"> with\n        // :true-value & :false-value\n        // store value as dom properties since non-string values will be\n        // stringified.\n        if (key === 'true-value') {\n            el._trueValue = nextValue;\n        }\n        else if (key === 'false-value') {\n            el._falseValue = nextValue;\n        }\n        patchAttr(el, key, nextValue, isSVG);\n    }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n    if (isSVG) {\n        // most keys must be set as attribute on svg elements to work\n        // ...except innerHTML & textContent\n        if (key === 'innerHTML' || key === 'textContent') {\n            return true;\n        }\n        // or native onclick with function values\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n            return true;\n        }\n        return false;\n    }\n    // these are enumerated attrs, however their corresponding DOM properties\n    // are actually booleans - this leads to setting it with a string \"false\"\n    // value leading it to be coerced to `true`, so we need to always treat\n    // them as attributes.\n    // Note that `contentEditable` doesn't have this problem: its DOM\n    // property is also enumerated string values.\n    if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\n        return false;\n    }\n    // #1787, #2840 form property on form elements is readonly and must be set as\n    // attribute.\n    if (key === 'form') {\n        return false;\n    }\n    // #1526 <input list> must be set as attribute\n    if (key === 'list' && el.tagName === 'INPUT') {\n        return false;\n    }\n    // #2766 <textarea type> must be set as attribute\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\n        return false;\n    }\n    // native onclick with string value, must be set as attribute\n    if (nativeOnRE.test(key) && isString(value)) {\n        return false;\n    }\n    return key in el;\n}\n\nfunction defineCustomElement(options, hydrate) {\n    const Comp = defineComponent(options);\n    class VueCustomElement extends VueElement {\n        constructor(initialProps) {\n            super(Comp, initialProps, hydrate);\n        }\n    }\n    VueCustomElement.def = Comp;\n    return VueCustomElement;\n}\nconst defineSSRCustomElement = ((options) => {\n    // @ts-ignore\n    return defineCustomElement(options, hydrate);\n});\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\n});\nclass VueElement extends BaseClass {\n    constructor(_def, _props = {}, hydrate) {\n        super();\n        this._def = _def;\n        this._props = _props;\n        /**\n         * @internal\n         */\n        this._instance = null;\n        this._connected = false;\n        this._resolved = false;\n        this._numberProps = null;\n        if (this.shadowRoot && hydrate) {\n            hydrate(this._createVNode(), this.shadowRoot);\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\n            }\n            this.attachShadow({ mode: 'open' });\n            if (!this._def.__asyncLoader) {\n                // for sync component defs we can immediately resolve props\n                this._resolveProps(this._def);\n            }\n        }\n    }\n    connectedCallback() {\n        this._connected = true;\n        if (!this._instance) {\n            if (this._resolved) {\n                this._update();\n            }\n            else {\n                this._resolveDef();\n            }\n        }\n    }\n    disconnectedCallback() {\n        this._connected = false;\n        nextTick(() => {\n            if (!this._connected) {\n                render(null, this.shadowRoot);\n                this._instance = null;\n            }\n        });\n    }\n    /**\n     * resolve inner component definition (handle possible async component)\n     */\n    _resolveDef() {\n        this._resolved = true;\n        // set initial attrs\n        for (let i = 0; i < this.attributes.length; i++) {\n            this._setAttr(this.attributes[i].name);\n        }\n        // watch future attr changes\n        new MutationObserver(mutations => {\n            for (const m of mutations) {\n                this._setAttr(m.attributeName);\n            }\n        }).observe(this, { attributes: true });\n        const resolve = (def, isAsync = false) => {\n            const { props, styles } = def;\n            // cast Number-type props set before resolve\n            let numberProps;\n            if (props && !isArray(props)) {\n                for (const key in props) {\n                    const opt = props[key];\n                    if (opt === Number || (opt && opt.type === Number)) {\n                        if (key in this._props) {\n                            this._props[key] = toNumber(this._props[key]);\n                        }\n                        (numberProps || (numberProps = Object.create(null)))[camelize$1(key)] = true;\n                    }\n                }\n            }\n            this._numberProps = numberProps;\n            if (isAsync) {\n                // defining getter/setters on prototype\n                // for sync defs, this already happened in the constructor\n                this._resolveProps(def);\n            }\n            // apply CSS\n            this._applyStyles(styles);\n            // initial render\n            this._update();\n        };\n        const asyncDef = this._def.__asyncLoader;\n        if (asyncDef) {\n            asyncDef().then(def => resolve(def, true));\n        }\n        else {\n            resolve(this._def);\n        }\n    }\n    _resolveProps(def) {\n        const { props } = def;\n        const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n        // check if there are props set pre-upgrade or connect\n        for (const key of Object.keys(this)) {\n            if (key[0] !== '_' && declaredPropKeys.includes(key)) {\n                this._setProp(key, this[key], true, false);\n            }\n        }\n        // defining getter/setters on prototype\n        for (const key of declaredPropKeys.map(camelize$1)) {\n            Object.defineProperty(this, key, {\n                get() {\n                    return this._getProp(key);\n                },\n                set(val) {\n                    this._setProp(key, val);\n                }\n            });\n        }\n    }\n    _setAttr(key) {\n        let value = this.getAttribute(key);\n        const camelKey = camelize$1(key);\n        if (this._numberProps && this._numberProps[camelKey]) {\n            value = toNumber(value);\n        }\n        this._setProp(camelKey, value, false);\n    }\n    /**\n     * @internal\n     */\n    _getProp(key) {\n        return this._props[key];\n    }\n    /**\n     * @internal\n     */\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n        if (val !== this._props[key]) {\n            this._props[key] = val;\n            if (shouldUpdate && this._instance) {\n                this._update();\n            }\n            // reflect\n            if (shouldReflect) {\n                if (val === true) {\n                    this.setAttribute(hyphenate(key), '');\n                }\n                else if (typeof val === 'string' || typeof val === 'number') {\n                    this.setAttribute(hyphenate(key), val + '');\n                }\n                else if (!val) {\n                    this.removeAttribute(hyphenate(key));\n                }\n            }\n        }\n    }\n    _update() {\n        render(this._createVNode(), this.shadowRoot);\n    }\n    _createVNode() {\n        const vnode = createVNode(this._def, extend({}, this._props));\n        if (!this._instance) {\n            vnode.ce = instance => {\n                this._instance = instance;\n                instance.isCE = true;\n                // HMR\n                if ((process.env.NODE_ENV !== 'production')) {\n                    instance.ceReload = newStyles => {\n                        // always reset styles\n                        if (this._styles) {\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\n                            this._styles.length = 0;\n                        }\n                        this._applyStyles(newStyles);\n                        this._instance = null;\n                        this._update();\n                    };\n                }\n                const dispatch = (event, args) => {\n                    this.dispatchEvent(new CustomEvent(event, {\n                        detail: args\n                    }));\n                };\n                // intercept emit\n                instance.emit = (event, ...args) => {\n                    // dispatch both the raw and hyphenated versions of an event\n                    // to match Vue behavior\n                    dispatch(event, args);\n                    if (hyphenate(event) !== event) {\n                        dispatch(hyphenate(event), args);\n                    }\n                };\n                // locate nearest Vue custom element parent for provide/inject\n                let parent = this;\n                while ((parent =\n                    parent && (parent.parentNode || parent.host))) {\n                    if (parent instanceof VueElement) {\n                        instance.parent = parent._instance;\n                        instance.provides = parent._instance.provides;\n                        break;\n                    }\n                }\n            };\n        }\n        return vnode;\n    }\n    _applyStyles(styles) {\n        if (styles) {\n            styles.forEach(css => {\n                const s = document.createElement('style');\n                s.textContent = css;\n                this.shadowRoot.appendChild(s);\n                // record for HMR\n                if ((process.env.NODE_ENV !== 'production')) {\n                    (this._styles || (this._styles = [])).push(s);\n                }\n            });\n        }\n    }\n}\n\nfunction useCssModule(name = '$style') {\n    /* istanbul ignore else */\n    {\n        const instance = getCurrentInstance();\n        if (!instance) {\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\n            return EMPTY_OBJ;\n        }\n        const modules = instance.type.__cssModules;\n        if (!modules) {\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\n            return EMPTY_OBJ;\n        }\n        const mod = modules[name];\n        if (!mod) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Current instance does not have CSS module named \"${name}\".`);\n            return EMPTY_OBJ;\n        }\n        return mod;\n    }\n}\n\n/**\n * Runtime helper for SFC's CSS variable injection feature.\n * @private\n */\nfunction useCssVars(getter) {\n    const instance = getCurrentInstance();\n    /* istanbul ignore next */\n    if (!instance) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`useCssVars is called without current active component instance.`);\n        return;\n    }\n    const updateTeleports = (instance.ut = (vars = getter(instance.proxy)) => {\n        Array.from(document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)).forEach(node => setVarsOnNode(node, vars));\n    });\n    const setVars = () => {\n        const vars = getter(instance.proxy);\n        setVarsOnVNode(instance.subTree, vars);\n        updateTeleports(vars);\n    };\n    watchPostEffect(setVars);\n    onMounted(() => {\n        const ob = new MutationObserver(setVars);\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\n        onUnmounted(() => ob.disconnect());\n    });\n}\nfunction setVarsOnVNode(vnode, vars) {\n    if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n        const suspense = vnode.suspense;\n        vnode = suspense.activeBranch;\n        if (suspense.pendingBranch && !suspense.isHydrating) {\n            suspense.effects.push(() => {\n                setVarsOnVNode(suspense.activeBranch, vars);\n            });\n        }\n    }\n    // drill down HOCs until it's a non-component vnode\n    while (vnode.component) {\n        vnode = vnode.component.subTree;\n    }\n    if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && vnode.el) {\n        setVarsOnNode(vnode.el, vars);\n    }\n    else if (vnode.type === Fragment) {\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\n    }\n    else if (vnode.type === Static) {\n        let { el, anchor } = vnode;\n        while (el) {\n            setVarsOnNode(el, vars);\n            if (el === anchor)\n                break;\n            el = el.nextSibling;\n        }\n    }\n}\nfunction setVarsOnNode(el, vars) {\n    if (el.nodeType === 1) {\n        const style = el.style;\n        for (const key in vars) {\n            style.setProperty(`--${key}`, vars[key]);\n        }\n    }\n}\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = 'Transition';\nconst DOMTransitionPropsValidators = {\n    name: String,\n    type: String,\n    css: {\n        type: Boolean,\n        default: true\n    },\n    duration: [String, Number, Object],\n    enterFromClass: String,\n    enterActiveClass: String,\n    enterToClass: String,\n    appearFromClass: String,\n    appearActiveClass: String,\n    appearToClass: String,\n    leaveFromClass: String,\n    leaveActiveClass: String,\n    leaveToClass: String\n};\nconst TransitionPropsValidators = (Transition.props =\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (hook, args = []) => {\n    if (isArray(hook)) {\n        hook.forEach(h => h(...args));\n    }\n    else if (hook) {\n        hook(...args);\n    }\n};\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (hook) => {\n    return hook\n        ? isArray(hook)\n            ? hook.some(h => h.length > 1)\n            : hook.length > 1\n        : false;\n};\nfunction resolveTransitionProps(rawProps) {\n    const baseProps = {};\n    for (const key in rawProps) {\n        if (!(key in DOMTransitionPropsValidators)) {\n            baseProps[key] = rawProps[key];\n        }\n    }\n    if (rawProps.css === false) {\n        return baseProps;\n    }\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\n    const durations = normalizeDuration(duration);\n    const enterDuration = durations && durations[0];\n    const leaveDuration = durations && durations[1];\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\n    const finishEnter = (el, isAppear, done) => {\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n        done && done();\n    };\n    const finishLeave = (el, done) => {\n        el._isLeaving = false;\n        removeTransitionClass(el, leaveFromClass);\n        removeTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveActiveClass);\n        done && done();\n    };\n    const makeEnterHook = (isAppear) => {\n        return (el, done) => {\n            const hook = isAppear ? onAppear : onEnter;\n            const resolve = () => finishEnter(el, isAppear, done);\n            callHook(hook, [el, resolve]);\n            nextFrame(() => {\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n                if (!hasExplicitCallback(hook)) {\n                    whenTransitionEnds(el, type, enterDuration, resolve);\n                }\n            });\n        };\n    };\n    return extend(baseProps, {\n        onBeforeEnter(el) {\n            callHook(onBeforeEnter, [el]);\n            addTransitionClass(el, enterFromClass);\n            addTransitionClass(el, enterActiveClass);\n        },\n        onBeforeAppear(el) {\n            callHook(onBeforeAppear, [el]);\n            addTransitionClass(el, appearFromClass);\n            addTransitionClass(el, appearActiveClass);\n        },\n        onEnter: makeEnterHook(false),\n        onAppear: makeEnterHook(true),\n        onLeave(el, done) {\n            el._isLeaving = true;\n            const resolve = () => finishLeave(el, done);\n            addTransitionClass(el, leaveFromClass);\n            // force reflow so *-leave-from classes immediately take effect (#2593)\n            forceReflow();\n            addTransitionClass(el, leaveActiveClass);\n            nextFrame(() => {\n                if (!el._isLeaving) {\n                    // cancelled\n                    return;\n                }\n                removeTransitionClass(el, leaveFromClass);\n                addTransitionClass(el, leaveToClass);\n                if (!hasExplicitCallback(onLeave)) {\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\n                }\n            });\n            callHook(onLeave, [el, resolve]);\n        },\n        onEnterCancelled(el) {\n            finishEnter(el, false);\n            callHook(onEnterCancelled, [el]);\n        },\n        onAppearCancelled(el) {\n            finishEnter(el, true);\n            callHook(onAppearCancelled, [el]);\n        },\n        onLeaveCancelled(el) {\n            finishLeave(el);\n            callHook(onLeaveCancelled, [el]);\n        }\n    });\n}\nfunction normalizeDuration(duration) {\n    if (duration == null) {\n        return null;\n    }\n    else if (isObject(duration)) {\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\n    }\n    else {\n        const n = NumberOf(duration);\n        return [n, n];\n    }\n}\nfunction NumberOf(val) {\n    const res = toNumber(val);\n    if ((process.env.NODE_ENV !== 'production')) {\n        assertNumber(res, '<transition> explicit duration');\n    }\n    return res;\n}\nfunction addTransitionClass(el, cls) {\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\n    (el._vtc ||\n        (el._vtc = new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\n    const { _vtc } = el;\n    if (_vtc) {\n        _vtc.delete(cls);\n        if (!_vtc.size) {\n            el._vtc = undefined;\n        }\n    }\n}\nfunction nextFrame(cb) {\n    requestAnimationFrame(() => {\n        requestAnimationFrame(cb);\n    });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n    const id = (el._endId = ++endId);\n    const resolveIfNotStale = () => {\n        if (id === el._endId) {\n            resolve();\n        }\n    };\n    if (explicitTimeout) {\n        return setTimeout(resolveIfNotStale, explicitTimeout);\n    }\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n    if (!type) {\n        return resolve();\n    }\n    const endEvent = type + 'end';\n    let ended = 0;\n    const end = () => {\n        el.removeEventListener(endEvent, onEnd);\n        resolveIfNotStale();\n    };\n    const onEnd = (e) => {\n        if (e.target === el && ++ended >= propCount) {\n            end();\n        }\n    };\n    setTimeout(() => {\n        if (ended < propCount) {\n            end();\n        }\n    }, timeout + 1);\n    el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n    const styles = window.getComputedStyle(el);\n    // JSDOM may return undefined for transition properties\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\n    const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n    const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n    const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\n    let type = null;\n    let timeout = 0;\n    let propCount = 0;\n    /* istanbul ignore if */\n    if (expectedType === TRANSITION) {\n        if (transitionTimeout > 0) {\n            type = TRANSITION;\n            timeout = transitionTimeout;\n            propCount = transitionDurations.length;\n        }\n    }\n    else if (expectedType === ANIMATION) {\n        if (animationTimeout > 0) {\n            type = ANIMATION;\n            timeout = animationTimeout;\n            propCount = animationDurations.length;\n        }\n    }\n    else {\n        timeout = Math.max(transitionTimeout, animationTimeout);\n        type =\n            timeout > 0\n                ? transitionTimeout > animationTimeout\n                    ? TRANSITION\n                    : ANIMATION\n                : null;\n        propCount = type\n            ? type === TRANSITION\n                ? transitionDurations.length\n                : animationDurations.length\n            : 0;\n    }\n    const hasTransform = type === TRANSITION &&\n        /\\b(transform|all)(,|$)/.test(getStyleProperties(`${TRANSITION}Property`).toString());\n    return {\n        type,\n        timeout,\n        propCount,\n        hasTransform\n    };\n}\nfunction getTimeout(delays, durations) {\n    while (delays.length < durations.length) {\n        delays = delays.concat(delays);\n    }\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s) {\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\n}\n// synchronously force layout to put elements into a certain state\nfunction forceReflow() {\n    return document.body.offsetHeight;\n}\n\nconst positionMap = new WeakMap();\nconst newPositionMap = new WeakMap();\nconst TransitionGroupImpl = {\n    name: 'TransitionGroup',\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\n        tag: String,\n        moveClass: String\n    }),\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        const state = useTransitionState();\n        let prevChildren;\n        let children;\n        onUpdated(() => {\n            // children is guaranteed to exist after initial render\n            if (!prevChildren.length) {\n                return;\n            }\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\n                return;\n            }\n            // we divide the work into three loops to avoid mixing DOM reads and writes\n            // in each iteration - which helps prevent layout thrashing.\n            prevChildren.forEach(callPendingCbs);\n            prevChildren.forEach(recordPosition);\n            const movedChildren = prevChildren.filter(applyTranslation);\n            // force reflow to put everything in position\n            forceReflow();\n            movedChildren.forEach(c => {\n                const el = c.el;\n                const style = el.style;\n                addTransitionClass(el, moveClass);\n                style.transform = style.webkitTransform = style.transitionDuration = '';\n                const cb = (el._moveCb = (e) => {\n                    if (e && e.target !== el) {\n                        return;\n                    }\n                    if (!e || /transform$/.test(e.propertyName)) {\n                        el.removeEventListener('transitionend', cb);\n                        el._moveCb = null;\n                        removeTransitionClass(el, moveClass);\n                    }\n                });\n                el.addEventListener('transitionend', cb);\n            });\n        });\n        return () => {\n            const rawProps = toRaw(props);\n            const cssTransitionProps = resolveTransitionProps(rawProps);\n            let tag = rawProps.tag || Fragment;\n            prevChildren = children;\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (child.key != null) {\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`<TransitionGroup> children must be keyed.`);\n                }\n            }\n            if (prevChildren) {\n                for (let i = 0; i < prevChildren.length; i++) {\n                    const child = prevChildren[i];\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                    positionMap.set(child, child.el.getBoundingClientRect());\n                }\n            }\n            return createVNode(tag, null, children);\n        };\n    }\n};\n/**\n * TransitionGroup does not support \"mode\" so we need to remove it from the\n * props declarations, but direct delete operation is considered a side effect\n * and will make the entire transition feature non-tree-shakeable, so we do it\n * in a function and mark the function's invocation as pure.\n */\nconst removeMode = (props) => delete props.mode;\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n    const el = c.el;\n    if (el._moveCb) {\n        el._moveCb();\n    }\n    if (el._enterCb) {\n        el._enterCb();\n    }\n}\nfunction recordPosition(c) {\n    newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n    const oldPos = positionMap.get(c);\n    const newPos = newPositionMap.get(c);\n    const dx = oldPos.left - newPos.left;\n    const dy = oldPos.top - newPos.top;\n    if (dx || dy) {\n        const s = c.el.style;\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n        s.transitionDuration = '0s';\n        return c;\n    }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n    // Detect whether an element with the move class applied has\n    // CSS transitions. Since the element may be inside an entering\n    // transition at this very moment, we make a clone of it and remove\n    // all other transition classes applied to ensure only the move class\n    // is applied.\n    const clone = el.cloneNode();\n    if (el._vtc) {\n        el._vtc.forEach(cls => {\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\n        });\n    }\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\n    clone.style.display = 'none';\n    const container = (root.nodeType === 1 ? root : root.parentNode);\n    container.appendChild(clone);\n    const { hasTransform } = getTransitionInfo(clone);\n    container.removeChild(clone);\n    return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n    const fn = vnode.props['onUpdate:modelValue'] ||\n        (false );\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n    e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n    const target = e.target;\n    if (target.composing) {\n        target.composing = false;\n        target.dispatchEvent(new Event('input'));\n    }\n}\n// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nconst vModelText = {\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\n        addEventListener(el, lazy ? 'change' : 'input', e => {\n            if (e.target.composing)\n                return;\n            let domValue = el.value;\n            if (trim) {\n                domValue = domValue.trim();\n            }\n            if (castToNumber) {\n                domValue = looseToNumber(domValue);\n            }\n            el._assign(domValue);\n        });\n        if (trim) {\n            addEventListener(el, 'change', () => {\n                el.value = el.value.trim();\n            });\n        }\n        if (!lazy) {\n            addEventListener(el, 'compositionstart', onCompositionStart);\n            addEventListener(el, 'compositionend', onCompositionEnd);\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\n            // switching focus before confirming composition choice\n            // this also fixes the issue where some browsers e.g. iOS Chrome\n            // fires \"change\" instead of \"input\" on autocomplete.\n            addEventListener(el, 'change', onCompositionEnd);\n        }\n    },\n    // set value on mounted so it's after min/max for type=\"range\"\n    mounted(el, { value }) {\n        el.value = value == null ? '' : value;\n    },\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        // avoid clearing unresolved text. #2302\n        if (el.composing)\n            return;\n        if (document.activeElement === el && el.type !== 'range') {\n            if (lazy) {\n                return;\n            }\n            if (trim && el.value.trim() === value) {\n                return;\n            }\n            if ((number || el.type === 'number') &&\n                looseToNumber(el.value) === value) {\n                return;\n            }\n        }\n        const newValue = value == null ? '' : value;\n        if (el.value !== newValue) {\n            el.value = newValue;\n        }\n    }\n};\nconst vModelCheckbox = {\n    // #4096 array checkboxes need to be deep traversed\n    deep: true,\n    created(el, _, vnode) {\n        el._assign = getModelAssigner(vnode);\n        addEventListener(el, 'change', () => {\n            const modelValue = el._modelValue;\n            const elementValue = getValue(el);\n            const checked = el.checked;\n            const assign = el._assign;\n            if (isArray(modelValue)) {\n                const index = looseIndexOf(modelValue, elementValue);\n                const found = index !== -1;\n                if (checked && !found) {\n                    assign(modelValue.concat(elementValue));\n                }\n                else if (!checked && found) {\n                    const filtered = [...modelValue];\n                    filtered.splice(index, 1);\n                    assign(filtered);\n                }\n            }\n            else if (isSet(modelValue)) {\n                const cloned = new Set(modelValue);\n                if (checked) {\n                    cloned.add(elementValue);\n                }\n                else {\n                    cloned.delete(elementValue);\n                }\n                assign(cloned);\n            }\n            else {\n                assign(getCheckboxValue(el, checked));\n            }\n        });\n    },\n    // set initial checked on mount to wait for true-value/false-value\n    mounted: setChecked,\n    beforeUpdate(el, binding, vnode) {\n        el._assign = getModelAssigner(vnode);\n        setChecked(el, binding, vnode);\n    }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n    el._modelValue = value;\n    if (isArray(value)) {\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\n    }\n    else if (isSet(value)) {\n        el.checked = value.has(vnode.props.value);\n    }\n    else if (value !== oldValue) {\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\n    }\n}\nconst vModelRadio = {\n    created(el, { value }, vnode) {\n        el.checked = looseEqual(value, vnode.props.value);\n        el._assign = getModelAssigner(vnode);\n        addEventListener(el, 'change', () => {\n            el._assign(getValue(el));\n        });\n    },\n    beforeUpdate(el, { value, oldValue }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        if (value !== oldValue) {\n            el.checked = looseEqual(value, vnode.props.value);\n        }\n    }\n};\nconst vModelSelect = {\n    // <select multiple> value need to be deep traversed\n    deep: true,\n    created(el, { value, modifiers: { number } }, vnode) {\n        const isSetModel = isSet(value);\n        addEventListener(el, 'change', () => {\n            const selectedVal = Array.prototype.filter\n                .call(el.options, (o) => o.selected)\n                .map((o) => number ? looseToNumber(getValue(o)) : getValue(o));\n            el._assign(el.multiple\n                ? isSetModel\n                    ? new Set(selectedVal)\n                    : selectedVal\n                : selectedVal[0]);\n        });\n        el._assign = getModelAssigner(vnode);\n    },\n    // set value in mounted & updated because <select> relies on its children\n    // <option>s.\n    mounted(el, { value }) {\n        setSelected(el, value);\n    },\n    beforeUpdate(el, _binding, vnode) {\n        el._assign = getModelAssigner(vnode);\n    },\n    updated(el, { value }) {\n        setSelected(el, value);\n    }\n};\nfunction setSelected(el, value) {\n    const isMultiple = el.multiple;\n    if (isMultiple && !isArray(value) && !isSet(value)) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\n        return;\n    }\n    for (let i = 0, l = el.options.length; i < l; i++) {\n        const option = el.options[i];\n        const optionValue = getValue(option);\n        if (isMultiple) {\n            if (isArray(value)) {\n                option.selected = looseIndexOf(value, optionValue) > -1;\n            }\n            else {\n                option.selected = value.has(optionValue);\n            }\n        }\n        else {\n            if (looseEqual(getValue(option), value)) {\n                if (el.selectedIndex !== i)\n                    el.selectedIndex = i;\n                return;\n            }\n        }\n    }\n    if (!isMultiple && el.selectedIndex !== -1) {\n        el.selectedIndex = -1;\n    }\n}\n// retrieve raw value set via :value bindings\nfunction getValue(el) {\n    return '_value' in el ? el._value : el.value;\n}\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\nfunction getCheckboxValue(el, checked) {\n    const key = checked ? '_trueValue' : '_falseValue';\n    return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n    created(el, binding, vnode) {\n        callModelHook(el, binding, vnode, null, 'created');\n    },\n    mounted(el, binding, vnode) {\n        callModelHook(el, binding, vnode, null, 'mounted');\n    },\n    beforeUpdate(el, binding, vnode, prevVNode) {\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\n    },\n    updated(el, binding, vnode, prevVNode) {\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\n    }\n};\nfunction resolveDynamicModel(tagName, type) {\n    switch (tagName) {\n        case 'SELECT':\n            return vModelSelect;\n        case 'TEXTAREA':\n            return vModelText;\n        default:\n            switch (type) {\n                case 'checkbox':\n                    return vModelCheckbox;\n                case 'radio':\n                    return vModelRadio;\n                default:\n                    return vModelText;\n            }\n    }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n    const modelToUse = resolveDynamicModel(el.tagName, vnode.props && vnode.props.type);\n    const fn = modelToUse[hook];\n    fn && fn(el, binding, vnode, prevVNode);\n}\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nfunction initVModelForSSR() {\n    vModelText.getSSRProps = ({ value }) => ({ value });\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\n        if (vnode.props && looseEqual(vnode.props.value, value)) {\n            return { checked: true };\n        }\n    };\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n        if (isArray(value)) {\n            if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n                return { checked: true };\n            }\n        }\n        else if (isSet(value)) {\n            if (vnode.props && value.has(vnode.props.value)) {\n                return { checked: true };\n            }\n        }\n        else if (value) {\n            return { checked: true };\n        }\n    };\n    vModelDynamic.getSSRProps = (binding, vnode) => {\n        if (typeof vnode.type !== 'string') {\n            return;\n        }\n        const modelToUse = resolveDynamicModel(\n        // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n        vnode.type.toUpperCase(), vnode.props && vnode.props.type);\n        if (modelToUse.getSSRProps) {\n            return modelToUse.getSSRProps(binding, vnode);\n        }\n    };\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\nconst modifierGuards = {\n    stop: e => e.stopPropagation(),\n    prevent: e => e.preventDefault(),\n    self: e => e.target !== e.currentTarget,\n    ctrl: e => !e.ctrlKey,\n    shift: e => !e.shiftKey,\n    alt: e => !e.altKey,\n    meta: e => !e.metaKey,\n    left: e => 'button' in e && e.button !== 0,\n    middle: e => 'button' in e && e.button !== 1,\n    right: e => 'button' in e && e.button !== 2,\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\n};\n/**\n * @private\n */\nconst withModifiers = (fn, modifiers) => {\n    return (event, ...args) => {\n        for (let i = 0; i < modifiers.length; i++) {\n            const guard = modifierGuards[modifiers[i]];\n            if (guard && guard(event, modifiers))\n                return;\n        }\n        return fn(event, ...args);\n    };\n};\n// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames = {\n    esc: 'escape',\n    space: ' ',\n    up: 'arrow-up',\n    left: 'arrow-left',\n    right: 'arrow-right',\n    down: 'arrow-down',\n    delete: 'backspace'\n};\n/**\n * @private\n */\nconst withKeys = (fn, modifiers) => {\n    return (event) => {\n        if (!('key' in event)) {\n            return;\n        }\n        const eventKey = hyphenate(event.key);\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\n            return fn(event);\n        }\n    };\n};\n\nconst vShow = {\n    beforeMount(el, { value }, { transition }) {\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\n        if (transition && value) {\n            transition.beforeEnter(el);\n        }\n        else {\n            setDisplay(el, value);\n        }\n    },\n    mounted(el, { value }, { transition }) {\n        if (transition && value) {\n            transition.enter(el);\n        }\n    },\n    updated(el, { value, oldValue }, { transition }) {\n        if (!value === !oldValue)\n            return;\n        if (transition) {\n            if (value) {\n                transition.beforeEnter(el);\n                setDisplay(el, true);\n                transition.enter(el);\n            }\n            else {\n                transition.leave(el, () => {\n                    setDisplay(el, false);\n                });\n            }\n        }\n        else {\n            setDisplay(el, value);\n        }\n    },\n    beforeUnmount(el, { value }) {\n        setDisplay(el, value);\n    }\n};\nfunction setDisplay(el, value) {\n    el.style.display = value ? el._vod : 'none';\n}\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nfunction initVShowForSSR() {\n    vShow.getSSRProps = ({ value }) => {\n        if (!value) {\n            return { style: { display: 'none' } };\n        }\n    };\n}\n\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps);\n// lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n    return (renderer ||\n        (renderer = createRenderer(rendererOptions)));\n}\nfunction ensureHydrationRenderer() {\n    renderer = enabledHydration\n        ? renderer\n        : createHydrationRenderer(rendererOptions);\n    enabledHydration = true;\n    return renderer;\n}\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\nconst render = ((...args) => {\n    ensureRenderer().render(...args);\n});\nconst hydrate = ((...args) => {\n    ensureHydrationRenderer().hydrate(...args);\n});\nconst createApp = ((...args) => {\n    const app = ensureRenderer().createApp(...args);\n    if ((process.env.NODE_ENV !== 'production')) {\n        injectNativeTagCheck(app);\n        injectCompilerOptionsCheck(app);\n    }\n    const { mount } = app;\n    app.mount = (containerOrSelector) => {\n        const container = normalizeContainer(containerOrSelector);\n        if (!container)\n            return;\n        const component = app._component;\n        if (!isFunction(component) && !component.render && !component.template) {\n            // __UNSAFE__\n            // Reason: potential execution of JS expressions in in-DOM template.\n            // The user must make sure the in-DOM template is trusted. If it's\n            // rendered by the server, the template should not contain any user data.\n            component.template = container.innerHTML;\n        }\n        // clear content before mounting\n        container.innerHTML = '';\n        const proxy = mount(container, false, container instanceof SVGElement);\n        if (container instanceof Element) {\n            container.removeAttribute('v-cloak');\n            container.setAttribute('data-v-app', '');\n        }\n        return proxy;\n    };\n    return app;\n});\nconst createSSRApp = ((...args) => {\n    const app = ensureHydrationRenderer().createApp(...args);\n    if ((process.env.NODE_ENV !== 'production')) {\n        injectNativeTagCheck(app);\n        injectCompilerOptionsCheck(app);\n    }\n    const { mount } = app;\n    app.mount = (containerOrSelector) => {\n        const container = normalizeContainer(containerOrSelector);\n        if (container) {\n            return mount(container, true, container instanceof SVGElement);\n        }\n    };\n    return app;\n});\nfunction injectNativeTagCheck(app) {\n    // Inject `isNativeTag`\n    // this is used for component name validation (dev only)\n    Object.defineProperty(app.config, 'isNativeTag', {\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\n        writable: false\n    });\n}\n// dev only\nfunction injectCompilerOptionsCheck(app) {\n    if (isRuntimeOnly()) {\n        const isCustomElement = app.config.isCustomElement;\n        Object.defineProperty(app.config, 'isCustomElement', {\n            get() {\n                return isCustomElement;\n            },\n            set() {\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\n            }\n        });\n        const compilerOptions = app.config.compilerOptions;\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\n        Object.defineProperty(app.config, 'compilerOptions', {\n            get() {\n                warn(msg);\n                return compilerOptions;\n            },\n            set() {\n                warn(msg);\n            }\n        });\n    }\n}\nfunction normalizeContainer(container) {\n    if (isString(container)) {\n        const res = document.querySelector(container);\n        if ((process.env.NODE_ENV !== 'production') && !res) {\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\n        }\n        return res;\n    }\n    if ((process.env.NODE_ENV !== 'production') &&\n        window.ShadowRoot &&\n        container instanceof window.ShadowRoot &&\n        container.mode === 'closed') {\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\n    }\n    return container;\n}\nlet ssrDirectiveInitialized = false;\n/**\n * @internal\n */\nconst initDirectivesForSSR = () => {\n        if (!ssrDirectiveInitialized) {\n            ssrDirectiveInitialized = true;\n            initVModelForSSR();\n            initVShowForSSR();\n        }\n    }\n    ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n// Utilities\nimport { camelize, capitalize, computed, Fragment, reactive, toRefs, watchEffect } from 'vue';\n\n// Types\n\nexport function getNestedValue(obj, path, fallback) {\n  const last = path.length - 1;\n  if (last < 0) return obj === undefined ? fallback : obj;\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback;\n    }\n    obj = obj[path[i]];\n  }\n  if (obj == null) return fallback;\n  return obj[path[last]] === undefined ? fallback : obj[path[last]];\n}\nexport function deepEqual(a, b) {\n  if (a === b) return true;\n  if (a instanceof Date && b instanceof Date && a.getTime() !== b.getTime()) {\n    // If the values are Date, compare them as timestamps\n    return false;\n  }\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false;\n  }\n  const props = Object.keys(a);\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false;\n  }\n  return props.every(p => deepEqual(a[p], b[p]));\n}\nexport function getObjectValueByPath(obj, path, fallback) {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback;\n  if (obj[path] !== undefined) return obj[path];\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  path = path.replace(/^\\./, ''); // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback);\n}\nexport function getPropertyFromItem(item, property, fallback) {\n  if (property == null) return item === undefined ? fallback : item;\n  if (item !== Object(item)) {\n    if (typeof property !== 'function') return fallback;\n    const value = property(item, fallback);\n    return typeof value === 'undefined' ? fallback : value;\n  }\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback);\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback);\n  if (typeof property !== 'function') return fallback;\n  const value = property(item, fallback);\n  return typeof value === 'undefined' ? fallback : value;\n}\nexport function createRange(length) {\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Array.from({\n    length\n  }, (v, k) => start + k);\n}\nexport function getZIndex(el) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0;\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index');\n  if (!index) return getZIndex(el.parentNode);\n  return index;\n}\nexport function convertToUnit(str) {\n  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'px';\n  if (str == null || str === '') {\n    return undefined;\n  } else if (isNaN(+str)) {\n    return String(str);\n  } else if (!isFinite(+str)) {\n    return undefined;\n  } else {\n    return `${Number(str)}${unit}`;\n  }\n}\nexport function isObject(obj) {\n  return obj !== null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport function isComponentInstance(obj) {\n  return obj?.$el;\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n  shift: 16\n});\nexport const keyValues = Object.freeze({\n  enter: 'Enter',\n  tab: 'Tab',\n  delete: 'Delete',\n  esc: 'Escape',\n  space: 'Space',\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n  end: 'End',\n  home: 'Home',\n  del: 'Delete',\n  backspace: 'Backspace',\n  insert: 'Insert',\n  pageup: 'PageUp',\n  pagedown: 'PageDown',\n  shift: 'Shift'\n});\nexport function keys(o) {\n  return Object.keys(o);\n}\nexport function pick(obj, paths) {\n  const found = Object.create(null);\n  const rest = Object.create(null);\n  for (const key in obj) {\n    if (paths.some(path => path instanceof RegExp ? path.test(key) : path === key)) {\n      found[key] = obj[key];\n    } else {\n      rest[key] = obj[key];\n    }\n  }\n  return [found, rest];\n}\nexport function omit(obj, exclude) {\n  const clone = {\n    ...obj\n  };\n  exclude.forEach(prop => delete clone[prop]);\n  return clone;\n}\n\n/**\n * Filter attributes that should be applied to\n * the root element of a an input component. Remaining\n * attributes should be passed to the <input> element inside.\n */\nexport function filterInputAttrs(attrs) {\n  return pick(attrs, ['class', 'style', 'id', /^data-/]);\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff(a, b) {\n  const diff = [];\n  for (let i = 0; i < b.length; i++) {\n    if (!a.includes(b[i])) diff.push(b[i]);\n  }\n  return diff;\n}\nexport function groupItems(items, groupBy, groupDesc) {\n  const key = groupBy[0];\n  const groups = [];\n  let current;\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const val = getObjectValueByPath(item, key, null);\n    if (current !== val) {\n      current = val;\n      groups.push({\n        name: val ?? '',\n        items: []\n      });\n    }\n    groups[groups.length - 1].items.push(item);\n  }\n  return groups;\n}\nexport function wrapInArray(v) {\n  return v == null ? [] : Array.isArray(v) ? v : [v];\n}\nexport function defaultFilter(value, search, item) {\n  return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;\n}\nexport function searchItems(items, search) {\n  if (!search) return items;\n  search = search.toString().toLowerCase();\n  if (search.trim() === '') return items;\n  return items.filter(item => Object.keys(item).some(key => defaultFilter(getObjectValueByPath(item, key), search, item)));\n}\nexport function debounce(fn, delay) {\n  let timeoutId = 0;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  };\n}\nexport function throttle(fn, limit) {\n  let throttling = false;\n  return function () {\n    if (!throttling) {\n      throttling = true;\n      setTimeout(() => throttling = false, limit);\n      return fn(...arguments);\n    }\n  };\n}\n/**\n * Filters slots to only those starting with `prefix`, removing the prefix\n */\nexport function getPrefixedSlots(prefix, slots) {\n  return Object.keys(slots).filter(k => k.startsWith(prefix)).reduce((obj, k) => {\n    obj[k.replace(prefix, '')] = slots[k];\n    return obj;\n  }, {});\n}\nexport function clamp(value) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.max(min, Math.min(max, value));\n}\nexport function padEnd(str, length) {\n  let char = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n  return str + char.repeat(Math.max(0, length - str.length));\n}\nexport function chunk(str) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const chunked = [];\n  let index = 0;\n  while (index < str.length) {\n    chunked.push(str.substr(index, size));\n    index += size;\n  }\n  return chunked;\n}\nexport function humanReadableFileSize(bytes) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  if (bytes < base) {\n    return `${bytes} B`;\n  }\n  const prefix = base === 1024 ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G'];\n  let unit = -1;\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base;\n    ++unit;\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`;\n}\nexport function camelizeObjectKeys(obj) {\n  if (!obj) return {};\n  return Object.keys(obj).reduce((o, key) => {\n    o[camelize(key)] = obj[key];\n    return o;\n  }, {});\n}\nexport function mergeDeep() {\n  let source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let arrayFn = arguments.length > 2 ? arguments[2] : undefined;\n  const out = {};\n  for (const key in source) {\n    out[key] = source[key];\n  }\n  for (const key in target) {\n    const sourceProperty = source[key];\n    const targetProperty = target[key];\n\n    // Only continue deep merging if\n    // both properties are objects\n    if (isObject(sourceProperty) && isObject(targetProperty)) {\n      out[key] = mergeDeep(sourceProperty, targetProperty, arrayFn);\n      continue;\n    }\n    if (Array.isArray(sourceProperty) && Array.isArray(targetProperty) && arrayFn) {\n      out[key] = arrayFn(sourceProperty, targetProperty);\n      continue;\n    }\n    out[key] = targetProperty;\n  }\n  return out;\n}\nexport function fillArray(length, obj) {\n  return Array(length).fill(obj);\n}\nexport function flattenFragments(nodes) {\n  return nodes.map(node => {\n    if (node.type === Fragment) {\n      return flattenFragments(node.children);\n    } else {\n      return node;\n    }\n  }).flat();\n}\nexport const randomHexColor = () => {\n  const n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\nexport function toKebabCase() {\n  let str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  if (toKebabCase.cache.has(str)) return toKebabCase.cache.get(str);\n  const kebab = str.replace(/[^a-z]/gi, '-').replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n  toKebabCase.cache.set(str, kebab);\n  return kebab;\n}\ntoKebabCase.cache = new Map();\nexport function findChildren(vnode) {\n  if (!vnode || typeof vnode !== 'object') {\n    return [];\n  }\n  if (Array.isArray(vnode)) {\n    return vnode.map(child => findChildren(child)).filter(v => v).flat(1);\n  } else if (Array.isArray(vnode.children)) {\n    return vnode.children.map(child => findChildren(child)).filter(v => v).flat(1);\n  } else if (vnode.component) {\n    return [vnode.component, ...findChildren(vnode.component?.subTree)].filter(v => v).flat(1);\n  }\n  return [];\n}\nexport function findChildrenWithProvide(key, vnode) {\n  if (!vnode || typeof vnode !== 'object') return [];\n  if (Array.isArray(vnode)) {\n    return vnode.map(child => findChildrenWithProvide(key, child)).flat(1);\n  } else if (Array.isArray(vnode.children)) {\n    return vnode.children.map(child => findChildrenWithProvide(key, child)).flat(1);\n  } else if (vnode.component) {\n    if (Object.getOwnPropertySymbols(vnode.component.provides).includes(key)) {\n      return [vnode.component];\n    } else if (vnode.component.subTree) {\n      return findChildrenWithProvide(key, vnode.component.subTree).flat(1);\n    }\n  }\n  return [];\n}\nvar _arr = /*#__PURE__*/new WeakMap();\nvar _pointer = /*#__PURE__*/new WeakMap();\nexport class CircularBuffer {\n  constructor(size) {\n    _classPrivateFieldInitSpec(this, _arr, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldInitSpec(this, _pointer, {\n      writable: true,\n      value: 0\n    });\n    this.size = size;\n  }\n  push(val) {\n    _classPrivateFieldGet(this, _arr)[_classPrivateFieldGet(this, _pointer)] = val;\n    _classPrivateFieldSet(this, _pointer, (_classPrivateFieldGet(this, _pointer) + 1) % this.size);\n  }\n  values() {\n    return _classPrivateFieldGet(this, _arr).slice(_classPrivateFieldGet(this, _pointer)).concat(_classPrivateFieldGet(this, _arr).slice(0, _classPrivateFieldGet(this, _pointer)));\n  }\n}\nexport function getEventCoordinates(e) {\n  if ('touches' in e) {\n    return {\n      clientX: e.touches[0].clientX,\n      clientY: e.touches[0].clientY\n    };\n  }\n  return {\n    clientX: e.clientX,\n    clientY: e.clientY\n  };\n}\n\n// Only allow a single return type\n\nexport function destructComputed(getter) {\n  const refs = reactive({});\n  const base = computed(getter);\n  watchEffect(() => {\n    for (const key in base.value) {\n      refs[key] = base.value[key];\n    }\n  }, {\n    flush: 'sync'\n  });\n  return toRefs(refs);\n}\n\n/** Array.includes but value can be any type */\nexport function includes(arr, val) {\n  return arr.includes(val);\n}\nconst onRE = /^on[^a-z]/;\nexport const isOn = key => onRE.test(key);\nexport const EventProp = [Function, Array];\nexport function hasEvent(props, name) {\n  name = 'on' + capitalize(name);\n  return !!(props[name] || props[`${name}Once`] || props[`${name}Capture`] || props[`${name}OnceCapture`] || props[`${name}CaptureOnce`]);\n}\nexport function callEvent(handler) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  if (Array.isArray(handler)) {\n    for (const h of handler) {\n      h(...args);\n    }\n  } else if (typeof handler === 'function') {\n    handler(...args);\n  }\n}\n//# sourceMappingURL=helpers.mjs.map","import { includes } from \"./helpers.mjs\";\nconst block = ['top', 'bottom'];\nconst inline = ['start', 'end', 'left', 'right'];\n/** Parse a raw anchor string into an object */\nexport function parseAnchor(anchor, isRtl) {\n  let [side, align] = anchor.split(' ');\n  if (!align) {\n    align = includes(block, side) ? 'start' : includes(inline, side) ? 'top' : 'center';\n  }\n  return {\n    side: toPhysical(side, isRtl),\n    align: toPhysical(align, isRtl)\n  };\n}\nexport function toPhysical(str, isRtl) {\n  if (str === 'start') return isRtl ? 'right' : 'left';\n  if (str === 'end') return isRtl ? 'left' : 'right';\n  return str;\n}\nexport function flipSide(anchor) {\n  return {\n    side: {\n      center: 'center',\n      top: 'bottom',\n      bottom: 'top',\n      left: 'right',\n      right: 'left'\n    }[anchor.side],\n    align: anchor.align\n  };\n}\nexport function flipAlign(anchor) {\n  return {\n    side: anchor.side,\n    align: {\n      center: 'center',\n      top: 'bottom',\n      bottom: 'top',\n      left: 'right',\n      right: 'left'\n    }[anchor.align]\n  };\n}\nexport function flipCorner(anchor) {\n  return {\n    side: anchor.align,\n    align: anchor.side\n  };\n}\nexport function getAxis(anchor) {\n  return includes(block, anchor.side) ? 'y' : 'x';\n}\n//# sourceMappingURL=anchor.mjs.map","export class Box {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      width,\n      height\n    } = _ref;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  get top() {\n    return this.y;\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n  get left() {\n    return this.x;\n  }\n  get right() {\n    return this.x + this.width;\n  }\n}\nexport function getOverflow(a, b) {\n  return {\n    x: {\n      before: Math.max(0, b.left - a.left),\n      after: Math.max(0, a.right - b.right)\n    },\n    y: {\n      before: Math.max(0, b.top - a.top),\n      after: Math.max(0, a.bottom - b.bottom)\n    }\n  };\n}\n//# sourceMappingURL=box.mjs.map","import { Box } from \"./box.mjs\";\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms(el) {\n  const rect = el.getBoundingClientRect();\n  const style = getComputedStyle(el);\n  const tx = style.transform;\n  if (tx) {\n    let ta, sx, sy, dx, dy;\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /);\n      sx = +ta[0];\n      sy = +ta[5];\n      dx = +ta[12];\n      dy = +ta[13];\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /);\n      sx = +ta[0];\n      sy = +ta[3];\n      dx = +ta[4];\n      dy = +ta[5];\n    } else {\n      return new Box(rect);\n    }\n    const to = style.transformOrigin;\n    const x = rect.x - dx - (1 - sx) * parseFloat(to);\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1));\n    const w = sx ? rect.width / sx : el.offsetWidth + 1;\n    const h = sy ? rect.height / sy : el.offsetHeight + 1;\n    return new Box({\n      x,\n      y,\n      width: w,\n      height: h\n    });\n  } else {\n    return new Box(rect);\n  }\n}\nexport function animate(el, keyframes, options) {\n  if (typeof el.animate === 'undefined') return {\n    finished: Promise.resolve()\n  };\n  const animation = el.animate(keyframes, options);\n  if (typeof animation.finished === 'undefined') {\n    animation.finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation);\n      };\n    });\n  }\n  return animation;\n}\n//# sourceMappingURL=animation.mjs.map","/* eslint-disable no-console */\n// import Vuetify from '../framework'\n\nfunction createMessage(message, vm, parent) {\n  // if (Vuetify.config.silent) return\n\n  if (parent) {\n    vm = {\n      __isVue: true,\n      $parent: parent,\n      $options: vm\n    };\n  }\n  if (vm) {\n    // Only show each message once per instance\n    vm.$_alreadyWarned = vm.$_alreadyWarned || [];\n    if (vm.$_alreadyWarned.includes(message)) return;\n    vm.$_alreadyWarned.push(message);\n  }\n  return `[Vuetify] ${message}` + (vm ? generateComponentTrace(vm) : '');\n}\nexport function consoleInfo(message, vm, parent) {\n  const newMessage = createMessage(message, vm, parent);\n  newMessage != null && console.info(newMessage);\n}\nexport function consoleWarn(message, vm, parent) {\n  const newMessage = createMessage(message, vm, parent);\n  newMessage != null && console.warn(newMessage);\n}\nexport function consoleError(message, vm, parent) {\n  const newMessage = createMessage(message, vm, parent);\n  newMessage != null && console.error(newMessage);\n}\nexport function deprecate(original, replacement, vm, parent) {\n  consoleWarn(`[UPGRADE] '${original}' is deprecated, use '${replacement}' instead.`, vm, parent);\n}\nexport function breaking(original, replacement, vm, parent) {\n  consoleError(`[BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`, vm, parent);\n}\nexport function removed(original, vm, parent) {\n  consoleWarn(`[REMOVED] '${original}' has been removed. You can safely omit it.`, vm, parent);\n}\n\n/**\n * Shamelessly stolen from vuejs/vue/blob/dev/src/core/util/debug.js\n */\n\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = str => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\nfunction formatComponentName(vm, includeFile) {\n  if (vm.$root === vm) {\n    return '<Root>';\n  }\n  const options = typeof vm === 'function' && vm.cid != null ? vm.options : vm.__isVue ? vm.$options || vm.constructor.options : vm || {};\n  let name = options.name || options._componentTag;\n  const file = options.__file;\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/);\n    name = match?.[1];\n  }\n  return (name ? `<${classify(name)}>` : `<Anonymous>`) + (file && includeFile !== false ? ` at ${file}` : '');\n}\nfunction generateComponentTrace(vm) {\n  if (vm.__isVue && vm.$parent) {\n    const tree = [];\n    let currentRecursiveSequence = 0;\n    while (vm) {\n      if (tree.length > 0) {\n        const last = tree[tree.length - 1];\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++;\n          vm = vm.$parent;\n          continue;\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence];\n          currentRecursiveSequence = 0;\n        }\n      }\n      tree.push(vm);\n      vm = vm.$parent;\n    }\n    return '\\n\\nfound in\\n\\n' + tree.map((vm, i) => `${i === 0 ? '---> ' : ' '.repeat(5 + i * 2)}${Array.isArray(vm)\n    // eslint-disable-next-line sonarjs/no-nested-template-literals\n    ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)` : formatComponentName(vm)}`).join('\\n');\n  } else {\n    return `\\n\\n(found in ${formatComponentName(vm)})`;\n  }\n}\n//# sourceMappingURL=console.mjs.map","import { clamp } from \"../../util/helpers.mjs\"; // For converting XYZ to sRGB\nconst srgbForwardMatrix = [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.2040, 1.0570]];\n\n// Forward gamma adjust\nconst srgbForwardTransform = C => C <= 0.0031308 ? C * 12.92 : 1.055 * C ** (1 / 2.4) - 0.055;\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]];\n\n// Reverse gamma adjust\nconst srgbReverseTransform = C => C <= 0.04045 ? C / 12.92 : ((C + 0.055) / 1.055) ** 2.4;\nexport function fromXYZ(xyz) {\n  const rgb = Array(3);\n  const transform = srgbForwardTransform;\n  const matrix = srgbForwardMatrix;\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    // Rescale back to [0, 255]\n    rgb[i] = Math.round(clamp(transform(matrix[i][0] * xyz[0] + matrix[i][1] * xyz[1] + matrix[i][2] * xyz[2])) * 255);\n  }\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2]\n  };\n}\nexport function toXYZ(_ref) {\n  let {\n    r,\n    g,\n    b\n  } = _ref;\n  const xyz = [0, 0, 0];\n  const transform = srgbReverseTransform;\n  const matrix = srgbReverseMatrix;\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  r = transform(r / 255);\n  g = transform(g / 255);\n  b = transform(b / 255);\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b;\n  }\n  return xyz;\n}\n//# sourceMappingURL=transformSRGB.mjs.map","const delta = 0.20689655172413793; // 6÷29\n\nconst cielabForwardTransform = t => t > delta ** 3 ? Math.cbrt(t) : t / (3 * delta ** 2) + 4 / 29;\nconst cielabReverseTransform = t => t > delta ? t ** 3 : 3 * delta ** 2 * (t - 4 / 29);\nexport function fromXYZ(xyz) {\n  const transform = cielabForwardTransform;\n  const transformedY = transform(xyz[1]);\n  return [116 * transformedY - 16, 500 * (transform(xyz[0] / 0.95047) - transformedY), 200 * (transformedY - transform(xyz[2] / 1.08883))];\n}\nexport function toXYZ(lab) {\n  const transform = cielabReverseTransform;\n  const Ln = (lab[0] + 16) / 116;\n  return [transform(Ln + lab[1] / 500) * 0.95047, transform(Ln), transform(Ln - lab[2] / 200) * 1.08883];\n}\n//# sourceMappingURL=transformCIELAB.mjs.map","// Utilities\nimport { consoleWarn } from \"./console.mjs\";\nimport { chunk, padEnd } from \"./helpers.mjs\";\nimport * as sRGB from \"./color/transformSRGB.mjs\";\nimport * as CIELAB from \"./color/transformCIELAB.mjs\"; // Types\nexport function isCssColor(color) {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color);\n}\nexport function parseColor(color) {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) {\n      // int can't have opacity\n      consoleWarn(`'${color}' is not a valid hex color`);\n    }\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: color & 0xFF\n    };\n  } else if (typeof color === 'string') {\n    let hex = color.startsWith('#') ? color.slice(1) : color;\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(char => char + char).join('');\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`);\n    }\n    const int = parseInt(hex, 16);\n    if (isNaN(int) || int < 0 || int > 0xFFFFFFFF) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`);\n    }\n    return HexToRGB(hex);\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`);\n  }\n}\nexport function RGBToInt(color) {\n  return (color.r << 16) + (color.g << 8) + color.b;\n}\nexport function classToHex(color, colors, currentTheme) {\n  const [colorName, colorModifier] = color.toString().trim().replace('-', '').split(' ', 2);\n  let hexColor = '';\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier];\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base;\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName];\n  }\n  return hexColor;\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB(hsva) {\n  const {\n    h,\n    s,\n    v,\n    a\n  } = hsva;\n  const f = n => {\n    const k = (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255));\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n    a\n  };\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV(rgba) {\n  if (!rgba) return {\n    h: 0,\n    s: 1,\n    v: 1,\n    a: 1\n  };\n  const r = rgba.r / 255;\n  const g = rgba.g / 255;\n  const b = rgba.b / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0;\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + (g - b) / (max - min));\n    } else if (max === g) {\n      h = 60 * (2 + (b - r) / (max - min));\n    } else if (max === b) {\n      h = 60 * (4 + (r - g) / (max - min));\n    }\n  }\n  if (h < 0) h = h + 360;\n  const s = max === 0 ? 0 : (max - min) / max;\n  const hsv = [h, s, max];\n  return {\n    h: hsv[0],\n    s: hsv[1],\n    v: hsv[2],\n    a: rgba.a\n  };\n}\nexport function HSVtoHSL(hsva) {\n  const {\n    h,\n    s,\n    v,\n    a\n  } = hsva;\n  const l = v - v * s / 2;\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l);\n  return {\n    h,\n    s: sprime,\n    l,\n    a\n  };\n}\nexport function HSLtoHSV(hsl) {\n  const {\n    h,\n    s,\n    l,\n    a\n  } = hsl;\n  const v = l + s * Math.min(l, 1 - l);\n  const sprime = v === 0 ? 0 : 2 - 2 * l / v;\n  return {\n    h,\n    s: sprime,\n    v,\n    a\n  };\n}\nexport function RGBtoCSS(_ref) {\n  let {\n    r,\n    g,\n    b,\n    a\n  } = _ref;\n  return a === undefined ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${a})`;\n}\nexport function HSVtoCSS(hsva) {\n  return RGBtoCSS(HSVtoRGB(hsva));\n}\nfunction toHex(v) {\n  const h = Math.round(v).toString(16);\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase();\n}\nexport function RGBtoHex(_ref2) {\n  let {\n    r,\n    g,\n    b,\n    a\n  } = _ref2;\n  return `#${[toHex(r), toHex(g), toHex(b), a !== undefined ? toHex(Math.round(a * 255)) : ''].join('')}`;\n}\nexport function HexToRGB(hex) {\n  hex = parseHex(hex);\n  let [r, g, b, a] = chunk(hex, 2).map(c => parseInt(c, 16));\n  a = a === undefined ? a : a / 255;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function HexToHSV(hex) {\n  const rgb = HexToRGB(hex);\n  return RGBtoHSV(rgb);\n}\nexport function HSVtoHex(hsva) {\n  return RGBtoHex(HSVtoRGB(hsva));\n}\nexport function parseHex(hex) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n  hex = hex.replace(/([^0-9a-f])/gi, 'F');\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('');\n  }\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F');\n  }\n  return hex;\n}\nexport function parseGradient(gradient, colors, currentTheme) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x;\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',');\n  });\n}\nexport function lighten(value, amount) {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma(color) {\n  const rgb = parseColor(color);\n  return sRGB.toXYZ(rgb)[1];\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast(first, second) {\n  const l1 = getLuma(first);\n  const l2 = getLuma(second);\n  const light = Math.max(l1, l2);\n  const dark = Math.min(l1, l2);\n  return (light + 0.05) / (dark + 0.05);\n}\n//# sourceMappingURL=colorUtils.mjs.map","// Utilities\n\nimport { getCurrentInstance as _getCurrentInstance } from 'vue';\nimport { toKebabCase } from \"./helpers.mjs\";\nexport function getCurrentInstance(name, message) {\n  const vm = _getCurrentInstance();\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`);\n  }\n  return vm;\n}\nexport function getCurrentInstanceName() {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'composables';\n  const vm = getCurrentInstance(name).type;\n  return toKebabCase(vm?.aliasName || vm?.name);\n}\nlet _uid = 0;\nlet _map = new WeakMap();\nexport function getUid() {\n  const vm = getCurrentInstance('getUid');\n  if (_map.has(vm)) return _map.get(vm);else {\n    const uid = _uid++;\n    _map.set(vm, uid);\n    return uid;\n  }\n}\ngetUid.reset = () => {\n  _uid = 0;\n  _map = new WeakMap();\n};\n//# sourceMappingURL=getCurrentInstance.mjs.map","import { getCurrentInstance } from \"./getCurrentInstance.mjs\";\nexport function injectSelf(key) {\n  const {\n    provides\n  } = getCurrentInstance('injectSelf');\n  if (provides && key in provides) {\n    // TS doesn't allow symbol as index type\n    return provides[key];\n  }\n}\n//# sourceMappingURL=injectSelf.mjs.map","/**\n * Creates a factory function for props definitions.\n * This is used to define props in a composable then override\n * default values in an implementing component.\n *\n * @example Simplified signature\n * (props: Props) => (defaults?: Record<keyof props, any>) => Props\n *\n * @example Usage\n * const makeProps = propsFactory({\n *   foo: String,\n * })\n *\n * defineComponent({\n *   props: {\n *     ...makeProps({\n *       foo: 'a',\n *     }),\n *   },\n *   setup (props) {\n *     // would be \"string | undefined\", now \"string\" because a default has been provided\n *     props.foo\n *   },\n * }\n */\n\nexport function propsFactory(props, source) {\n  return defaults => {\n    return Object.keys(props).reduce((obj, prop) => {\n      const isObjectDefinition = typeof props[prop] === 'object' && props[prop] != null && !Array.isArray(props[prop]);\n      const definition = isObjectDefinition ? props[prop] : {\n        type: props[prop]\n      };\n      if (defaults && prop in defaults) {\n        obj[prop] = {\n          ...definition,\n          default: defaults[prop]\n        };\n      } else {\n        obj[prop] = definition;\n      }\n      if (source && !obj[prop].source) {\n        obj[prop].source = source;\n      }\n      return obj;\n    }, {});\n  };\n}\n//# sourceMappingURL=propsFactory.mjs.map","import { effectScope, onScopeDispose, watch } from 'vue';\nexport function useToggleScope(source, fn) {\n  let scope;\n  function start() {\n    scope = effectScope();\n    scope.run(() => fn.length ? fn(() => {\n      scope?.stop();\n      start();\n    }) : fn());\n  }\n  watch(source, active => {\n    if (active && !scope) {\n      start();\n    } else if (!active) {\n      scope?.stop();\n      scope = undefined;\n    }\n  }, {\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n}\n//# sourceMappingURL=toggleScope.mjs.map","// Utils\nimport { defineComponent as _defineComponent,\n// eslint-disable-line no-restricted-imports\ncomputed, getCurrentInstance, shallowRef, watchEffect } from 'vue';\nimport { consoleWarn } from \"./console.mjs\";\nimport { mergeDeep, toKebabCase } from \"./helpers.mjs\";\nimport { injectSelf } from \"./injectSelf.mjs\";\nimport { propsFactory } from \"./propsFactory.mjs\";\nimport { DefaultsSymbol, provideDefaults, useDefaults } from \"../composables/defaults.mjs\";\nimport { useToggleScope } from \"../composables/toggleScope.mjs\"; // Types\nfunction propIsDefined(vnode, prop) {\n  return typeof vnode.props?.[prop] !== 'undefined' || typeof vnode.props?.[toKebabCase(prop)] !== 'undefined';\n}\nexport const defineComponent = function defineComponent(options) {\n  options._setup = options._setup ?? options.setup;\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value');\n    return options;\n  }\n  if (options._setup) {\n    options.props = options.props ?? {};\n    options.props = propsFactory(options.props, toKebabCase(options.name))();\n    options.props._as = String;\n    options.setup = function setup(props, ctx) {\n      const defaults = useDefaults();\n\n      // Skip props proxy if defaults are not provided\n      if (!defaults.value) return options._setup(props, ctx);\n      const vm = getCurrentInstance();\n      const componentDefaults = computed(() => defaults.value[props._as ?? options.name]);\n      const _props = new Proxy(props, {\n        get(target, prop) {\n          if (typeof prop === 'string' && !propIsDefined(vm.vnode, prop)) {\n            return componentDefaults.value?.[prop] ?? defaults.value.global?.[prop] ?? target[prop];\n          }\n          return Reflect.get(target, prop);\n        }\n      });\n      const _subcomponentDefaults = shallowRef();\n      watchEffect(() => {\n        if (componentDefaults.value) {\n          const subComponents = Object.entries(componentDefaults.value).filter(_ref => {\n            let [key] = _ref;\n            return key.startsWith(key[0].toUpperCase());\n          });\n          if (subComponents.length) _subcomponentDefaults.value = Object.fromEntries(subComponents);\n        }\n      });\n      const setupBindings = options._setup(_props, ctx);\n\n      // If subcomponent defaults are provided, override any\n      // subcomponents provided by the component's setup function.\n      // This uses injectSelf so must be done after the original setup to work.\n      useToggleScope(_subcomponentDefaults, () => {\n        provideDefaults(mergeDeep(injectSelf(DefaultsSymbol)?.value ?? {}, _subcomponentDefaults.value));\n      });\n      return setupBindings;\n    };\n  }\n  return options;\n};\n// Implementation\nexport function genericComponent() {\n  let exposeDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return options => (exposeDefaults ? defineComponent : _defineComponent)(options);\n}\nexport function defineFunctionalComponent(props, render) {\n  render.props = props;\n  return render;\n}\n//# sourceMappingURL=defineComponent.mjs.map","import { camelize, capitalize, h } from 'vue';\nimport { genericComponent } from \"./defineComponent.mjs\";\nexport function createSimpleFunctional(klass) {\n  let tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';\n  let name = arguments.length > 2 ? arguments[2] : undefined;\n  return genericComponent()({\n    name: name ?? capitalize(camelize(klass.replace(/__/g, '-'))),\n    props: {\n      tag: {\n        type: String,\n        default: tag\n      }\n    },\n    setup(props, _ref) {\n      let {\n        slots\n      } = _ref;\n      return () => h(props.tag, {\n        class: klass\n      }, slots.default?.());\n    }\n  });\n}\n//# sourceMappingURL=createSimpleFunctional.mjs.map","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot(node) {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode;\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null;\n    return document;\n  }\n  const root = node.getRootNode();\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({\n    composed: true\n  }) !== document) return null;\n  return root;\n}\n//# sourceMappingURL=dom.mjs.map","export function getScrollParent(el) {\n  while (el) {\n    if (hasScrollbar(el)) return el;\n    el = el.parentElement;\n  }\n  return document.scrollingElement;\n}\nexport function getScrollParents(el, stopAt) {\n  const elements = [];\n  if (stopAt && el && !stopAt.contains(el)) return elements;\n  while (el) {\n    if (hasScrollbar(el)) elements.push(el);\n    if (el === stopAt) break;\n    el = el.parentElement;\n  }\n  return elements;\n}\nexport function hasScrollbar(el) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false;\n  const style = window.getComputedStyle(el);\n  return style.overflowY === 'scroll' || style.overflowY === 'auto' && el.scrollHeight > el.clientHeight;\n}\n//# sourceMappingURL=getScrollParent.mjs.map","export const IN_BROWSER = typeof window !== 'undefined';\nexport const SUPPORTS_INTERSECTION = IN_BROWSER && 'IntersectionObserver' in window;\nexport const SUPPORTS_TOUCH = IN_BROWSER && ('ontouchstart' in window || window.navigator.maxTouchPoints > 0);\nexport const SUPPORTS_FOCUS_VISIBLE = IN_BROWSER && typeof CSS !== 'undefined' && CSS.supports('selector(:focus-visible)');\n//# sourceMappingURL=globals.mjs.map","export function isFixedPosition(el) {\n  while (el) {\n    if (window.getComputedStyle(el).position === 'fixed') {\n      return true;\n    }\n    el = el.offsetParent;\n  }\n  return false;\n}\n//# sourceMappingURL=isFixedPosition.mjs.map","// Utilities\nimport { getCurrentInstance } from \"./getCurrentInstance.mjs\"; // Types\nexport function useRender(render) {\n  const vm = getCurrentInstance('useRender');\n  vm.render = render;\n}\n//# sourceMappingURL=useRender.mjs.map","// Utilities\nimport { computed, inject, provide, ref, unref } from 'vue';\nimport { mergeDeep } from \"../util/index.mjs\"; // Types\nexport const DefaultsSymbol = Symbol.for('vuetify:defaults');\nexport function createDefaults(options) {\n  return ref(options);\n}\nexport function useDefaults() {\n  const defaults = inject(DefaultsSymbol);\n  if (!defaults) throw new Error('[Vuetify] Could not find defaults instance');\n  return defaults;\n}\nexport function provideDefaults(defaults, options) {\n  const injectedDefaults = useDefaults();\n  const providedDefaults = ref(defaults);\n  const newDefaults = computed(() => {\n    const scoped = unref(options?.scoped);\n    const reset = unref(options?.reset);\n    const root = unref(options?.root);\n    let properties = mergeDeep(providedDefaults.value, {\n      prev: injectedDefaults.value\n    });\n    if (scoped) return properties;\n    if (reset || root) {\n      const len = Number(reset || Infinity);\n      for (let i = 0; i <= len; i++) {\n        if (!properties || !('prev' in properties)) {\n          break;\n        }\n        properties = properties.prev;\n      }\n      return properties;\n    }\n    return mergeDeep(properties.prev, properties);\n  });\n  provide(DefaultsSymbol, newDefaults);\n  return newDefaults;\n}\n//# sourceMappingURL=defaults.mjs.map","// Utilities\nimport { inject, reactive, ref, toRefs, watchEffect } from 'vue';\nimport { mergeDeep } from \"../util/index.mjs\"; // Globals\nimport { IN_BROWSER, SUPPORTS_TOUCH } from \"../util/globals.mjs\"; // Types\nexport const DisplaySymbol = Symbol.for('vuetify:display');\nconst defaultDisplayOptions = {\n  mobileBreakpoint: 'lg',\n  thresholds: {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920,\n    xxl: 2560\n  }\n};\nconst parseDisplayOptions = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDisplayOptions;\n  return mergeDeep(defaultDisplayOptions, options);\n};\nfunction getClientWidth(isHydrate) {\n  return IN_BROWSER && !isHydrate ? window.innerWidth : 0;\n}\nfunction getClientHeight(isHydrate) {\n  return IN_BROWSER && !isHydrate ? window.innerHeight : 0;\n}\nfunction getPlatform() {\n  const userAgent = IN_BROWSER ? window.navigator.userAgent : 'ssr';\n  function match(regexp) {\n    return Boolean(userAgent.match(regexp));\n  }\n  const android = match(/android/i);\n  const ios = match(/iphone|ipad|ipod/i);\n  const cordova = match(/cordova/i);\n  const electron = match(/electron/i);\n  const chrome = match(/chrome/i);\n  const edge = match(/edge/i);\n  const firefox = match(/firefox/i);\n  const opera = match(/opera/i);\n  const win = match(/win/i);\n  const mac = match(/mac/i);\n  const linux = match(/linux/i);\n  const ssr = match(/ssr/i);\n  return {\n    android,\n    ios,\n    cordova,\n    electron,\n    chrome,\n    edge,\n    firefox,\n    opera,\n    win,\n    mac,\n    linux,\n    touch: SUPPORTS_TOUCH,\n    ssr\n  };\n}\nexport function createDisplay(options, ssr) {\n  const {\n    thresholds,\n    mobileBreakpoint\n  } = parseDisplayOptions(options);\n  const height = ref(getClientHeight(ssr));\n  const platform = getPlatform();\n  const state = reactive({});\n  const width = ref(getClientWidth(ssr));\n  function update() {\n    height.value = getClientHeight();\n    width.value = getClientWidth();\n  }\n\n  // eslint-disable-next-line max-statements\n  watchEffect(() => {\n    const xs = width.value < thresholds.sm;\n    const sm = width.value < thresholds.md && !xs;\n    const md = width.value < thresholds.lg && !(sm || xs);\n    const lg = width.value < thresholds.xl && !(md || sm || xs);\n    const xl = width.value < thresholds.xxl && !(lg || md || sm || xs);\n    const xxl = width.value >= thresholds.xxl;\n    const name = xs ? 'xs' : sm ? 'sm' : md ? 'md' : lg ? 'lg' : xl ? 'xl' : 'xxl';\n    const breakpointValue = typeof mobileBreakpoint === 'number' ? mobileBreakpoint : thresholds[mobileBreakpoint];\n    const mobile = !platform.ssr ? width.value < breakpointValue : platform.android || platform.ios || platform.opera;\n    state.xs = xs;\n    state.sm = sm;\n    state.md = md;\n    state.lg = lg;\n    state.xl = xl;\n    state.xxl = xxl;\n    state.smAndUp = !xs;\n    state.mdAndUp = !(xs || sm);\n    state.lgAndUp = !(xs || sm || md);\n    state.xlAndUp = !(xs || sm || md || lg);\n    state.smAndDown = !(md || lg || xl || xxl);\n    state.mdAndDown = !(lg || xl || xxl);\n    state.lgAndDown = !(xl || xxl);\n    state.xlAndDown = !xxl;\n    state.name = name;\n    state.height = height.value;\n    state.width = width.value;\n    state.mobile = mobile;\n    state.mobileBreakpoint = mobileBreakpoint;\n    state.platform = platform;\n    state.thresholds = thresholds;\n  });\n  if (IN_BROWSER) {\n    window.addEventListener('resize', update, {\n      passive: true\n    });\n  }\n  return {\n    ...toRefs(state),\n    update,\n    ssr: !!ssr\n  };\n}\nexport function useDisplay() {\n  const display = inject(DisplaySymbol);\n  if (!display) throw new Error('Could not find Vuetify display injection');\n  return display;\n}\n//# sourceMappingURL=display.mjs.map","// Utilities\nimport { h } from 'vue';\n\n// Components\nimport { VClassIcon } from \"../composables/icons.mjs\"; // Types\nconst aliases = {\n  collapse: 'mdi-chevron-up',\n  complete: 'mdi-check',\n  cancel: 'mdi-close-circle',\n  close: 'mdi-close',\n  delete: 'mdi-close-circle',\n  // delete (e.g. v-chip close)\n  clear: 'mdi-close-circle',\n  success: 'mdi-check-circle',\n  info: 'mdi-information',\n  warning: 'mdi-alert-circle',\n  error: 'mdi-close-circle',\n  prev: 'mdi-chevron-left',\n  next: 'mdi-chevron-right',\n  checkboxOn: 'mdi-checkbox-marked',\n  checkboxOff: 'mdi-checkbox-blank-outline',\n  checkboxIndeterminate: 'mdi-minus-box',\n  delimiter: 'mdi-circle',\n  // for carousel\n  sortAsc: 'mdi-arrow-up',\n  sortDesc: 'mdi-arrow-down',\n  expand: 'mdi-chevron-down',\n  menu: 'mdi-menu',\n  subgroup: 'mdi-menu-down',\n  dropdown: 'mdi-menu-down',\n  radioOn: 'mdi-radiobox-marked',\n  radioOff: 'mdi-radiobox-blank',\n  edit: 'mdi-pencil',\n  ratingEmpty: 'mdi-star-outline',\n  ratingFull: 'mdi-star',\n  ratingHalf: 'mdi-star-half-full',\n  loading: 'mdi-cached',\n  first: 'mdi-page-first',\n  last: 'mdi-page-last',\n  unfold: 'mdi-unfold-more-horizontal',\n  file: 'mdi-paperclip',\n  plus: 'mdi-plus',\n  minus: 'mdi-minus'\n};\nconst mdi = {\n  // Not using mergeProps here, functional components merge props by default (?)\n  component: props => h(VClassIcon, {\n    ...props,\n    class: 'mdi'\n  })\n};\nexport { aliases, mdi };\n//# sourceMappingURL=mdi.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Icons\nimport { aliases, mdi } from \"../iconsets/mdi.mjs\"; // Utilities\nimport { computed, inject, isRef } from 'vue';\nimport { defineComponent, genericComponent, mergeDeep, propsFactory } from \"../util/index.mjs\"; // Types\nexport const IconValue = [String, Function, Object];\nexport const IconSymbol = Symbol.for('vuetify:icons');\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: IconValue\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true\n  }\n}, 'icon');\nexport const VComponentIcon = genericComponent()({\n  name: 'VComponentIcon',\n  props: makeIconProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    return () => {\n      return _createVNode(props.tag, null, {\n        default: () => [props.icon ? _createVNode(props.icon, null, null) : slots.default?.()]\n      });\n    };\n  }\n});\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n  inheritAttrs: false,\n  props: makeIconProps(),\n  setup(props, _ref2) {\n    let {\n      attrs\n    } = _ref2;\n    return () => {\n      return _createVNode(props.tag, _mergeProps(attrs, {\n        \"style\": null\n      }), {\n        default: () => [_createVNode(\"svg\", {\n          \"class\": \"v-icon__svg\",\n          \"xmlns\": \"http://www.w3.org/2000/svg\",\n          \"viewBox\": \"0 0 24 24\",\n          \"role\": \"img\",\n          \"aria-hidden\": \"true\"\n        }, [_createVNode(\"path\", {\n          \"d\": props.icon\n        }, null)])]\n      });\n    };\n  }\n});\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n  props: makeIconProps(),\n  setup(props) {\n    return () => {\n      return _createVNode(props.tag, null, {\n        default: () => [props.icon]\n      });\n    };\n  }\n});\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n  props: makeIconProps(),\n  setup(props) {\n    return () => {\n      return _createVNode(props.tag, {\n        \"class\": props.icon\n      }, null);\n    };\n  }\n});\nexport const defaultSets = {\n  svg: {\n    component: VSvgIcon\n  },\n  class: {\n    component: VClassIcon\n  }\n};\n\n// Composables\nexport function createIcons(options) {\n  return mergeDeep({\n    defaultSet: 'mdi',\n    sets: {\n      ...defaultSets,\n      mdi\n    },\n    aliases\n  }, options);\n}\nexport const useIcon = props => {\n  const icons = inject(IconSymbol);\n  if (!icons) throw new Error('Missing Vuetify Icons provide!');\n  const iconData = computed(() => {\n    const iconAlias = isRef(props) ? props.value : props.icon;\n    if (!iconAlias) return {\n      component: VComponentIcon\n    };\n    let icon = iconAlias;\n    if (typeof icon === 'string') {\n      icon = icon.trim();\n      if (icon.startsWith('$')) {\n        icon = icons.aliases?.[icon.slice(1)];\n      }\n    }\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`);\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon\n      };\n    }\n    const iconSetName = Object.keys(icons.sets).find(setName => typeof icon === 'string' && icon.startsWith(`${setName}:`));\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon;\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet];\n    return {\n      component: iconSet.component,\n      icon: iconName\n    };\n  });\n  return {\n    iconData\n  };\n};\n//# sourceMappingURL=icons.mjs.map","// Utilities\nimport { computed, ref, toRaw, watch } from 'vue';\nimport { getCurrentInstance, toKebabCase } from \"../util/index.mjs\";\nimport { useToggleScope } from \"./toggleScope.mjs\"; // Types\n// Composables\nexport function useProxiedModel(props, prop, defaultValue) {\n  let transformIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : v => v;\n  let transformOut = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : v => v;\n  const vm = getCurrentInstance('useProxiedModel');\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue);\n  const kebabProp = toKebabCase(prop);\n  const checkKebab = kebabProp !== prop;\n  const isControlled = checkKebab ? computed(() => {\n    void props[prop];\n    return !!((vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) && (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`)));\n  }) : computed(() => {\n    void props[prop];\n    return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`));\n  });\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val;\n    });\n  });\n  const model = computed({\n    get() {\n      return transformIn(isControlled.value ? props[prop] : internal.value);\n    },\n    set(internalValue) {\n      const newValue = transformOut(internalValue);\n      const value = toRaw(isControlled.value ? props[prop] : internal.value);\n      if (value === newValue || transformIn(value) === internalValue) {\n        return;\n      }\n      internal.value = newValue;\n      vm?.emit(`update:${prop}`, newValue);\n    }\n  });\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value\n  });\n  return model;\n}\n//# sourceMappingURL=proxiedModel.mjs.map","export default {\n  badge: 'Badge',\n  close: 'Close',\n  dataIterator: {\n    noResultsText: 'No matching records found',\n    loadingText: 'Loading items...'\n  },\n  dataTable: {\n    itemsPerPageText: 'Rows per page:',\n    ariaLabel: {\n      sortDescending: 'Sorted descending.',\n      sortAscending: 'Sorted ascending.',\n      sortNone: 'Not sorted.',\n      activateNone: 'Activate to remove sorting.',\n      activateDescending: 'Activate to sort descending.',\n      activateAscending: 'Activate to sort ascending.'\n    },\n    sortBy: 'Sort by'\n  },\n  dataFooter: {\n    itemsPerPageText: 'Items per page:',\n    itemsPerPageAll: 'All',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n    firstPage: 'First page',\n    lastPage: 'Last page',\n    pageText: '{0}-{1} of {2}'\n  },\n  datePicker: {\n    itemsSelected: '{0} selected',\n    nextMonthAriaLabel: 'Next month',\n    nextYearAriaLabel: 'Next year',\n    prevMonthAriaLabel: 'Previous month',\n    prevYearAriaLabel: 'Previous year'\n  },\n  noDataText: 'No data available',\n  carousel: {\n    prev: 'Previous visual',\n    next: 'Next visual',\n    ariaLabel: {\n      delimiter: 'Carousel slide {0} of {1}'\n    }\n  },\n  calendar: {\n    moreEvents: '{0} more'\n  },\n  input: {\n    clear: 'Clear {0}',\n    prependAction: '{0} prepended action',\n    appendAction: '{0} appended action'\n  },\n  fileInput: {\n    counter: '{0} files',\n    counterSize: '{0} files ({1} in total)'\n  },\n  timePicker: {\n    am: 'AM',\n    pm: 'PM'\n  },\n  pagination: {\n    ariaLabel: {\n      root: 'Pagination Navigation',\n      next: 'Next page',\n      previous: 'Previous page',\n      page: 'Go to page {0}',\n      currentPage: 'Page {0}, Current page',\n      first: 'First page',\n      last: 'Last page'\n    }\n  },\n  rating: {\n    ariaLabel: {\n      item: 'Rating {0} of {1}'\n    }\n  }\n};\n//# sourceMappingURL=en.mjs.map","import { ref, watch } from 'vue';\nimport { consoleError, consoleWarn, getObjectValueByPath } from \"../../util/index.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport en from \"../en.mjs\";\nconst LANG_PREFIX = '$vuetify.';\nconst replace = (str, params) => {\n  return str.replace(/\\{(\\d+)\\}/g, (match, index) => {\n    return String(params[+index]);\n  });\n};\nconst createTranslateFunction = (current, fallback, messages) => {\n  return function (key) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    if (!key.startsWith(LANG_PREFIX)) {\n      return replace(key, params);\n    }\n    const shortKey = key.replace(LANG_PREFIX, '');\n    const currentLocale = current.value && messages.value[current.value];\n    const fallbackLocale = fallback.value && messages.value[fallback.value];\n    let str = getObjectValueByPath(currentLocale, shortKey, null);\n    if (!str) {\n      consoleWarn(`Translation key \"${key}\" not found in \"${current.value}\", trying fallback locale`);\n      str = getObjectValueByPath(fallbackLocale, shortKey, null);\n    }\n    if (!str) {\n      consoleError(`Translation key \"${key}\" not found in fallback`);\n      str = key;\n    }\n    if (typeof str !== 'string') {\n      consoleError(`Translation key \"${key}\" has a non-string value`);\n      str = key;\n    }\n    return replace(str, params);\n  };\n};\nfunction createNumberFunction(current, fallback) {\n  return (value, options) => {\n    const numberFormat = new Intl.NumberFormat([current.value, fallback.value], options);\n    return numberFormat.format(value);\n  };\n}\nfunction useProvided(props, prop, provided) {\n  const internal = useProxiedModel(props, prop, props[prop] ?? provided.value);\n\n  // TODO: Remove when defaultValue works\n  internal.value = props[prop] ?? provided.value;\n  watch(provided, v => {\n    if (props[prop] == null) {\n      internal.value = provided.value;\n    }\n  });\n  return internal;\n}\nfunction createProvideFunction(state) {\n  return props => {\n    const current = useProvided(props, 'locale', state.current);\n    const fallback = useProvided(props, 'fallback', state.fallback);\n    const messages = useProvided(props, 'messages', state.messages);\n    return {\n      name: 'vuetify',\n      current,\n      fallback,\n      messages,\n      t: createTranslateFunction(current, fallback, messages),\n      n: createNumberFunction(current, fallback),\n      provide: createProvideFunction({\n        current,\n        fallback,\n        messages\n      })\n    };\n  };\n}\nexport function createVuetifyAdapter(options) {\n  const current = ref(options?.locale ?? 'en');\n  const fallback = ref(options?.fallback ?? 'en');\n  const messages = ref({\n    en,\n    ...options?.messages\n  });\n  return {\n    name: 'vuetify',\n    current,\n    fallback,\n    messages,\n    t: createTranslateFunction(current, fallback, messages),\n    n: createNumberFunction(current, fallback),\n    provide: createProvideFunction({\n      current,\n      fallback,\n      messages\n    })\n  };\n}\n//# sourceMappingURL=vuetify.mjs.map","export { default as af } from \"./af.mjs\";\nexport { default as ar } from \"./ar.mjs\";\nexport { default as bg } from \"./bg.mjs\";\nexport { default as ca } from \"./ca.mjs\";\nexport { default as ckb } from \"./ckb.mjs\";\nexport { default as cs } from \"./cs.mjs\";\nexport { default as da } from \"./da.mjs\";\nexport { default as de } from \"./de.mjs\";\nexport { default as el } from \"./el.mjs\";\nexport { default as en } from \"./en.mjs\";\nexport { default as es } from \"./es.mjs\";\nexport { default as et } from \"./et.mjs\";\nexport { default as fa } from \"./fa.mjs\";\nexport { default as fi } from \"./fi.mjs\";\nexport { default as fr } from \"./fr.mjs\";\nexport { default as hr } from \"./hr.mjs\";\nexport { default as hu } from \"./hu.mjs\";\nexport { default as he } from \"./he.mjs\";\nexport { default as id } from \"./id.mjs\";\nexport { default as it } from \"./it.mjs\";\nexport { default as ja } from \"./ja.mjs\";\nexport { default as ko } from \"./ko.mjs\";\nexport { default as lv } from \"./lv.mjs\";\nexport { default as lt } from \"./lt.mjs\";\nexport { default as nl } from \"./nl.mjs\";\nexport { default as no } from \"./no.mjs\";\nexport { default as pl } from \"./pl.mjs\";\nexport { default as pt } from \"./pt.mjs\";\nexport { default as ro } from \"./ro.mjs\";\nexport { default as ru } from \"./ru.mjs\";\nexport { default as sk } from \"./sk.mjs\";\nexport { default as sl } from \"./sl.mjs\";\nexport { default as srCyrl } from \"./sr-Cyrl.mjs\";\nexport { default as srLatn } from \"./sr-Latn.mjs\";\nexport { default as sv } from \"./sv.mjs\";\nexport { default as th } from \"./th.mjs\";\nexport { default as tr } from \"./tr.mjs\";\nexport { default as az } from \"./az.mjs\";\nexport { default as uk } from \"./uk.mjs\";\nexport { default as vi } from \"./vi.mjs\";\nexport { default as zhHans } from \"./zh-Hans.mjs\";\nexport { default as zhHant } from \"./zh-Hant.mjs\";\nexport const defaultRtl = {\n  af: false,\n  ar: true,\n  bg: false,\n  ca: false,\n  ckb: false,\n  cs: false,\n  de: false,\n  el: false,\n  en: false,\n  es: false,\n  et: false,\n  fa: false,\n  fi: false,\n  fr: false,\n  hr: false,\n  hu: false,\n  he: true,\n  id: false,\n  it: false,\n  ja: false,\n  ko: false,\n  lv: false,\n  lt: false,\n  nl: false,\n  no: false,\n  pl: false,\n  pt: false,\n  ro: false,\n  ru: false,\n  sk: false,\n  sl: false,\n  srCyrl: false,\n  srLatn: false,\n  sv: false,\n  th: false,\n  tr: false,\n  az: false,\n  uk: false,\n  vi: false,\n  zhHans: false,\n  zhHant: false\n};\n//# sourceMappingURL=index.mjs.map","import { computed, inject, provide, ref } from 'vue';\nimport { createVuetifyAdapter } from \"../locale/adapters/vuetify.mjs\";\nimport { defaultRtl } from \"../locale/index.mjs\";\nexport const LocaleSymbol = Symbol.for('vuetify:locale');\nfunction isLocaleInstance(obj) {\n  return obj.name != null;\n}\nexport function createLocale(options) {\n  const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : createVuetifyAdapter(options);\n  const rtl = createRtl(i18n, options);\n  return {\n    ...i18n,\n    ...rtl\n  };\n}\nexport function useLocale() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  return locale;\n}\nexport function provideLocale(props) {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  const i18n = locale.provide(props);\n  const rtl = provideRtl(i18n, locale.rtl, props);\n  const data = {\n    ...i18n,\n    ...rtl\n  };\n  provide(LocaleSymbol, data);\n  return data;\n}\n\n// RTL\n\nexport const RtlSymbol = Symbol.for('vuetify:rtl');\nexport function createRtl(i18n, options) {\n  const rtl = ref(options?.rtl ?? defaultRtl);\n  const isRtl = computed(() => rtl.value[i18n.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function provideRtl(locale, rtl, props) {\n  const isRtl = computed(() => props.rtl ?? rtl.value[locale.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function useRtl() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected rtl instance');\n  return {\n    isRtl: locale.isRtl,\n    rtlClasses: locale.rtlClasses\n  };\n}\n//# sourceMappingURL=locale.mjs.map","/**\n * WCAG 3.0 APCA perceptual contrast algorithm from https://github.com/Myndex/SAPC-APCA\n * @licence https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @see https://www.w3.org/WAI/GL/task-forces/silver/wiki/Visual_Contrast_of_Text_Subgroup\n */\n\n// MAGICAL NUMBERS\n\n// sRGB Conversion to Relative Luminance (Y)\n\n// Transfer Curve (aka \"Gamma\") for sRGB linearization\n// Simple power curve vs piecewise described in docs\n// Essentially, 2.4 best models actual display\n// characteristics in combination with the total method\nconst mainTRC = 2.4;\nconst Rco = 0.2126729; // sRGB Red Coefficient (from matrix)\nconst Gco = 0.7151522; // sRGB Green Coefficient (from matrix)\nconst Bco = 0.0721750; // sRGB Blue Coefficient (from matrix)\n\n// For Finding Raw SAPC Contrast from Relative Luminance (Y)\n\n// Constants for SAPC Power Curve Exponents\n// One pair for normal text, and one for reverse\n// These are the \"beating heart\" of SAPC\nconst normBG = 0.55;\nconst normTXT = 0.58;\nconst revTXT = 0.57;\nconst revBG = 0.62;\n\n// For Clamping and Scaling Values\n\nconst blkThrs = 0.03; // Level that triggers the soft black clamp\nconst blkClmp = 1.45; // Exponent for the soft black clamp curve\nconst deltaYmin = 0.0005; // Lint trap\nconst scaleBoW = 1.25; // Scaling for dark text on light\nconst scaleWoB = 1.25; // Scaling for light text on dark\nconst loConThresh = 0.078; // Threshold for new simple offset scale\nconst loConFactor = 12.82051282051282; // = 1/0.078,\nconst loConOffset = 0.06; // The simple offset\nconst loClip = 0.001; // Output clip (lint trap #2)\n\nexport function APCAcontrast(text, background) {\n  // Linearize sRGB\n  const Rtxt = (text.r / 255) ** mainTRC;\n  const Gtxt = (text.g / 255) ** mainTRC;\n  const Btxt = (text.b / 255) ** mainTRC;\n  const Rbg = (background.r / 255) ** mainTRC;\n  const Gbg = (background.g / 255) ** mainTRC;\n  const Bbg = (background.b / 255) ** mainTRC;\n\n  // Apply the standard coefficients and sum to Y\n  let Ytxt = Rtxt * Rco + Gtxt * Gco + Btxt * Bco;\n  let Ybg = Rbg * Rco + Gbg * Gco + Bbg * Bco;\n\n  // Soft clamp Y when near black.\n  // Now clamping all colors to prevent crossover errors\n  if (Ytxt <= blkThrs) Ytxt += (blkThrs - Ytxt) ** blkClmp;\n  if (Ybg <= blkThrs) Ybg += (blkThrs - Ybg) ** blkClmp;\n\n  // Return 0 Early for extremely low ∆Y (lint trap #1)\n  if (Math.abs(Ybg - Ytxt) < deltaYmin) return 0.0;\n\n  // SAPC CONTRAST\n\n  let outputContrast; // For weighted final values\n  if (Ybg > Ytxt) {\n    // For normal polarity, black text on white\n    // Calculate the SAPC contrast value and scale\n\n    const SAPC = (Ybg ** normBG - Ytxt ** normTXT) * scaleBoW;\n\n    // NEW! SAPC SmoothScale™\n    // Low Contrast Smooth Scale Rollout to prevent polarity reversal\n    // and also a low clip for very low contrasts (lint trap #2)\n    // much of this is for very low contrasts, less than 10\n    // therefore for most reversing needs, only loConOffset is important\n    outputContrast = SAPC < loClip ? 0.0 : SAPC < loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC - loConOffset;\n  } else {\n    // For reverse polarity, light text on dark\n    // WoB should always return negative value.\n\n    const SAPC = (Ybg ** revBG - Ytxt ** revTXT) * scaleWoB;\n    outputContrast = SAPC > -loClip ? 0.0 : SAPC > -loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC + loConOffset;\n  }\n  return outputContrast * 100;\n}\n//# sourceMappingURL=APCA.mjs.map","// Utilities\nimport { computed, inject, provide, reactive, ref, watch, watchEffect } from 'vue';\nimport { createRange, darken, getCurrentInstance, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.mjs\";\nimport { APCAcontrast } from \"../util/color/APCA.mjs\"; // Types\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\nconst defaultThemeOptions = {\n  defaultTheme: 'light',\n  variations: {\n    colors: [],\n    lighten: 0,\n    darken: 0\n  },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        'surface-variant': '#424242',\n        'on-surface-variant': '#EEEEEE',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.12,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#F5F5F5',\n        'theme-on-code': '#000000'\n      }\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        'surface-variant': '#BDBDBD',\n        'on-surface-variant': '#424242',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.16,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#343434',\n        'theme-on-code': '#CCCCCC'\n      }\n    }\n  }\n};\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultThemeOptions;\n  if (!options) return {\n    ...defaultThemeOptions,\n    isDisabled: true\n  };\n  const themes = {};\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark' ? defaultThemeOptions.themes?.dark : defaultThemeOptions.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n  return mergeDeep(defaultThemeOptions, {\n    ...options,\n    themes\n  });\n}\n\n// Composables\nexport function createTheme(options) {\n  const parsedOptions = reactive(parseThemeOptions(options));\n  const name = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme = acc[name] = {\n        ...original,\n        colors: {\n          ...original.colors\n        }\n      };\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name];\n          if (!color) continue;\n          for (const variation of ['lighten', 'darken']) {\n            const fn = variation === 'lighten' ? lighten : darken;\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n            }\n          }\n        }\n      }\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = parseColor(theme.colors[color]);\n        const blackContrast = Math.abs(APCAcontrast(parseColor(0), colorVal));\n        const whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), colorVal));\n\n        // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n\n        // Prefer white text if both have an acceptable contrast ratio\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000';\n      }\n    }\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n    if (current.value.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark']);\n    }\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      const {\n        variables,\n        dark\n      } = theme;\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${dark ? 'dark' : 'normal'}`, ...genCssVariables(theme), ...Object.keys(variables).map(key => {\n        const value = variables[key];\n        const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\n        const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n        return `--v-${key}: ${rgb ?? value}`;\n      })]);\n    }\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\n      }\n    }\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n  function getHead() {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false\n      }]\n    };\n  }\n  function install(app) {\n    const head = app._context.provides.usehead;\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead);\n        watch(styles, () => {\n          entry.patch(getHead);\n        });\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER ? document.getElementById('vuetify-theme-stylesheet') : null;\n      watch(styles, updateStyles, {\n        immediate: true\n      });\n      function updateStyles() {\n        if (parsedOptions.isDisabled) return;\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style');\n          el.type = 'text/css';\n          el.id = 'vuetify-theme-stylesheet';\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce);\n          styleEl = el;\n          document.head.appendChild(styleEl);\n        }\n        if (styleEl) styleEl.innerHTML = styles.value;\n      }\n    }\n  }\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const name = computed(() => {\n    return props.theme ?? theme?.name.value;\n  });\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\n  const newTheme = {\n    ...theme,\n    name,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}\nfunction createCssClass(lines, selector, content) {\n  lines.push(`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n');\n}\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n  return variables;\n}\n//# sourceMappingURL=theme.mjs.map","// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue';\n// Globals\nimport { IN_BROWSER } from \"../util/globals.mjs\";\nexport function useResizeObserver(callback) {\n  const resizeRef = ref();\n  const contentRect = ref();\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver(entries => {\n      callback?.(entries, observer);\n      if (!entries.length) return;\n      contentRect.value = entries[0].contentRect;\n    });\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n    watch(resizeRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue);\n        contentRect.value = undefined;\n      }\n      if (newValue) observer.observe(newValue);\n    }, {\n      flush: 'post'\n    });\n  }\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect)\n  };\n}\n//# sourceMappingURL=resizeObserver.mjs.map","// Composables\nimport { useResizeObserver } from \"./resizeObserver.mjs\"; // Utilities\nimport { computed, inject, onActivated, onBeforeUnmount, onDeactivated, onMounted, provide, reactive, ref } from 'vue';\nimport { convertToUnit, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory } from \"../util/index.mjs\"; // Types\nexport const VuetifyLayoutKey = Symbol.for('vuetify:layout');\nexport const VuetifyLayoutItemKey = Symbol.for('vuetify:layout-item');\nconst ROOT_ZINDEX = 1000;\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => []\n  },\n  fullHeight: Boolean\n}, 'layout');\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String\n  },\n  order: {\n    type: [Number, String],\n    default: 0\n  },\n  absolute: Boolean\n}, 'layout-item');\nexport function useLayout() {\n  const layout = inject(VuetifyLayoutKey);\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout');\n  return {\n    getLayoutItem: layout.getLayoutItem,\n    mainRect: layout.mainRect,\n    mainStyles: layout.mainStyles\n  };\n}\nexport function useLayoutItem(options) {\n  const layout = inject(VuetifyLayoutKey);\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout');\n  const id = options.id ?? `layout-item-${getUid()}`;\n  const vm = getCurrentInstance('useLayoutItem');\n  provide(VuetifyLayoutItemKey, {\n    id\n  });\n  const isKeptAlive = ref(false);\n  onDeactivated(() => isKeptAlive.value = true);\n  onActivated(() => isKeptAlive.value = false);\n  const {\n    layoutItemStyles,\n    layoutItemScrimStyles\n  } = layout.register(vm, {\n    ...options,\n    active: computed(() => isKeptAlive.value ? false : options.active.value),\n    id\n  });\n  onBeforeUnmount(() => layout.unregister(id));\n  return {\n    layoutItemStyles,\n    layoutRect: layout.layoutRect,\n    layoutItemScrimStyles\n  };\n}\nconst generateLayers = (layout, positions, layoutSizes, activeItems) => {\n  let previousLayer = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  };\n  const layers = [{\n    id: '',\n    layer: {\n      ...previousLayer\n    }\n  }];\n  for (const id of layout) {\n    const position = positions.get(id);\n    const amount = layoutSizes.get(id);\n    const active = activeItems.get(id);\n    if (!position || !amount || !active) continue;\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0)\n    };\n    layers.push({\n      id,\n      layer\n    });\n    previousLayer = layer;\n  }\n  return layers;\n};\nexport function createLayout(props) {\n  const parentLayout = inject(VuetifyLayoutKey, null);\n  const rootZIndex = computed(() => parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX);\n  const registered = ref([]);\n  const positions = reactive(new Map());\n  const layoutSizes = reactive(new Map());\n  const priorities = reactive(new Map());\n  const activeItems = reactive(new Map());\n  const disabledTransitions = reactive(new Map());\n  const {\n    resizeRef,\n    contentRect: layoutRect\n  } = useResizeObserver();\n  const computedOverlaps = computed(() => {\n    const map = new Map();\n    const overlaps = props.overlaps ?? [];\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':');\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue;\n      const topPosition = positions.get(top);\n      const bottomPosition = positions.get(bottom);\n      const topAmount = layoutSizes.get(top);\n      const bottomAmount = layoutSizes.get(bottom);\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue;\n      map.set(bottom, {\n        position: topPosition.value,\n        amount: parseInt(topAmount.value, 10)\n      });\n      map.set(top, {\n        position: bottomPosition.value,\n        amount: -parseInt(bottomAmount.value, 10)\n      });\n    }\n    return map;\n  });\n  const layers = computed(() => {\n    const uniquePriorities = [...new Set([...priorities.values()].map(p => p.value))].sort((a, b) => a - b);\n    const layout = [];\n    for (const p of uniquePriorities) {\n      const items = registered.value.filter(id => priorities.get(id)?.value === p);\n      layout.push(...items);\n    }\n    return generateLayers(layout, positions, layoutSizes, activeItems);\n  });\n  const transitionsEnabled = computed(() => {\n    return !Array.from(disabledTransitions.values()).some(ref => ref.value);\n  });\n  const mainRect = computed(() => {\n    return layers.value[layers.value.length - 1].layer;\n  });\n  const mainStyles = computed(() => {\n    return {\n      '--v-layout-left': convertToUnit(mainRect.value.left),\n      '--v-layout-right': convertToUnit(mainRect.value.right),\n      '--v-layout-top': convertToUnit(mainRect.value.top),\n      '--v-layout-bottom': convertToUnit(mainRect.value.bottom),\n      ...(transitionsEnabled.value ? undefined : {\n        transition: 'none'\n      })\n    };\n  });\n  const items = computed(() => {\n    return layers.value.slice(1).map((_ref, index) => {\n      let {\n        id\n      } = _ref;\n      const {\n        layer\n      } = layers.value[index];\n      const size = layoutSizes.get(id);\n      const position = positions.get(id);\n      return {\n        id,\n        ...layer,\n        size: Number(size.value),\n        position: position.value\n      };\n    });\n  });\n  const getLayoutItem = id => {\n    return items.value.find(item => item.id === id);\n  };\n  const rootVm = getCurrentInstance('createLayout');\n  const isMounted = ref(false);\n  onMounted(() => {\n    isMounted.value = true;\n  });\n  provide(VuetifyLayoutKey, {\n    register: (vm, _ref2) => {\n      let {\n        id,\n        order,\n        position,\n        layoutSize,\n        elementSize,\n        active,\n        disableTransitions,\n        absolute\n      } = _ref2;\n      priorities.set(id, order);\n      positions.set(id, position);\n      layoutSizes.set(id, layoutSize);\n      activeItems.set(id, active);\n      disableTransitions && disabledTransitions.set(id, disableTransitions);\n      const instances = findChildrenWithProvide(VuetifyLayoutItemKey, rootVm?.vnode);\n      const instanceIndex = instances.indexOf(vm);\n      if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id);else registered.value.push(id);\n      const index = computed(() => items.value.findIndex(i => i.id === id));\n      const zIndex = computed(() => rootZIndex.value + layers.value.length * 2 - index.value * 2);\n      const layoutItemStyles = computed(() => {\n        const isHorizontal = position.value === 'left' || position.value === 'right';\n        const isOppositeHorizontal = position.value === 'right';\n        const isOppositeVertical = position.value === 'bottom';\n        const styles = {\n          [position.value]: 0,\n          zIndex: zIndex.value,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -110) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}%)`,\n          position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? 'absolute' : 'fixed',\n          ...(transitionsEnabled.value ? undefined : {\n            transition: 'none'\n          })\n        };\n        if (!isMounted.value) return styles;\n        const item = items.value[index.value];\n        if (!item) throw new Error(`[Vuetify] Could not find layout item \"${id}\"`);\n        const overlap = computedOverlaps.value.get(id);\n        if (overlap) {\n          item[overlap.position] += overlap.amount;\n        }\n        return {\n          ...styles,\n          height: isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)` : elementSize.value ? `${elementSize.value}px` : undefined,\n          left: isOppositeHorizontal ? undefined : `${item.left}px`,\n          right: isOppositeHorizontal ? `${item.right}px` : undefined,\n          top: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          bottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width: !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)` : elementSize.value ? `${elementSize.value}px` : undefined\n        };\n      });\n      const layoutItemScrimStyles = computed(() => ({\n        zIndex: zIndex.value - 1\n      }));\n      return {\n        layoutItemStyles,\n        layoutItemScrimStyles,\n        zIndex\n      };\n    },\n    unregister: id => {\n      priorities.delete(id);\n      positions.delete(id);\n      layoutSizes.delete(id);\n      activeItems.delete(id);\n      disabledTransitions.delete(id);\n      registered.value = registered.value.filter(v => v !== id);\n    },\n    mainRect,\n    mainStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    rootZIndex\n  });\n  const layoutClasses = computed(() => ['v-layout', {\n    'v-layout--full-height': props.fullHeight\n  }]);\n  const layoutStyles = computed(() => ({\n    zIndex: rootZIndex.value,\n    position: parentLayout ? 'relative' : undefined,\n    overflow: parentLayout ? 'hidden' : undefined\n  }));\n  return {\n    layoutClasses,\n    layoutStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    layoutRef: resizeRef\n  };\n}\n//# sourceMappingURL=layout.mjs.map","// Composables\nimport { createDefaults, DefaultsSymbol } from \"./composables/defaults.mjs\";\nimport { createDisplay, DisplaySymbol } from \"./composables/display.mjs\";\nimport { createIcons, IconSymbol } from \"./composables/icons.mjs\";\nimport { createLocale, LocaleSymbol } from \"./composables/locale.mjs\";\nimport { createTheme, ThemeSymbol } from \"./composables/theme.mjs\"; // Utilities\nimport { defineComponent, getUid, IN_BROWSER, mergeDeep } from \"./util/index.mjs\";\nimport { nextTick, reactive } from 'vue';\n\n// Types\nexport * from \"./composables/index.mjs\";\nexport function createVuetify() {\n  let vuetify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    blueprint,\n    ...rest\n  } = vuetify;\n  const options = mergeDeep(blueprint, rest);\n  const {\n    aliases = {},\n    components = {},\n    directives = {}\n  } = options;\n  const defaults = createDefaults(options.defaults);\n  const display = createDisplay(options.display, options.ssr);\n  const theme = createTheme(options.theme);\n  const icons = createIcons(options.icons);\n  const locale = createLocale(options.locale);\n  const install = app => {\n    for (const key in directives) {\n      app.directive(key, directives[key]);\n    }\n    for (const key in components) {\n      app.component(key, components[key]);\n    }\n    for (const key in aliases) {\n      app.component(key, defineComponent({\n        ...aliases[key],\n        name: key,\n        aliasName: aliases[key].name\n      }));\n    }\n    theme.install(app);\n    app.provide(DefaultsSymbol, defaults);\n    app.provide(DisplaySymbol, display);\n    app.provide(ThemeSymbol, theme);\n    app.provide(IconSymbol, icons);\n    app.provide(LocaleSymbol, locale);\n    if (IN_BROWSER && options.ssr) {\n      if (app.$nuxt) {\n        app.$nuxt.hook('app:suspense:resolve', () => {\n          display.update();\n        });\n      } else {\n        const {\n          mount\n        } = app;\n        app.mount = function () {\n          const vm = mount(...arguments);\n          nextTick(() => display.update());\n          app.mount = mount;\n          return vm;\n        };\n      }\n    }\n    getUid.reset();\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean' || __VUE_OPTIONS_API__) {\n      app.mixin({\n        computed: {\n          $vuetify() {\n            return reactive({\n              defaults: inject.call(this, DefaultsSymbol),\n              display: inject.call(this, DisplaySymbol),\n              theme: inject.call(this, ThemeSymbol),\n              icons: inject.call(this, IconSymbol),\n              locale: inject.call(this, LocaleSymbol)\n            });\n          }\n        }\n      });\n    }\n  };\n  return {\n    install,\n    defaults,\n    display,\n    theme,\n    icons,\n    locale\n  };\n}\nexport const version = \"3.1.7\";\ncreateVuetify.version = version;\n\n// Vue's inject() can only be used in setup\nfunction inject(key) {\n  const vm = this.$;\n  const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides;\n  if (provides && key in provides) {\n    return provides[key];\n  }\n}\n//# sourceMappingURL=framework.mjs.map","/* eslint-disable max-len */\n// Components\nimport { VSvgIcon } from \"../composables/icons.mjs\"; // Types\nconst aliases = {\n  collapse: 'M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z',\n  complete: 'M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z',\n  cancel: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\n  close: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\n  delete: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\n  // delete (e.g. v-chip close)\n  clear: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\n  success: 'M12,2C17.52,2 22,6.48 22,12C22,17.52 17.52,22 12,22C6.48,22 2,17.52 2,12C2,6.48 6.48,2 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z',\n  info: 'M13,9H11V7H13M13,17H11V11H13M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  warning: 'M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z',\n  error: 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z',\n  prev: 'M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z',\n  next: 'M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z',\n  checkboxOn: 'M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  checkboxOff: 'M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z',\n  checkboxIndeterminate: 'M17,13H7V11H17M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  delimiter: 'M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  // for carousel\n  sortAsc: 'M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z',\n  sortDesc: 'M11,4H13V16L18.5,10.5L19.92,11.92L12,19.84L4.08,11.92L5.5,10.5L11,16V4Z',\n  expand: 'M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z',\n  menu: 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z',\n  subgroup: 'M7,10L12,15L17,10H7Z',\n  dropdown: 'M7,10L12,15L17,10H7Z',\n  radioOn: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2M12,7C9.24,7 7,9.24 7,12C7,14.76 9.24,17 12,17C14.76,17 17,14.76 17,12C17,9.24 14.76,7 12,7Z',\n  radioOff: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  edit: 'M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z',\n  ratingEmpty: 'M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  ratingFull: 'M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z',\n  ratingHalf: 'M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  loading: 'M19,8L15,12H18C18,15.31 15.31,18 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20C16.42,20 20,16.42 20,12H23M6,12C6,8.69 8.69,6 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4C7.58,4 4,7.58 4,12H1L5,16L9,12',\n  first: 'M18.41,16.59L13.82,12L18.41,7.41L17,6L11,12L17,18L18.41,16.59M6,6H8V18H6V6Z',\n  last: 'M5.59,7.41L10.18,12L5.59,16.59L7,18L13,12L7,6L5.59,7.41M16,6H18V18H16V6Z',\n  unfold: 'M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z',\n  file: 'M16.5,6V17.5C16.5,19.71 14.71,21.5 12.5,21.5C10.29,21.5 8.5,19.71 8.5,17.5V5C8.5,3.62 9.62,2.5 11,2.5C12.38,2.5 13.5,3.62 13.5,5V15.5C13.5,16.05 13.05,16.5 12.5,16.5C11.95,16.5 11.5,16.05 11.5,15.5V6H10V15.5C10,16.88 11.12,18 12.5,18C13.88,18 15,16.88 15,15.5V5C15,2.79 13.21,1 11,1C8.79,1 7,2.79 7,5V17.5C7,20.54 9.46,23 12.5,23C15.54,23 18,20.54 18,17.5V6H16.5Z',\n  plus: 'M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z',\n  minus: 'M19,13H5V11H19V13Z'\n};\nconst mdi = {\n  component: VSvgIcon\n};\nexport { aliases, mdi };\n//# sourceMappingURL=mdi-svg.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VApp.css\";\n\n// Composables\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VApp = genericComponent()({\n  name: 'VApp',\n  props: {\n    ...makeLayoutProps({\n      fullHeight: true\n    }),\n    ...makeThemeProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const theme = provideTheme(props);\n    const {\n      layoutClasses,\n      layoutStyles,\n      getLayoutItem,\n      items,\n      layoutRef\n    } = createLayout(props);\n    const {\n      rtlClasses\n    } = useRtl();\n    useRender(() => _createVNode(\"div\", {\n      \"ref\": layoutRef,\n      \"class\": ['v-application', theme.themeClasses.value, layoutClasses.value, rtlClasses.value],\n      \"style\": layoutStyles.value\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-application__wrap\"\n    }, [slots.default?.()])]));\n    return {\n      getLayoutItem,\n      items,\n      theme\n    };\n  }\n});\n//# sourceMappingURL=VApp.mjs.map","// Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { toRefs } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport const VDefaultsProvider = genericComponent(false)({\n  name: 'VDefaultsProvider',\n  props: {\n    defaults: Object,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      defaults,\n      reset,\n      root,\n      scoped\n    } = toRefs(props);\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped\n    });\n    return () => slots.default?.();\n  }\n});\n//# sourceMappingURL=VDefaultsProvider.mjs.map","// Utilities\nimport { h, Transition, TransitionGroup } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport function createCssTransition(name) {\n  let origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';\n  let mode = arguments.length > 2 ? arguments[2] : undefined;\n  return genericComponent()({\n    name,\n    props: {\n      group: Boolean,\n      hideOnLeave: Boolean,\n      leaveAbsolute: Boolean,\n      mode: {\n        type: String,\n        default: mode\n      },\n      origin: {\n        type: String,\n        default: origin\n      }\n    },\n    setup(props, _ref) {\n      let {\n        slots\n      } = _ref;\n      return () => {\n        const tag = props.group ? TransitionGroup : Transition;\n        return h(tag, {\n          name,\n          mode: props.mode,\n          onBeforeEnter(el) {\n            el.style.transformOrigin = props.origin;\n          },\n          onLeave(el) {\n            if (props.leaveAbsolute) {\n              const {\n                offsetTop,\n                offsetLeft,\n                offsetWidth,\n                offsetHeight\n              } = el;\n              el._transitionInitialStyles = {\n                position: el.style.position,\n                top: el.style.top,\n                left: el.style.left,\n                width: el.style.width,\n                height: el.style.height\n              };\n              el.style.position = 'absolute';\n              el.style.top = `${offsetTop}px`;\n              el.style.left = `${offsetLeft}px`;\n              el.style.width = `${offsetWidth}px`;\n              el.style.height = `${offsetHeight}px`;\n            }\n            if (props.hideOnLeave) {\n              el.style.setProperty('display', 'none', 'important');\n            }\n          },\n          onAfterLeave(el) {\n            if (props.leaveAbsolute && el?._transitionInitialStyles) {\n              const {\n                position,\n                top,\n                left,\n                width,\n                height\n              } = el._transitionInitialStyles;\n              delete el._transitionInitialStyles;\n              el.style.position = position || '';\n              el.style.top = top || '';\n              el.style.left = left || '';\n              el.style.width = width || '';\n              el.style.height = height || '';\n            }\n          }\n        }, slots.default);\n      };\n    }\n  });\n}\nexport function createJavascriptTransition(name, functions) {\n  let mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'in-out';\n  return genericComponent()({\n    name,\n    props: {\n      mode: {\n        type: String,\n        default: mode\n      }\n    },\n    setup(props, _ref2) {\n      let {\n        slots\n      } = _ref2;\n      return () => {\n        return h(Transition, {\n          name,\n          // mode: props.mode, // TODO: vuejs/vue-next#3104\n          ...functions\n        }, slots.default);\n      };\n    }\n  });\n}\n//# sourceMappingURL=createTransition.mjs.map","// Utilities\nimport { camelize } from 'vue';\nexport default function () {\n  let expandedParentClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const sizeProperty = x ? 'width' : 'height';\n  const offsetProperty = camelize(`offset-${sizeProperty}`);\n  return {\n    onBeforeEnter(el) {\n      el._parent = el.parentNode;\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty]\n      };\n    },\n    onEnter(el) {\n      const initialStyle = el._initialStyle;\n      el.style.setProperty('transition', 'none', 'important');\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden';\n      const offset = `${el[offsetProperty]}px`;\n      el.style[sizeProperty] = '0';\n      void el.offsetHeight; // force reflow\n\n      el.style.transition = initialStyle.transition;\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass);\n      }\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset;\n      });\n    },\n    onAfterEnter: resetStyles,\n    onEnterCancelled: resetStyles,\n    onLeave(el) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty]\n      };\n      el.style.overflow = 'hidden';\n      el.style[sizeProperty] = `${el[offsetProperty]}px`;\n      void el.offsetHeight; // force reflow\n\n      requestAnimationFrame(() => el.style[sizeProperty] = '0');\n    },\n    onAfterLeave,\n    onLeaveCancelled: onAfterLeave\n  };\n  function onAfterLeave(el) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass);\n    }\n    resetStyles(el);\n  }\n  function resetStyles(el) {\n    const size = el._initialStyle[sizeProperty];\n    el.style.overflow = el._initialStyle.overflow;\n    if (size != null) el.style[sizeProperty] = size;\n    delete el._initialStyle;\n  }\n}\n//# sourceMappingURL=expand-transition.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { Transition } from 'vue';\n\n// Utilities\nimport { acceleratedEasing, animate, deceleratedEasing, genericComponent, nullifyTransforms, standardEasing } from \"../../util/index.mjs\"; // Types\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n  props: {\n    target: Object\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const functions = {\n      onBeforeEnter(el) {\n        el.style.pointerEvents = 'none';\n        el.style.visibility = 'hidden';\n      },\n      async onEnter(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        el.style.visibility = '';\n        const {\n          x,\n          y,\n          sx,\n          sy,\n          speed\n        } = getDimensions(props.target, el);\n        const animation = animate(el, [{\n          transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,\n          opacity: 0\n        }, {}], {\n          duration: 225 * speed,\n          easing: deceleratedEasing\n        });\n        getChildren(el)?.forEach(el => {\n          animate(el, [{\n            opacity: 0\n          }, {\n            opacity: 0,\n            offset: 0.33\n          }, {}], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing\n          });\n        });\n        animation.finished.then(() => done());\n      },\n      onAfterEnter(el) {\n        el.style.removeProperty('pointer-events');\n      },\n      onBeforeLeave(el) {\n        el.style.pointerEvents = 'none';\n      },\n      async onLeave(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        const {\n          x,\n          y,\n          sx,\n          sy,\n          speed\n        } = getDimensions(props.target, el);\n        const animation = animate(el, [{}, {\n          transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,\n          opacity: 0\n        }], {\n          duration: 125 * speed,\n          easing: acceleratedEasing\n        });\n        animation.finished.then(() => done());\n        getChildren(el)?.forEach(el => {\n          animate(el, [{}, {\n            opacity: 0,\n            offset: 0.2\n          }, {\n            opacity: 0\n          }], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing\n          });\n        });\n      },\n      onAfterLeave(el) {\n        el.style.removeProperty('pointer-events');\n      }\n    };\n    return () => {\n      return props.target ? _createVNode(Transition, _mergeProps({\n        \"name\": \"dialog-transition\"\n      }, functions, {\n        \"css\": false\n      }), slots) : _createVNode(Transition, {\n        \"name\": \"dialog-transition\"\n      }, slots);\n    };\n  }\n});\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren(el) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children;\n  return els && [...els];\n}\nfunction getDimensions(target, el) {\n  const targetBox = target.getBoundingClientRect();\n  const elBox = nullifyTransforms(el);\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v));\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ');\n  let offsetX = targetBox.left + targetBox.width / 2;\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2;\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2;\n  }\n  let offsetY = targetBox.top + targetBox.height / 2;\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2;\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2;\n  }\n  const tsx = targetBox.width / elBox.width;\n  const tsy = targetBox.height / elBox.height;\n  const maxs = Math.max(1, tsx, tsy);\n  const sx = tsx / maxs || 0;\n  const sy = tsy / maxs || 0;\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = elBox.width * elBox.height / (window.innerWidth * window.innerHeight);\n  const speed = asa > 0.12 ? Math.min(1.5, (asa - 0.12) * 10 + 1) : 1;\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed\n  };\n}\n//# sourceMappingURL=dialog-transition.mjs.map","import { createCssTransition, createJavascriptTransition } from \"./createTransition.mjs\";\nimport ExpandTransitionGenerator from \"./expand-transition.mjs\"; // Component specific transitions\nexport const VFabTransition = createCssTransition('fab-transition', 'center center', 'out-in');\n\n// Generic transitions\nexport const VDialogBottomTransition = createCssTransition('dialog-bottom-transition');\nexport const VDialogTopTransition = createCssTransition('dialog-top-transition');\nexport const VFadeTransition = createCssTransition('fade-transition');\nexport const VScaleTransition = createCssTransition('scale-transition');\nexport const VScrollXTransition = createCssTransition('scroll-x-transition');\nexport const VScrollXReverseTransition = createCssTransition('scroll-x-reverse-transition');\nexport const VScrollYTransition = createCssTransition('scroll-y-transition');\nexport const VScrollYReverseTransition = createCssTransition('scroll-y-reverse-transition');\nexport const VSlideXTransition = createCssTransition('slide-x-transition');\nexport const VSlideXReverseTransition = createCssTransition('slide-x-reverse-transition');\nexport const VSlideYTransition = createCssTransition('slide-y-transition');\nexport const VSlideYReverseTransition = createCssTransition('slide-y-reverse-transition');\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator());\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true));\nexport { VDialogTransition } from \"./dialog-transition.mjs\";\n//# sourceMappingURL=index.mjs.map","// Utilities\nimport { computed } from 'vue';\nimport { convertToUnit, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String]\n}, 'dimension');\nexport function useDimension(props) {\n  const dimensionStyles = computed(() => ({\n    height: convertToUnit(props.height),\n    maxHeight: convertToUnit(props.maxHeight),\n    maxWidth: convertToUnit(props.maxWidth),\n    minHeight: convertToUnit(props.minHeight),\n    minWidth: convertToUnit(props.minWidth),\n    width: convertToUnit(props.width)\n  }));\n  return {\n    dimensionStyles\n  };\n}\n//# sourceMappingURL=dimensions.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VResponsive.css\";\n\n// Composables\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport function useAspectStyles(props) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio);\n      return ratio ? {\n        paddingBottom: String(1 / ratio * 100) + '%'\n      } : undefined;\n    })\n  };\n}\nexport const VResponsive = genericComponent()({\n  name: 'VResponsive',\n  props: {\n    aspectRatio: [String, Number],\n    contentClass: String,\n    ...makeDimensionProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      aspectStyles\n    } = useAspectStyles(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    useRender(() => _createVNode(\"div\", {\n      \"class\": \"v-responsive\",\n      \"style\": dimensionStyles.value\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-responsive__sizer\",\n      \"style\": aspectStyles.value\n    }, null), slots.additional?.(), slots.default && _createVNode(\"div\", {\n      \"class\": ['v-responsive__content', props.contentClass]\n    }, [slots.default()])]));\n    return {};\n  }\n});\n//# sourceMappingURL=VResponsive.mjs.map","// Utils\nimport { SUPPORTS_INTERSECTION } from \"../../util/index.mjs\"; // Types\nfunction mounted(el, binding) {\n  if (!SUPPORTS_INTERSECTION) return;\n  const modifiers = binding.modifiers || {};\n  const value = binding.value;\n  const {\n    handler,\n    options\n  } = typeof value === 'object' ? value : {\n    handler: value,\n    options: {}\n  };\n  const observer = new IntersectionObserver(function () {\n    let entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let observer = arguments.length > 1 ? arguments[1] : undefined;\n    const _observe = el._observe?.[binding.instance.$.uid];\n    if (!_observe) return; // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting);\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (handler && (!modifiers.quiet || _observe.init) && (!modifiers.once || isIntersecting || _observe.init)) {\n      handler(isIntersecting, entries, observer);\n    }\n    if (isIntersecting && modifiers.once) unmounted(el, binding);else _observe.init = true;\n  }, options);\n  el._observe = Object(el._observe);\n  el._observe[binding.instance.$.uid] = {\n    init: false,\n    observer\n  };\n  observer.observe(el);\n}\nfunction unmounted(el, binding) {\n  const observe = el._observe?.[binding.instance.$.uid];\n  if (!observe) return;\n  observe.observer.unobserve(el);\n  delete el._observe[binding.instance.$.uid];\n}\nexport const Intersect = {\n  mounted,\n  unmounted\n};\nexport default Intersect;\n//# sourceMappingURL=index.mjs.map","// Utilities\nimport { h, mergeProps, Transition } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\nexport const makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object],\n    default: 'fade-transition',\n    validator: val => val !== true\n  }\n}, 'transition');\nexport const MaybeTransition = (props, _ref) => {\n  let {\n    slots\n  } = _ref;\n  const {\n    transition,\n    ...rest\n  } = props;\n  const {\n    component = Transition,\n    ...customProps\n  } = typeof transition === 'object' ? transition : {};\n  return h(component, mergeProps(typeof transition === 'string' ? {\n    name: transition\n  } : customProps, rest), slots);\n};\n//# sourceMappingURL=transition.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport \"./VImg.css\";\n\n// Components\nimport { VResponsive } from \"../VResponsive/index.mjs\"; // Directives\nimport intersect from \"../../directives/intersect/index.mjs\"; // Composables\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeMount, ref, vShow, watch, withDirectives } from 'vue';\nimport { convertToUnit, genericComponent, SUPPORTS_INTERSECTION, useRender } from \"../../util/index.mjs\"; // Types\nexport const VImg = genericComponent()({\n  name: 'VImg',\n  directives: {\n    intersect\n  },\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    srcset: String,\n    width: [String, Number],\n    ...makeTransitionProps()\n  },\n  emits: {\n    loadstart: event => true,\n    load: event => true,\n    error: event => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const currentSrc = ref(''); // Set from srcset\n    const image = ref();\n    const state = ref(props.eager ? 'loading' : 'idle');\n    const naturalWidth = ref();\n    const naturalHeight = ref();\n    const normalisedSrc = computed(() => {\n      return props.src && typeof props.src === 'object' ? {\n        src: props.src.src,\n        srcset: props.srcset || props.src.srcset,\n        lazySrc: props.lazySrc || props.src.lazySrc,\n        aspect: Number(props.aspectRatio || props.src.aspect || 0)\n      } : {\n        src: props.src,\n        srcset: props.srcset,\n        lazySrc: props.lazySrc,\n        aspect: Number(props.aspectRatio || 0)\n      };\n    });\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;\n    });\n    watch(() => props.src, () => {\n      init(state.value !== 'idle');\n    });\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value);\n      }\n    });\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init());\n    function init(isIntersecting) {\n      if (props.eager && isIntersecting) return;\n      if (SUPPORTS_INTERSECTION && !isIntersecting && !props.eager) return;\n      state.value = 'loading';\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image();\n        lazyImg.src = normalisedSrc.value.lazySrc;\n        pollForSize(lazyImg, null);\n      }\n      if (!normalisedSrc.value.src) return;\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src);\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError();\n          }\n          if (state.value === 'error') return;\n          if (!aspectRatio.value) pollForSize(image.value, null);\n          onLoad();\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value);\n          getSrc();\n        }\n      });\n    }\n    function onLoad() {\n      getSrc();\n      state.value = 'loaded';\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n    function onError() {\n      state.value = 'error';\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n    function getSrc() {\n      const img = image.value;\n      if (img) currentSrc.value = img.currentSrc || img.src;\n    }\n    let timer = -1;\n    function pollForSize(img) {\n      let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      const poll = () => {\n        clearTimeout(timer);\n        const {\n          naturalHeight: imgHeight,\n          naturalWidth: imgWidth\n        } = img;\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth;\n          naturalHeight.value = imgHeight;\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout);\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1;\n          naturalHeight.value = 1;\n        }\n      };\n      poll();\n    }\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover\n    }));\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null;\n      const img = _createVNode(\"img\", {\n        \"class\": ['v-img__img', containClasses.value],\n        \"src\": normalisedSrc.value.src,\n        \"srcset\": normalisedSrc.value.srcset,\n        \"alt\": \"\",\n        \"sizes\": props.sizes,\n        \"ref\": image,\n        \"onLoad\": onLoad,\n        \"onError\": onError\n      }, null);\n      const sources = slots.sources?.();\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [withDirectives(sources ? _createVNode(\"picture\", {\n          \"class\": \"v-img__picture\"\n        }, [sources, img]) : img, [[vShow, state.value === 'loaded']])]\n      });\n    };\n    const __preloadImage = () => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [normalisedSrc.value.lazySrc && state.value !== 'loaded' && _createVNode(\"img\", {\n        \"class\": ['v-img__img', 'v-img__img--preload', containClasses.value],\n        \"src\": normalisedSrc.value.lazySrc,\n        \"alt\": \"\"\n      }, null)]\n    });\n    const __placeholder = () => {\n      if (!slots.placeholder) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [(state.value === 'loading' || state.value === 'error' && !slots.error) && _createVNode(\"div\", {\n          \"class\": \"v-img__placeholder\"\n        }, [slots.placeholder()])]\n      });\n    };\n    const __error = () => {\n      if (!slots.error) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [state.value === 'error' && _createVNode(\"div\", {\n          \"class\": \"v-img__error\"\n        }, [slots.error()])]\n      });\n    };\n    const __gradient = () => {\n      if (!props.gradient) return null;\n      return _createVNode(\"div\", {\n        \"class\": \"v-img__gradient\",\n        \"style\": {\n          backgroundImage: `linear-gradient(${props.gradient})`\n        }\n      }, null);\n    };\n    const isBooted = ref(false);\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true;\n            });\n          });\n          stop();\n        }\n      });\n    }\n    useRender(() => _withDirectives(_createVNode(VResponsive, {\n      \"class\": ['v-img', {\n        'v-img--booting': !isBooted.value\n      }],\n      \"style\": {\n        width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width)\n      },\n      \"aspectRatio\": aspectRatio.value,\n      \"aria-label\": props.alt,\n      \"role\": props.alt ? 'img' : undefined\n    }, {\n      additional: () => _createVNode(_Fragment, null, [_createVNode(__image, null, null), _createVNode(__preloadImage, null, null), _createVNode(__gradient, null, null), _createVNode(__placeholder, null, null), _createVNode(__error, null, null)]),\n      default: slots.default\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: init,\n      options: props.options\n    }, null, {\n      once: true\n    }]]));\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight\n    };\n  }\n});\n//# sourceMappingURL=VImg.mjs.map","// Utilities\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeTagProps = propsFactory({\n  tag: {\n    type: String,\n    default: 'div'\n  }\n}, 'tag');\n//# sourceMappingURL=tag.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n  ...makeTagProps()\n}, 'v-toolbar-title');\nexport const VToolbarTitle = genericComponent()({\n  name: 'VToolbarTitle',\n  props: makeVToolbarTitleProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text);\n      return _createVNode(props.tag, {\n        \"class\": \"v-toolbar-title\"\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-toolbar-title__placeholder\"\n        }, [slots.text ? slots.text() : props.text, slots.default?.()])]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VToolbarTitle.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String]\n}, 'border');\nexport function useBorder(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const borderClasses = computed(() => {\n    const border = isRef(props) ? props.value : props.border;\n    const classes = [];\n    if (border === true || border === '') {\n      classes.push(`${name}--border`);\n    } else if (typeof border === 'string' || border === 0) {\n      for (const value of String(border).split(' ')) {\n        classes.push(`border-${value}`);\n      }\n    }\n    return classes;\n  });\n  return {\n    borderClasses\n  };\n}\n//# sourceMappingURL=border.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator(v) {\n      const value = parseInt(v);\n      return !isNaN(value) && value >= 0 &&\n      // Material Design has a maximum elevation of 24\n      // https://material.io/design/environment/elevation.html#default-elevations\n      value <= 24;\n    }\n  }\n}, 'elevation');\nexport function useElevation(props) {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation;\n    const classes = [];\n    if (elevation == null) return classes;\n    classes.push(`elevation-${elevation}`);\n    return classes;\n  });\n  return {\n    elevationClasses\n  };\n}\n//# sourceMappingURL=elevation.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined\n  }\n}, 'rounded');\nexport function useRounded(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded;\n    const classes = [];\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`);\n    } else if (typeof rounded === 'string' || rounded === 0) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`);\n      }\n    }\n    return classes;\n  });\n  return {\n    roundedClasses\n  };\n}\n//# sourceMappingURL=rounded.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { destructComputed, isCssColor } from \"../util/index.mjs\"; // Types\n// Composables\nexport function useColor(colors) {\n  return destructComputed(() => {\n    const classes = [];\n    const styles = {};\n    if (colors.value.background) {\n      if (isCssColor(colors.value.background)) {\n        styles.backgroundColor = colors.value.background;\n      } else {\n        classes.push(`bg-${colors.value.background}`);\n      }\n    }\n    if (colors.value.text) {\n      if (isCssColor(colors.value.text)) {\n        styles.color = colors.value.text;\n        styles.caretColor = colors.value.text;\n      } else {\n        classes.push(`text-${colors.value.text}`);\n      }\n    }\n    return {\n      colorClasses: classes,\n      colorStyles: styles\n    };\n  });\n}\nexport function useTextColor(props, name) {\n  const colors = computed(() => ({\n    text: isRef(props) ? props.value : name ? props[name] : null\n  }));\n  const {\n    colorClasses: textColorClasses,\n    colorStyles: textColorStyles\n  } = useColor(colors);\n  return {\n    textColorClasses,\n    textColorStyles\n  };\n}\nexport function useBackgroundColor(props, name) {\n  const colors = computed(() => ({\n    background: isRef(props) ? props.value : name ? props[name] : null\n  }));\n  const {\n    colorClasses: backgroundColorClasses,\n    colorStyles: backgroundColorStyles\n  } = useColor(colors);\n  return {\n    backgroundColorClasses,\n    backgroundColorStyles\n  };\n}\n//# sourceMappingURL=color.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VToolbar.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\";\nimport { VToolbarTitle } from \"./VToolbarTitle.mjs\"; // Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, ref, toRef } from 'vue';\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'];\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64\n  },\n  image: String,\n  title: String,\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'header'\n  }),\n  ...makeThemeProps()\n}, 'v-toolbar');\nexport const VToolbar = genericComponent()({\n  name: 'VToolbar',\n  props: makeVToolbarProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isExtended = ref(!!(props.extended || slots.extension?.()));\n    const contentHeight = computed(() => parseInt(Number(props.height) + (props.density === 'prominent' ? Number(props.height) : 0) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0), 10));\n    const extensionHeight = computed(() => isExtended.value ? parseInt(Number(props.extensionHeight) + (props.density === 'prominent' ? Number(props.extensionHeight) : 0) - (props.density === 'comfortable' ? 4 : 0) - (props.density === 'compact' ? 8 : 0), 10) : 0);\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title);\n      const hasImage = !!(slots.image || props.image);\n      const extension = slots.extension?.();\n      isExtended.value = !!(props.extended || extension);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar', {\n          'v-toolbar--absolute': props.absolute,\n          'v-toolbar--collapse': props.collapse,\n          'v-toolbar--flat': props.flat,\n          'v-toolbar--floating': props.floating,\n          [`v-toolbar--density-${props.density}`]: true\n        }, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value, themeClasses.value],\n        \"style\": [backgroundColorStyles.value]\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-toolbar__image\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [slots.image ? slots.image?.() : _createVNode(VImg, null, null)]\n        })]), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(contentHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-toolbar__content\",\n            \"style\": {\n              height: convertToUnit(contentHeight.value)\n            }\n          }, [slots.prepend && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__prepend\"\n          }, [slots.prepend?.()]), hasTitle && _createVNode(VToolbarTitle, {\n            \"key\": \"title\",\n            \"text\": props.title\n          }, {\n            text: slots.title\n          }), slots.default?.(), slots.append && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__append\"\n          }, [slots.append?.()])])]\n        }), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(extensionHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(VExpandTransition, null, {\n            default: () => [isExtended.value && _createVNode(\"div\", {\n              \"class\": \"v-toolbar__extension\",\n              \"style\": {\n                height: convertToUnit(extensionHeight.value)\n              }\n            }, [extension])]\n          })]\n        })]\n      });\n    });\n    return {\n      contentHeight,\n      extensionHeight\n    };\n  }\n});\nexport function filterToolbarProps(props) {\n  return pick(props, Object.keys(VToolbar?.props ?? {}));\n}\n//# sourceMappingURL=VToolbar.mjs.map","// Utilities\nimport { computed, onMounted, readonly, ref } from 'vue';\n\n// Composables\nexport function useSsrBoot() {\n  const isBooted = ref(false);\n  onMounted(() => {\n    window.requestAnimationFrame(() => {\n      isBooted.value = true;\n    });\n  });\n  const ssrBootStyles = computed(() => !isBooted.value ? {\n    transition: 'none !important'\n  } : undefined);\n  return {\n    ssrBootStyles,\n    isBooted: readonly(isBooted)\n  };\n}\n//# sourceMappingURL=ssrBoot.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VAppBar.css\";\n\n// Components\nimport { filterToolbarProps, makeVToolbarProps, VToolbar } from \"../VToolbar/VToolbar.mjs\"; // Composables\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\"; // Utilities\nimport { computed, ref, toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VAppBar = genericComponent()({\n  name: 'VAppBar',\n  props: {\n    // TODO: Implement scrolling techniques\n    // hideOnScroll: Boolean\n    // invertedScroll: Boolean\n    // collapseOnScroll: Boolean\n    // elevateOnScroll: Boolean\n    // shrinkOnScroll: Boolean\n    // fadeImageOnScroll: Boolean\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    location: {\n      type: String,\n      default: 'top',\n      validator: value => ['top', 'bottom'].includes(value)\n    },\n    ...makeVToolbarProps(),\n    ...makeLayoutItemProps(),\n    height: {\n      type: [Number, String],\n      default: 64\n    }\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const vToolbarRef = ref();\n    const isActive = useProxiedModel(props, 'modelValue');\n    const height = computed(() => {\n      const height = vToolbarRef.value?.contentHeight ?? 0;\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0;\n      return height + extensionHeight;\n    });\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const {\n      layoutItemStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => {\n      const [toolbarProps] = filterToolbarProps(props);\n      return _createVNode(VToolbar, _mergeProps({\n        \"ref\": vToolbarRef,\n        \"class\": ['v-app-bar', {\n          'v-app-bar--bottom': props.location === 'bottom'\n        }],\n        \"style\": {\n          ...layoutItemStyles.value,\n          height: undefined,\n          ...ssrBootStyles.value\n        }\n      }, toolbarProps), slots);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VAppBar.mjs.map","// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nconst allowedDensities = [null, 'default', 'comfortable', 'compact'];\n\n// typeof allowedDensities[number] evalutes to any\n// when generating api types for whatever reason.\n\n// Composables\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  }\n}, 'density');\nexport function useDensity(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`;\n  });\n  return {\n    densityClasses\n  };\n}\n//# sourceMappingURL=density.mjs.map","import { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Composables\nimport { useColor } from \"./color.mjs\"; // Utilities\nimport { computed, unref } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nexport const allowedVariants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'];\nexport function genOverlays(isClickable, name) {\n  return _createVNode(_Fragment, null, [isClickable && _createVNode(\"span\", {\n    \"key\": \"overlay\",\n    \"class\": `${name}__overlay`\n  }, null), _createVNode(\"span\", {\n    \"key\": \"underlay\",\n    \"class\": `${name}__underlay`\n  }, null)]);\n}\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String,\n    default: 'elevated',\n    validator: v => allowedVariants.includes(v)\n  }\n}, 'variant');\nexport function useVariant(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const variantClasses = computed(() => {\n    const {\n      variant\n    } = unref(props);\n    return `${name}--variant-${variant}`;\n  });\n  const {\n    colorClasses,\n    colorStyles\n  } = useColor(computed(() => {\n    const {\n      variant,\n      color\n    } = unref(props);\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color\n    };\n  }));\n  return {\n    colorClasses,\n    colorStyles,\n    variantClasses\n  };\n}\n//# sourceMappingURL=variant.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VBtnGroup.css\";\n\n// Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utility\nimport { genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\n\n// Types\n\nexport const makeVBtnGroupProps = propsFactory({\n  divided: Boolean,\n  ...makeBorderProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps()\n}, 'v-btn-group');\nexport const VBtnGroup = genericComponent()({\n  name: 'VBtnGroup',\n  props: makeVBtnGroupProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    provideDefaults({\n      VBtn: {\n        height: 'auto',\n        color: toRef(props, 'color'),\n        density: toRef(props, 'density'),\n        flat: true,\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"class\": ['v-btn-group', {\n          'v-btn-group--divided': props.divided\n        }, themeClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, roundedClasses.value]\n      }, slots);\n    });\n  }\n});\nexport function filterVBtnGroupProps(props) {\n  return pick(props, Object.keys(VBtnGroup.props));\n}\n//# sourceMappingURL=VBtnGroup.mjs.map","// Composables\nimport { useProxiedModel } from \"./proxiedModel.mjs\"; // Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef, watch } from 'vue';\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from \"../util/index.mjs\"; // Types\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String],\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean\n}, 'group');\nexport const makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String\n}, 'group-item');\nexport function useGroupItem(props, injectKey) {\n  let required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const vm = getCurrentInstance('useGroupItem');\n  if (!vm) {\n    throw new Error('[Vuetify] useGroupItem composable must be used inside a component setup function');\n  }\n  const id = getUid();\n  provide(Symbol.for(`${injectKey.description}:id`), id);\n  const group = inject(injectKey, null);\n  if (!group) {\n    if (!required) return group;\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`);\n  }\n  const value = toRef(props, 'value');\n  const disabled = computed(() => group.disabled.value || props.disabled);\n  group.register({\n    id,\n    value,\n    disabled\n  }, vm);\n  onBeforeUnmount(() => {\n    group.unregister(id);\n  });\n  const isSelected = computed(() => {\n    return group.isSelected(id);\n  });\n  const selectedClass = computed(() => isSelected.value && [group.selectedClass.value, props.selectedClass]);\n  watch(isSelected, value => {\n    vm.emit('group:selected', {\n      value\n    });\n  });\n  return {\n    id,\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: value => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group\n  };\n}\nexport function useGroup(props, injectKey) {\n  let isUnmounted = false;\n  const items = reactive([]);\n  const selected = useProxiedModel(props, 'modelValue', [], v => {\n    if (v == null) return [];\n    return getIds(items, wrapInArray(v));\n  }, v => {\n    const arr = getValues(items, v);\n    return props.multiple ? arr : arr[0];\n  });\n  const groupVm = getCurrentInstance('useGroup');\n  function register(item, vm) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item;\n    const key = Symbol.for(`${injectKey.description}:id`);\n    const children = findChildrenWithProvide(key, groupVm?.vnode);\n    const index = children.indexOf(vm);\n    if (index > -1) {\n      items.splice(index, 0, unwrapped);\n    } else {\n      items.push(unwrapped);\n    }\n  }\n  function unregister(id) {\n    if (isUnmounted) return;\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue();\n    const index = items.findIndex(item => item.id === id);\n    items.splice(index, 1);\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue() {\n    const item = items.find(item => !item.disabled);\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id];\n    }\n  }\n  onMounted(() => {\n    forceMandatoryValue();\n  });\n  onBeforeUnmount(() => {\n    isUnmounted = true;\n  });\n  function select(id, value) {\n    const item = items.find(item => item.id === id);\n    if (value && item?.disabled) return;\n    if (props.multiple) {\n      const internalValue = selected.value.slice();\n      const index = internalValue.findIndex(v => v === id);\n      const isSelected = ~index;\n      value = value ?? !isSelected;\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (isSelected && props.mandatory && internalValue.length <= 1) return;\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (!isSelected && props.max != null && internalValue.length + 1 > props.max) return;\n      if (index < 0 && value) internalValue.push(id);else if (index >= 0 && !value) internalValue.splice(index, 1);\n      selected.value = internalValue;\n    } else {\n      const isSelected = selected.value.includes(id);\n      if (props.mandatory && isSelected) return;\n      selected.value = value ?? !isSelected ? [id] : [];\n    }\n  }\n  function step(offset) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop');\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled);\n      item && (selected.value = [item.id]);\n    } else {\n      const currentId = selected.value[0];\n      const currentIndex = items.findIndex(i => i.id === currentId);\n      let newIndex = (currentIndex + offset) % items.length;\n      let newItem = items[newIndex];\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length;\n        newItem = items[newIndex];\n      }\n      if (newItem.disabled) return;\n      selected.value = [items[newIndex].id];\n    }\n  }\n  const state = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: id => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items),\n    getItemIndex: value => getItemIndex(items, value)\n  };\n  provide(injectKey, state);\n  return state;\n}\nfunction getItemIndex(items, value) {\n  const ids = getIds(items, [value]);\n  if (!ids.length) return -1;\n  return items.findIndex(item => item.id === ids[0]);\n}\nfunction getIds(items, modelValue) {\n  const ids = [];\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.value != null) {\n      if (modelValue.find(value => deepEqual(value, item.value)) != null) {\n        ids.push(item.id);\n      }\n    } else if (modelValue.includes(i)) {\n      ids.push(item.id);\n    }\n  }\n  return ids;\n}\nfunction getValues(items, ids) {\n  const values = [];\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (ids.includes(item.id)) {\n      values.push(item.value != null ? item.value : i);\n    }\n  }\n  return values;\n}\n//# sourceMappingURL=group.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VBtnToggle.css\";\n\n// Components\nimport { filterVBtnGroupProps, makeVBtnGroupProps, VBtnGroup } from \"../VBtnGroup/VBtnGroup.mjs\"; // Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\"; // Utility\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VBtnToggleSymbol = Symbol.for('vuetify:v-btn-toggle');\nexport const VBtnToggle = genericComponent()({\n  name: 'VBtnToggle',\n  props: {\n    ...makeVBtnGroupProps(),\n    ...makeGroupProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isSelected,\n      next,\n      prev,\n      select,\n      selected\n    } = useGroup(props, VBtnToggleSymbol);\n    useRender(() => {\n      const [btnGroupProps] = filterVBtnGroupProps(props);\n      return _createVNode(VBtnGroup, _mergeProps({\n        \"class\": \"v-btn-toggle\"\n      }, btnGroupProps), {\n        default: () => [slots.default?.({\n          isSelected,\n          next,\n          prev,\n          select,\n          selected\n        })]\n      });\n    });\n    return {\n      next,\n      prev,\n      select\n    };\n  }\n});\n//# sourceMappingURL=VBtnToggle.mjs.map","// Utilities\nimport { convertToUnit, destructComputed, getCurrentInstanceName, includes, propsFactory } from \"../util/index.mjs\"; // Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large'];\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default'\n  }\n}, 'size');\nexport function useSize(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  return destructComputed(() => {\n    let sizeClasses;\n    let sizeStyles;\n    if (includes(predefinedSizes, props.size)) {\n      sizeClasses = `${name}--size-${props.size}`;\n    } else if (props.size) {\n      sizeStyles = {\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size)\n      };\n    }\n    return {\n      sizeClasses,\n      sizeStyles\n    };\n  });\n}\n//# sourceMappingURL=size.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VIcon.css\";\n\n// Composables\nimport { IconValue, useIcon } from \"../../composables/icons.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, Text, toRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'i'\n  }),\n  ...makeThemeProps()\n}, 'v-icon');\nexport const VIcon = genericComponent()({\n  name: 'VIcon',\n  props: makeVIconProps(),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    let slotIcon;\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.();\n        if (!slot) return;\n        return slot.filter(node => node.type === Text && node.children && typeof node.children === 'string')[0]?.children;\n      });\n    }\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      iconData\n    } = useIcon(slotIcon || props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    useRender(() => _createVNode(iconData.value.component, {\n      \"tag\": props.tag,\n      \"icon\": iconData.value.icon,\n      \"class\": ['v-icon', 'notranslate', themeClasses.value, sizeClasses.value, textColorClasses.value, {\n        'v-icon--clickable': !!attrs.onClick,\n        'v-icon--start': props.start,\n        'v-icon--end': props.end\n      }],\n      \"style\": [!sizeClasses.value ? {\n        fontSize: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n        width: convertToUnit(props.size)\n      } : undefined, textColorStyles.value],\n      \"role\": attrs.onClick ? 'button' : undefined,\n      \"aria-hidden\": !attrs.onClick\n    }, {\n      default: () => [slots.default?.()]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VIcon.mjs.map","// Utilities\nimport { onBeforeUnmount, ref, watch } from 'vue';\nimport { SUPPORTS_INTERSECTION } from \"../util/index.mjs\";\nexport function useIntersectionObserver(callback) {\n  const intersectionRef = ref();\n  const isIntersecting = ref(false);\n  if (SUPPORTS_INTERSECTION) {\n    const observer = new IntersectionObserver(entries => {\n      callback?.(entries, observer);\n      isIntersecting.value = !!entries.find(entry => entry.isIntersecting);\n    });\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n    watch(intersectionRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue);\n        isIntersecting.value = false;\n      }\n      if (newValue) observer.observe(newValue);\n    }, {\n      flush: 'post'\n    });\n  }\n  return {\n    intersectionRef,\n    isIntersecting\n  };\n}\n//# sourceMappingURL=intersectionObserver.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VProgressCircular.css\";\n\n// Composables\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n  props: {\n    bgColor: String,\n    color: String,\n    indeterminate: [Boolean, String],\n    modelValue: {\n      type: [Number, String],\n      default: 0\n    },\n    rotate: {\n      type: [Number, String],\n      default: 0\n    },\n    width: {\n      type: [Number, String],\n      default: 4\n    },\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'div'\n    }),\n    ...makeThemeProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const MAGIC_RADIUS_CONSTANT = 20;\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;\n    const root = ref();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    const {\n      textColorClasses: underlayColorClasses,\n      textColorStyles: underlayColorStyles\n    } = useTextColor(toRef(props, 'bgColor'));\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver();\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))));\n    const width = computed(() => Number(props.width));\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);\n    });\n    const diameter = computed(() => MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2);\n    const strokeWidth = computed(() => width.value / size.value * diameter.value);\n    const strokeDashOffset = computed(() => convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE));\n    watchEffect(() => {\n      intersectionRef.value = root.value;\n      resizeRef.value = root.value;\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": root,\n      \"class\": ['v-progress-circular', {\n        'v-progress-circular--indeterminate': !!props.indeterminate,\n        'v-progress-circular--visible': isIntersecting.value,\n        'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink'\n      }, themeClasses.value, sizeClasses.value, textColorClasses.value],\n      \"style\": [sizeStyles.value, textColorStyles.value],\n      \"role\": \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value\n    }, {\n      default: () => [_createVNode(\"svg\", {\n        \"style\": {\n          transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`\n        },\n        \"xmlns\": \"http://www.w3.org/2000/svg\",\n        \"viewBox\": `0 0 ${diameter.value} ${diameter.value}`\n      }, [_createVNode(\"circle\", {\n        \"class\": ['v-progress-circular__underlay', underlayColorClasses.value],\n        \"style\": underlayColorStyles.value,\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": 0\n      }, null), _createVNode(\"circle\", {\n        \"class\": \"v-progress-circular__overlay\",\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": strokeDashOffset.value\n      }, null)]), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-circular__content\"\n      }, [slots.default({\n        value: normalizedValue.value\n      })])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VProgressCircular.mjs.map","// Styles\nimport \"./VRipple.css\";\n\n// Utilities\nimport { isObject, keyCodes } from \"../../util/index.mjs\"; // Types\nconst stopSymbol = Symbol('rippleStop');\nconst DELAY_RIPPLE = 80;\nfunction transform(el, value) {\n  el.style.transform = value;\n  el.style.webkitTransform = value;\n}\nfunction isTouchEvent(e) {\n  return e.constructor.name === 'TouchEvent';\n}\nfunction isKeyboardEvent(e) {\n  return e.constructor.name === 'KeyboardEvent';\n}\nconst calculate = function (e, el) {\n  let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let localX = 0;\n  let localY = 0;\n  if (!isKeyboardEvent(e)) {\n    const offset = el.getBoundingClientRect();\n    const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e;\n    localX = target.clientX - offset.left;\n    localY = target.clientY - offset.top;\n  }\n  let radius = 0;\n  let scale = 0.3;\n  if (el._ripple?.circle) {\n    scale = 0.15;\n    radius = el.clientWidth / 2;\n    radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4;\n  } else {\n    radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2;\n  }\n  const centerX = `${(el.clientWidth - radius * 2) / 2}px`;\n  const centerY = `${(el.clientHeight - radius * 2) / 2}px`;\n  const x = value.center ? centerX : `${localX - radius}px`;\n  const y = value.center ? centerY : `${localY - radius}px`;\n  return {\n    radius,\n    scale,\n    x,\n    y,\n    centerX,\n    centerY\n  };\n};\nconst ripples = {\n  /* eslint-disable max-statements */\n  show(e, el) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!el?._ripple?.enabled) {\n      return;\n    }\n    const container = document.createElement('span');\n    const animation = document.createElement('span');\n    container.appendChild(animation);\n    container.className = 'v-ripple__container';\n    if (value.class) {\n      container.className += ` ${value.class}`;\n    }\n    const {\n      radius,\n      scale,\n      x,\n      y,\n      centerX,\n      centerY\n    } = calculate(e, el, value);\n    const size = `${radius * 2}px`;\n    animation.className = 'v-ripple__animation';\n    animation.style.width = size;\n    animation.style.height = size;\n    el.appendChild(container);\n    const computed = window.getComputedStyle(el);\n    if (computed && computed.position === 'static') {\n      el.style.position = 'relative';\n      el.dataset.previousPosition = 'static';\n    }\n    animation.classList.add('v-ripple__animation--enter');\n    animation.classList.add('v-ripple__animation--visible');\n    transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`);\n    animation.dataset.activated = String(performance.now());\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--enter');\n      animation.classList.add('v-ripple__animation--in');\n      transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`);\n    }, 0);\n  },\n  hide(el) {\n    if (!el?._ripple?.enabled) return;\n    const ripples = el.getElementsByClassName('v-ripple__animation');\n    if (ripples.length === 0) return;\n    const animation = ripples[ripples.length - 1];\n    if (animation.dataset.isHiding) return;else animation.dataset.isHiding = 'true';\n    const diff = performance.now() - Number(animation.dataset.activated);\n    const delay = Math.max(250 - diff, 0);\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--in');\n      animation.classList.add('v-ripple__animation--out');\n      setTimeout(() => {\n        const ripples = el.getElementsByClassName('v-ripple__animation');\n        if (ripples.length === 1 && el.dataset.previousPosition) {\n          el.style.position = el.dataset.previousPosition;\n          delete el.dataset.previousPosition;\n        }\n        if (animation.parentNode?.parentNode === el) el.removeChild(animation.parentNode);\n      }, 300);\n    }, delay);\n  }\n};\nfunction isRippleEnabled(value) {\n  return typeof value === 'undefined' || !!value;\n}\nfunction rippleShow(e) {\n  const value = {};\n  const element = e.currentTarget;\n  if (!element?._ripple || element._ripple.touched || e[stopSymbol]) return;\n\n  // Don't allow the event to trigger ripples on any other elements\n  e[stopSymbol] = true;\n  if (isTouchEvent(e)) {\n    element._ripple.touched = true;\n    element._ripple.isTouch = true;\n  } else {\n    // It's possible for touch events to fire\n    // as mouse events on Android/iOS, this\n    // will skip the event call if it has\n    // already been registered as touch\n    if (element._ripple.isTouch) return;\n  }\n  value.center = element._ripple.centered || isKeyboardEvent(e);\n  if (element._ripple.class) {\n    value.class = element._ripple.class;\n  }\n  if (isTouchEvent(e)) {\n    // already queued that shows or hides the ripple\n    if (element._ripple.showTimerCommit) return;\n    element._ripple.showTimerCommit = () => {\n      ripples.show(e, element, value);\n    };\n    element._ripple.showTimer = window.setTimeout(() => {\n      if (element?._ripple?.showTimerCommit) {\n        element._ripple.showTimerCommit();\n        element._ripple.showTimerCommit = null;\n      }\n    }, DELAY_RIPPLE);\n  } else {\n    ripples.show(e, element, value);\n  }\n}\nfunction rippleStop(e) {\n  e[stopSymbol] = true;\n}\nfunction rippleHide(e) {\n  const element = e.currentTarget;\n  if (!element?._ripple) return;\n  window.clearTimeout(element._ripple.showTimer);\n\n  // The touch interaction occurs before the show timer is triggered.\n  // We still want to show ripple effect.\n  if (e.type === 'touchend' && element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit();\n    element._ripple.showTimerCommit = null;\n\n    // re-queue ripple hiding\n    element._ripple.showTimer = window.setTimeout(() => {\n      rippleHide(e);\n    });\n    return;\n  }\n  window.setTimeout(() => {\n    if (element._ripple) {\n      element._ripple.touched = false;\n    }\n  });\n  ripples.hide(element);\n}\nfunction rippleCancelShow(e) {\n  const element = e.currentTarget;\n  if (!element?._ripple) return;\n  if (element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit = null;\n  }\n  window.clearTimeout(element._ripple.showTimer);\n}\nlet keyboardRipple = false;\nfunction keyboardRippleShow(e) {\n  if (!keyboardRipple && (e.keyCode === keyCodes.enter || e.keyCode === keyCodes.space)) {\n    keyboardRipple = true;\n    rippleShow(e);\n  }\n}\nfunction keyboardRippleHide(e) {\n  keyboardRipple = false;\n  rippleHide(e);\n}\nfunction focusRippleHide(e) {\n  if (keyboardRipple) {\n    keyboardRipple = false;\n    rippleHide(e);\n  }\n}\nfunction updateRipple(el, binding, wasEnabled) {\n  const {\n    value,\n    modifiers\n  } = binding;\n  const enabled = isRippleEnabled(value);\n  if (!enabled) {\n    ripples.hide(el);\n  }\n  el._ripple = el._ripple ?? {};\n  el._ripple.enabled = enabled;\n  el._ripple.centered = modifiers.center;\n  el._ripple.circle = modifiers.circle;\n  if (isObject(value) && value.class) {\n    el._ripple.class = value.class;\n  }\n  if (enabled && !wasEnabled) {\n    if (modifiers.stop) {\n      el.addEventListener('touchstart', rippleStop, {\n        passive: true\n      });\n      el.addEventListener('mousedown', rippleStop);\n      return;\n    }\n    el.addEventListener('touchstart', rippleShow, {\n      passive: true\n    });\n    el.addEventListener('touchend', rippleHide, {\n      passive: true\n    });\n    el.addEventListener('touchmove', rippleCancelShow, {\n      passive: true\n    });\n    el.addEventListener('touchcancel', rippleHide);\n    el.addEventListener('mousedown', rippleShow);\n    el.addEventListener('mouseup', rippleHide);\n    el.addEventListener('mouseleave', rippleHide);\n    el.addEventListener('keydown', keyboardRippleShow);\n    el.addEventListener('keyup', keyboardRippleHide);\n    el.addEventListener('blur', focusRippleHide);\n\n    // Anchor tags can be dragged, causes other hides to fail - #1537\n    el.addEventListener('dragstart', rippleHide, {\n      passive: true\n    });\n  } else if (!enabled && wasEnabled) {\n    removeListeners(el);\n  }\n}\nfunction removeListeners(el) {\n  el.removeEventListener('mousedown', rippleShow);\n  el.removeEventListener('touchstart', rippleShow);\n  el.removeEventListener('touchend', rippleHide);\n  el.removeEventListener('touchmove', rippleCancelShow);\n  el.removeEventListener('touchcancel', rippleHide);\n  el.removeEventListener('mouseup', rippleHide);\n  el.removeEventListener('mouseleave', rippleHide);\n  el.removeEventListener('keydown', keyboardRippleShow);\n  el.removeEventListener('keyup', keyboardRippleHide);\n  el.removeEventListener('dragstart', rippleHide);\n  el.removeEventListener('blur', focusRippleHide);\n}\nfunction mounted(el, binding) {\n  updateRipple(el, binding, false);\n}\nfunction unmounted(el) {\n  delete el._ripple;\n  removeListeners(el);\n}\nfunction updated(el, binding) {\n  if (binding.value === binding.oldValue) {\n    return;\n  }\n  const wasEnabled = isRippleEnabled(binding.oldValue);\n  updateRipple(el, binding, wasEnabled);\n}\nexport const Ripple = {\n  mounted,\n  unmounted,\n  updated\n};\nexport default Ripple;\n//# sourceMappingURL=index.mjs.map","// Composables\nimport { useRtl } from \"./locale.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { parseAnchor, propsFactory } from \"../util/index.mjs\"; // Types\nconst oppositeMap = {\n  center: 'center',\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nexport const makeLocationProps = propsFactory({\n  location: String\n}, 'location');\nexport function useLocation(props) {\n  let opposite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let offset = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    isRtl\n  } = useRtl();\n  const locationStyles = computed(() => {\n    if (!props.location) return {};\n    const {\n      side,\n      align\n    } = parseAnchor(props.location.split(' ').length > 1 ? props.location : `${props.location} center`, isRtl.value);\n    function getOffset(side) {\n      return offset ? offset(side) : 0;\n    }\n    const styles = {};\n    if (side !== 'center') {\n      if (opposite) styles[oppositeMap[side]] = `calc(100% - ${getOffset(side)}px)`;else styles[side] = 0;\n    }\n    if (align !== 'center') {\n      if (opposite) styles[oppositeMap[align]] = `calc(100% - ${getOffset(align)}px)`;else styles[align] = 0;\n    } else {\n      if (side === 'center') styles.top = styles.left = '50%';else {\n        styles[{\n          top: 'left',\n          bottom: 'left',\n          left: 'top',\n          right: 'top'\n        }[side]] = '50%';\n      }\n      styles.transform = {\n        top: 'translateX(-50%)',\n        bottom: 'translateX(-50%)',\n        left: 'translateY(-50%)',\n        right: 'translateY(-50%)',\n        center: 'translate(-50%, -50%)'\n      }[side];\n    }\n    return styles;\n  });\n  return {\n    locationStyles\n  };\n}\n//# sourceMappingURL=location.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VProgressLinear.css\";\n\n// Composables\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\"; // Utilities\nimport { computed, Transition } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VProgressLinear = genericComponent()({\n  name: 'VProgressLinear',\n  props: {\n    absolute: Boolean,\n    active: {\n      type: Boolean,\n      default: true\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      default: 0\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      default: 4\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100\n    },\n    modelValue: {\n      type: [Number, String],\n      default: 0\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean,\n    ...makeLocationProps({\n      location: 'top'\n    }),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const progress = useProxiedModel(props, 'modelValue');\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(props, 'color');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(computed(() => props.bgColor || props.color));\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles\n    } = useBackgroundColor(props, 'color');\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const max = computed(() => parseInt(props.max, 10));\n    const height = computed(() => parseInt(props.height, 10));\n    const normalizedBuffer = computed(() => parseFloat(props.bufferValue) / max.value * 100);\n    const normalizedValue = computed(() => parseFloat(progress.value) / max.value * 100);\n    const isReversed = computed(() => isRtl.value !== props.reverse);\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition');\n    const opacity = computed(() => {\n      return props.bgOpacity == null ? props.bgOpacity : parseFloat(props.bgOpacity);\n    });\n    function handleClick(e) {\n      if (!intersectionRef.value) return;\n      const {\n        left,\n        right,\n        width\n      } = intersectionRef.value.getBoundingClientRect();\n      const value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;\n      progress.value = Math.round(value / width * max.value);\n    }\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": intersectionRef,\n      \"class\": ['v-progress-linear', {\n        'v-progress-linear--absolute': props.absolute,\n        'v-progress-linear--active': props.active && isIntersecting.value,\n        'v-progress-linear--reverse': isReversed.value,\n        'v-progress-linear--rounded': props.rounded,\n        'v-progress-linear--rounded-bar': props.roundedBar,\n        'v-progress-linear--striped': props.striped\n      }, roundedClasses.value, themeClasses.value],\n      \"style\": {\n        bottom: props.location === 'bottom' ? 0 : undefined,\n        top: props.location === 'top' ? 0 : undefined,\n        height: props.active ? convertToUnit(height.value) : 0,\n        '--v-progress-linear-height': convertToUnit(height.value),\n        ...locationStyles.value\n      },\n      \"role\": \"progressbar\",\n      \"aria-hidden\": props.active ? 'false' : 'true',\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": props.max,\n      \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value,\n      \"onClick\": props.clickable && handleClick\n    }, {\n      default: () => [props.stream && _createVNode(\"div\", {\n        \"key\": \"stream\",\n        \"class\": ['v-progress-linear__stream', textColorClasses.value],\n        \"style\": {\n          ...textColorStyles.value,\n          [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n          borderTop: `${convertToUnit(height.value / 2)} dotted`,\n          opacity: opacity.value,\n          top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n          width: convertToUnit(100 - normalizedBuffer.value, '%'),\n          '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1))\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__background', backgroundColorClasses.value],\n        \"style\": [backgroundColorStyles.value, {\n          opacity: opacity.value,\n          width: convertToUnit(!props.stream ? 100 : normalizedBuffer.value, '%')\n        }]\n      }, null), _createVNode(Transition, {\n        \"name\": transition.value\n      }, {\n        default: () => [!props.indeterminate ? _createVNode(\"div\", {\n          \"class\": ['v-progress-linear__determinate', barColorClasses.value],\n          \"style\": [barColorStyles.value, {\n            width: convertToUnit(normalizedValue.value, '%')\n          }]\n        }, null) : _createVNode(\"div\", {\n          \"class\": \"v-progress-linear__indeterminate\"\n        }, [['long', 'short'].map(bar => _createVNode(\"div\", {\n          \"key\": bar,\n          \"class\": ['v-progress-linear__indeterminate', bar, barColorClasses.value],\n          \"style\": barColorStyles.value\n        }, null))])]\n      }), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-linear__content\"\n      }, [slots.default({\n        value: normalizedValue.value,\n        buffer: normalizedBuffer.value\n      })])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VProgressLinear.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VProgressLinear } from \"../components/VProgressLinear/index.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeLoaderProps = propsFactory({\n  loading: [Boolean, String]\n}, 'loader');\nexport function useLoader(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading\n  }));\n  return {\n    loaderClasses\n  };\n}\nexport function LoaderSlot(props, _ref) {\n  let {\n    slots\n  } = _ref;\n  return _createVNode(\"div\", {\n    \"class\": `${props.name}__loader`\n  }, [slots.default?.({\n    color: props.color,\n    isActive: props.active\n  }) || _createVNode(VProgressLinear, {\n    \"active\": props.active,\n    \"color\": props.color,\n    \"height\": \"2\",\n    \"indeterminate\": true\n  }, null)]);\n}\n//# sourceMappingURL=loader.mjs.map","// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'];\n// Composables\nexport const makePositionProps = propsFactory({\n  position: {\n    type: String,\n    validator: /* istanbul ignore next */v => positionValues.includes(v)\n  }\n}, 'position');\nexport function usePosition(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const positionClasses = computed(() => {\n    return props.position ? `${name}--${props.position}` : undefined;\n  });\n  return {\n    positionClasses\n  };\n}\n//# sourceMappingURL=position.mjs.map","// Utilities\nimport { getCurrentInstance, hasEvent, IN_BROWSER, propsFactory } from \"../util/index.mjs\";\nimport { computed, nextTick, onScopeDispose, resolveDynamicComponent, toRef } from 'vue';\n\n// Types\n\nexport function useRoute() {\n  const vm = getCurrentInstance('useRoute');\n  return computed(() => vm?.proxy?.$route);\n}\nexport function useRouter() {\n  return getCurrentInstance('useRouter')?.proxy?.$router;\n}\nexport function useLink(props, attrs) {\n  const RouterLink = resolveDynamicComponent('RouterLink');\n  const isLink = computed(() => !!(props.href || props.to));\n  const isClickable = computed(() => {\n    return isLink?.value || hasEvent(attrs, 'click') || hasEvent(props, 'click');\n  });\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href')\n    };\n  }\n  const link = props.to ? RouterLink.useLink(props) : undefined;\n  return {\n    isLink,\n    isClickable,\n    route: link?.route,\n    navigate: link?.navigate,\n    isActive: link && computed(() => props.exact ? link.isExactActive?.value : link.isActive?.value),\n    href: computed(() => props.to ? link?.route.value.href : props.href)\n  };\n}\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object],\n  exact: Boolean\n}, 'router');\nlet inTransition = false;\nexport function useBackButton(router, cb) {\n  let popped = false;\n  let removeBefore;\n  let removeAfter;\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate);\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next());\n        } else {\n          popped ? cb(next) : next();\n        }\n        inTransition = true;\n      });\n      removeAfter = router?.afterEach(() => {\n        inTransition = false;\n      });\n    });\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate);\n      removeBefore?.();\n      removeAfter?.();\n    });\n  }\n  function onPopstate(e) {\n    if (e.state?.replaced) return;\n    popped = true;\n    setTimeout(() => popped = false);\n  }\n}\n//# sourceMappingURL=router.mjs.map","// Utilities\nimport { nextTick, watch } from 'vue';\n\n// Types\n\nexport function useSelectLink(link, select) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true);\n      });\n    }\n  }, {\n    immediate: true\n  });\n}\n//# sourceMappingURL=selectLink.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBtn.css\";\n\n// Components\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VBtn = genericComponent()({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined\n    },\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    block: Boolean,\n    stacked: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'button'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active;\n      }\n      if (link.isLink.value) {\n        return link.isActive?.value;\n      }\n      return group?.isSelected.value;\n    });\n    const isDisabled = computed(() => group?.disabled.value || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border);\n    });\n    const valueAttr = computed(() => {\n      if (props.value === undefined) return undefined;\n      return Object(props.value) === props.value ? JSON.stringify(props.value, null, 0) : props.value;\n    });\n    useSelectLink(link, group?.select);\n    useRender(() => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasPrepend = !!(props.prependIcon || slots.prepend);\n      const hasAppend = !!(props.appendIcon || slots.append);\n      const hasIcon = !!(props.icon && props.icon !== true);\n      const hasColor = group?.isSelected.value && (!link.isLink.value || link.isActive?.value) || !group || link.isActive?.value;\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group?.selectedClass.value, {\n          'v-btn--active': isActive.value,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--loading': props.loading,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, locationStyles.value, sizeStyles.value],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": e => {\n          if (isDisabled.value) return;\n          link.navigate?.(e);\n          group?.toggle();\n        },\n        \"value\": valueAttr.value\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.prependIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__prepend\"\n          }, [slots.prepend?.() ?? _createVNode(VIcon, null, null)])]\n        }), _createVNode(\"span\", {\n          \"class\": \"v-btn__content\",\n          \"data-no-activator\": \"\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"key\": \"content\",\n          \"defaults\": {\n            VIcon: {\n              icon: hasIcon ? props.icon : undefined\n            }\n          }\n        }, {\n          default: () => [slots.default?.() ?? (hasIcon && _createVNode(VIcon, {\n            \"key\": \"icon\"\n          }, null))]\n        })]), !props.icon && hasAppend && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.appendIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__append\"\n          }, [slots.append?.() ?? _createVNode(VIcon, null, null)])]\n        }), !!props.loading && _createVNode(\"span\", {\n          \"key\": \"loader\",\n          \"class\": \"v-btn__loader\"\n        }, [slots.loader?.() ?? _createVNode(VProgressCircular, {\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n          \"indeterminate\": true,\n          \"size\": \"23\",\n          \"width\": \"2\"\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VBtn.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VAppBarNavIcon = genericComponent()({\n  name: 'VAppBarNavIcon',\n  props: {\n    icon: {\n      type: IconValue,\n      default: '$menu'\n    }\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(VBtn, {\n      \"class\": \"v-app-bar-nav-icon\",\n      \"icon\": props.icon\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VAppBarNavIcon.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { VToolbarTitle } from \"../VToolbar/index.mjs\"; // Utilities\nimport { makeVToolbarTitleProps } from \"../VToolbar/VToolbarTitle.mjs\";\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VAppBarTitle = genericComponent()({\n  name: 'VAppBarTitle',\n  props: makeVToolbarTitleProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(VToolbarTitle, _mergeProps(props, {\n      \"class\": \"v-app-bar-title\"\n    }), slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VAppBarTitle.mjs.map","// Utilities\nimport { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VAlertTitle = createSimpleFunctional('v-alert-title');\n//# sourceMappingURL=VAlertTitle.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAlert.css\";\n\n// Components\nimport { VAlertTitle } from \"./VAlertTitle.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const VAlert = genericComponent()({\n  name: 'VAlert',\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: val => {\n        return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n      }\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    icon: {\n      type: [Boolean, String, Function, Object],\n      default: null\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String,\n      validator: val => allowedTypes.includes(val)\n    },\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'flat'\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return props.icon ?? `$${props.type}`;\n    });\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant\n    }));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick(e) {\n        isActive.value = false;\n      }\n    }));\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasText = !!(props.text || slots.text);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-alert__prepend\"\n          }, [slots.prepend ? slots.prepend() : icon.value && _createVNode(VIcon, null, null)])]\n        }), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title ? slots.title() : props.title]\n        }), hasText && (slots.text ? slots.text() : props.text), slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(VDefaultsProvider, {\n          \"key\": \"close\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-alert__close\"\n          }, [slots.close?.({\n            props: closeProps.value\n          }) ?? _createVNode(VBtn, closeProps.value, null)])]\n        })]\n      });\n    };\n  }\n});\n//# sourceMappingURL=VAlert.mjs.map","import { createVNode as _createVNode } from \"vue\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nexport function useInputIcon(props) {\n  const {\n    t\n  } = useLocale();\n  function InputIcon(_ref) {\n    let {\n      name\n    } = _ref;\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear'\n    }[name];\n    const listener = props[`onClick:${name}`];\n    const label = listener && localeKey ? t(`$vuetify.input.${localeKey}`, props.label ?? '') : undefined;\n    return _createVNode(VIcon, {\n      \"icon\": props[`${name}Icon`],\n      \"aria-label\": label,\n      \"onClick\": listener\n    }, null);\n  }\n  return {\n    InputIcon\n  };\n}\n//# sourceMappingURL=InputIcon.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VLabel.css\";\n\n// Composables\nimport { makeThemeProps } from \"../../composables/theme.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VLabel = genericComponent()({\n  name: 'VLabel',\n  props: {\n    text: String,\n    clickable: Boolean,\n    ...makeThemeProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(\"label\", {\n      \"class\": ['v-label', {\n        'v-label--clickable': props.clickable\n      }]\n    }, [props.text, slots.default?.()]));\n    return {};\n  }\n});\n//# sourceMappingURL=VLabel.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { VLabel } from \"../VLabel/index.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VFieldLabel = genericComponent()({\n  name: 'VFieldLabel',\n  props: {\n    floating: Boolean\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(VLabel, {\n      \"class\": ['v-field-label', {\n        'v-field-label--floating': props.floating\n      }],\n      \"aria-hidden\": props.floating || undefined\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VFieldLabel.mjs.map","// Components\nimport { useProxiedModel } from \"./proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeFocusProps = propsFactory({\n  focused: Boolean\n}, 'focus');\nexport function useFocus(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const isFocused = useProxiedModel(props, 'focused');\n  const focusClasses = computed(() => {\n    return {\n      [`${name}--focused`]: isFocused.value\n    };\n  });\n  function focus() {\n    isFocused.value = true;\n  }\n  function blur() {\n    isFocused.value = false;\n  }\n  return {\n    focusClasses,\n    isFocused,\n    focus,\n    blur\n  };\n}\n//# sourceMappingURL=focus.mjs.map","import { mergeProps as _mergeProps, Fragment as _Fragment, withDirectives as _withDirectives, vShow as _vShow, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VField.css\";\n\n// Components\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { useInputIcon } from \"../VInput/InputIcon.mjs\";\nimport { VFieldLabel } from \"./VFieldLabel.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, ref, toRef, watch } from 'vue';\nimport { animate, convertToUnit, EventProp, genericComponent, getUid, isOn, nullifyTransforms, pick, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'plain'];\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear'\n  },\n  active: Boolean,\n  color: String,\n  dirty: Boolean,\n  disabled: Boolean,\n  error: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String,\n    default: 'filled',\n    validator: v => allowedVariants.includes(v)\n  },\n  'onClick:clear': EventProp,\n  'onClick:appendInner': EventProp,\n  'onClick:prependInner': EventProp,\n  ...makeThemeProps(),\n  ...makeLoaderProps()\n}, 'v-field');\nexport const VField = genericComponent()({\n  name: 'VField',\n  inheritAttrs: false,\n  props: {\n    id: String,\n    ...makeFocusProps(),\n    ...makeVFieldProps()\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      focusClasses,\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const {\n      InputIcon\n    } = useInputIcon(props);\n    const isActive = computed(() => props.dirty || props.active);\n    const hasLabel = computed(() => !props.singleLine && !!(props.label || slots.label));\n    const uid = getUid();\n    const id = computed(() => props.id || `input-${uid}`);\n    const messagesId = computed(() => `${id.value}-messages`);\n    const labelRef = ref();\n    const floatingLabelRef = ref();\n    const controlRef = ref();\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(computed(() => {\n      return isActive.value && isFocused.value && !props.error && !props.disabled ? props.color : undefined;\n    }));\n    watch(isActive, val => {\n      if (hasLabel.value) {\n        const el = labelRef.value.$el;\n        const targetEl = floatingLabelRef.value.$el;\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el);\n          const targetRect = targetEl.getBoundingClientRect();\n          const x = targetRect.x - rect.x;\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2);\n          const targetWidth = targetRect.width / 0.75;\n          const width = Math.abs(targetWidth - rect.width) > 1 ? {\n            maxWidth: convertToUnit(targetWidth)\n          } : undefined;\n          const style = getComputedStyle(el);\n          const targetStyle = getComputedStyle(targetEl);\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150;\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'));\n          const color = targetStyle.getPropertyValue('color');\n          el.style.visibility = 'visible';\n          targetEl.style.visibility = 'hidden';\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse'\n          }).finished.then(() => {\n            el.style.removeProperty('visibility');\n            targetEl.style.removeProperty('visibility');\n          });\n        });\n      }\n    }, {\n      flush: 'post'\n    });\n    const slotProps = computed(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus\n    }));\n    function onClick(e) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault();\n      }\n    }\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined';\n      const hasPrepend = slots['prepend-inner'] || props.prependInnerIcon;\n      const hasClear = !!(props.clearable || slots.clear);\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear);\n      const label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-field', {\n          'v-field--active': isActive.value,\n          'v-field--appended': hasAppend,\n          'v-field--disabled': props.disabled,\n          'v-field--dirty': props.dirty,\n          'v-field--error': props.error,\n          'v-field--has-background': !!props.bgColor,\n          'v-field--persistent-clear': props.persistentClear,\n          'v-field--prepended': hasPrepend,\n          'v-field--reverse': props.reverse,\n          'v-field--single-line': props.singleLine,\n          'v-field--no-label': !label,\n          [`v-field--variant-${props.variant}`]: true\n        }, themeClasses.value, backgroundColorClasses.value, focusClasses.value, loaderClasses.value],\n        \"style\": [backgroundColorStyles.value, textColorStyles.value],\n        \"onClick\": onClick\n      }, attrs), [_createVNode(\"div\", {\n        \"class\": \"v-field__overlay\"\n      }, null), _createVNode(LoaderSlot, {\n        \"name\": \"v-field\",\n        \"active\": !!props.loading,\n        \"color\": props.error ? 'error' : props.color\n      }, {\n        default: slots.loader\n      }), hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-field__prepend-inner\"\n      }, [props.prependInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prependInner\"\n      }, null), slots['prepend-inner']?.(slotProps.value)]), _createVNode(\"div\", {\n        \"class\": \"v-field__field\",\n        \"data-no-activator\": \"\"\n      }, [['solo', 'filled'].includes(props.variant) && hasLabel.value && _createVNode(VFieldLabel, {\n        \"key\": \"floating-label\",\n        \"ref\": floatingLabelRef,\n        \"class\": [textColorClasses.value],\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: () => [label]\n      }), _createVNode(VFieldLabel, {\n        \"ref\": labelRef,\n        \"for\": id.value\n      }, {\n        default: () => [label]\n      }), slots.default?.({\n        ...slotProps.value,\n        props: {\n          id: id.value,\n          class: 'v-field__input',\n          'aria-describedby': messagesId.value\n        },\n        focus,\n        blur\n      })]), hasClear && _createVNode(VExpandXTransition, {\n        \"key\": \"clear\"\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-field__clearable\"\n        }, [slots.clear ? slots.clear() : _createVNode(InputIcon, {\n          \"name\": \"clear\"\n        }, null)]), [[_vShow, props.dirty]])]\n      }), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-field__append-inner\"\n      }, [slots['append-inner']?.(slotProps.value), props.appendInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"appendInner\"\n      }, null)]), _createVNode(\"div\", {\n        \"class\": ['v-field__outline', textColorClasses.value]\n      }, [isOutlined && _createVNode(_Fragment, null, [_createVNode(\"div\", {\n        \"class\": \"v-field__outline__start\"\n      }, null), hasLabel.value && _createVNode(\"div\", {\n        \"class\": \"v-field__outline__notch\"\n      }, [_createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: () => [label]\n      })]), _createVNode(\"div\", {\n        \"class\": \"v-field__outline__end\"\n      }, null)]), ['plain', 'underlined'].includes(props.variant) && hasLabel.value && _createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: () => [label]\n      })])]);\n    });\n    return {\n      controlRef\n    };\n  }\n});\n// TODO: this is kinda slow, might be better to implicitly inherit props instead\nexport function filterFieldProps(attrs) {\n  const keys = Object.keys(VField.props).filter(k => !isOn(k));\n  return pick(attrs, keys);\n}\n//# sourceMappingURL=VField.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMessages.css\";\n\n// Components\nimport { VSlideYTransition } from \"../transitions/index.mjs\"; // Composables\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const VMessages = genericComponent()({\n  name: 'VMessages',\n  props: {\n    active: Boolean,\n    color: String,\n    messages: {\n      type: [Array, String],\n      default: () => []\n    },\n    ...makeTransitionProps({\n      transition: {\n        component: VSlideYTransition,\n        leaveAbsolute: true,\n        group: true\n      }\n    })\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const messages = computed(() => wrapInArray(props.messages));\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(computed(() => props.color));\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition,\n      \"tag\": \"div\",\n      \"class\": ['v-messages', textColorClasses.value],\n      \"style\": textColorStyles.value,\n      \"role\": \"alert\",\n      \"aria-live\": \"polite\"\n    }, {\n      default: () => [props.active && messages.value.map((message, i) => _createVNode(\"div\", {\n        \"class\": \"v-messages__message\",\n        \"key\": `${i}-${messages.value}`\n      }, [slots.message ? slots.message({\n        message\n      }) : message]))]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VMessages.mjs.map","// Utilities\nimport { computed, inject, provide, ref, toRef, watch } from 'vue';\nimport { useProxiedModel } from \"./proxiedModel.mjs\";\nimport { consoleWarn, propsFactory } from \"../util/index.mjs\"; // Types\nexport const FormKey = Symbol.for('vuetify:form');\nexport const makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  validateOn: {\n    type: String,\n    default: 'input'\n  }\n}, 'form');\nexport function createForm(props) {\n  const model = useProxiedModel(props, 'modelValue');\n  const isDisabled = computed(() => props.disabled);\n  const isReadonly = computed(() => props.readonly);\n  const isValidating = ref(false);\n  const items = ref([]);\n  const errors = ref([]);\n  async function validate() {\n    const results = [];\n    let valid = true;\n    errors.value = [];\n    isValidating.value = true;\n    for (const item of items.value) {\n      const itemErrorMessages = await item.validate();\n      if (itemErrorMessages.length > 0) {\n        valid = false;\n        results.push({\n          id: item.id,\n          errorMessages: itemErrorMessages\n        });\n      }\n      if (!valid && props.fastFail) break;\n    }\n    errors.value = results;\n    isValidating.value = false;\n    return {\n      valid,\n      errors: errors.value\n    };\n  }\n  function reset() {\n    items.value.forEach(item => item.reset());\n    model.value = null;\n  }\n  function resetValidation() {\n    items.value.forEach(item => item.resetValidation());\n    errors.value = [];\n    model.value = null;\n  }\n  watch(items, () => {\n    let valid = 0;\n    let invalid = 0;\n    const results = [];\n    for (const item of items.value) {\n      if (item.isValid === false) {\n        invalid++;\n        results.push({\n          id: item.id,\n          errorMessages: item.errorMessages\n        });\n      } else if (item.isValid === true) valid++;\n    }\n    errors.value = results;\n    model.value = invalid > 0 ? false : valid === items.value.length ? true : null;\n  }, {\n    deep: true\n  });\n  provide(FormKey, {\n    register: _ref => {\n      let {\n        id,\n        validate,\n        reset,\n        resetValidation\n      } = _ref;\n      if (items.value.some(item => item.id === id)) {\n        consoleWarn(`Duplicate input name \"${id}\"`);\n      }\n      items.value.push({\n        id,\n        validate,\n        reset,\n        resetValidation,\n        isValid: null,\n        errorMessages: []\n      });\n    },\n    unregister: id => {\n      items.value = items.value.filter(item => {\n        return item.id !== id;\n      });\n    },\n    update: (id, isValid, errorMessages) => {\n      const found = items.value.find(item => item.id === id);\n      if (!found) return;\n      found.isValid = isValid;\n      found.errorMessages = errorMessages;\n    },\n    isDisabled,\n    isReadonly,\n    isValidating,\n    items,\n    validateOn: toRef(props, 'validateOn')\n  });\n  return {\n    errors,\n    isDisabled,\n    isReadonly,\n    isValidating,\n    items,\n    validate,\n    reset,\n    resetValidation\n  };\n}\nexport function useForm() {\n  return inject(FormKey, null);\n}\n//# sourceMappingURL=form.mjs.map","// Composables\nimport { useForm } from \"./form.mjs\";\nimport { useProxiedModel } from \"./proxiedModel.mjs\";\nimport { useToggleScope } from \"./toggleScope.mjs\";\nimport { makeFocusProps } from \"./focus.mjs\"; // Utilities\nimport { computed, onBeforeMount, onBeforeUnmount, onMounted, ref, unref, watch } from 'vue';\nimport { getCurrentInstanceName, getUid, propsFactory, wrapInArray } from \"../util/index.mjs\"; // Types\nexport const makeValidationProps = propsFactory({\n  disabled: Boolean,\n  error: Boolean,\n  errorMessages: {\n    type: [Array, String],\n    default: () => []\n  },\n  maxErrors: {\n    type: [Number, String],\n    default: 1\n  },\n  name: String,\n  label: String,\n  readonly: Boolean,\n  rules: {\n    type: Array,\n    default: () => []\n  },\n  modelValue: null,\n  validateOn: String,\n  validationValue: null,\n  ...makeFocusProps()\n}, 'validation');\nexport function useValidation(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getUid();\n  const model = useProxiedModel(props, 'modelValue');\n  const validationModel = computed(() => props.validationValue === undefined ? model.value : props.validationValue);\n  const form = useForm();\n  const internalErrorMessages = ref([]);\n  const isPristine = ref(true);\n  const isDirty = computed(() => !!(wrapInArray(model.value === '' ? null : model.value).length || wrapInArray(validationModel.value === '' ? null : validationModel.value).length));\n  const isDisabled = computed(() => !!(props.disabled || form?.isDisabled.value));\n  const isReadonly = computed(() => !!(props.readonly || form?.isReadonly.value));\n  const errorMessages = computed(() => {\n    return props.errorMessages.length ? wrapInArray(props.errorMessages).slice(0, Math.max(0, +props.maxErrors)) : internalErrorMessages.value;\n  });\n  const isValid = computed(() => {\n    if (props.error || errorMessages.value.length) return false;\n    if (!props.rules.length) return true;\n    return isPristine.value ? null : true;\n  });\n  const isValidating = ref(false);\n  const validationClasses = computed(() => {\n    return {\n      [`${name}--error`]: isValid.value === false,\n      [`${name}--dirty`]: isDirty.value,\n      [`${name}--disabled`]: isDisabled.value,\n      [`${name}--readonly`]: isReadonly.value\n    };\n  });\n  const uid = computed(() => props.name ?? unref(id));\n  onBeforeMount(() => {\n    form?.register({\n      id: uid.value,\n      validate,\n      reset,\n      resetValidation\n    });\n  });\n  onBeforeUnmount(() => {\n    form?.unregister(uid.value);\n  });\n  const validateOn = computed(() => props.validateOn || form?.validateOn.value || 'input');\n\n  // Set initial valid state, for inputs that might not have rules\n  onMounted(() => form?.update(uid.value, isValid.value, errorMessages.value));\n  useToggleScope(() => validateOn.value === 'input', () => {\n    watch(validationModel, () => {\n      if (validationModel.value != null) {\n        validate();\n      } else if (props.focused) {\n        const unwatch = watch(() => props.focused, val => {\n          if (!val) validate();\n          unwatch();\n        });\n      }\n    });\n  });\n  useToggleScope(() => validateOn.value === 'blur', () => {\n    watch(() => props.focused, val => {\n      if (!val) validate();\n    });\n  });\n  watch(isValid, () => {\n    form?.update(uid.value, isValid.value, errorMessages.value);\n  });\n  function reset() {\n    resetValidation();\n    model.value = null;\n  }\n  function resetValidation() {\n    isPristine.value = true;\n    internalErrorMessages.value = [];\n  }\n  async function validate() {\n    const results = [];\n    isValidating.value = true;\n    for (const rule of props.rules) {\n      if (results.length >= (props.maxErrors ?? 1)) {\n        break;\n      }\n      const handler = typeof rule === 'function' ? rule : () => rule;\n      const result = await handler(validationModel.value);\n      if (result === true) continue;\n      if (typeof result !== 'string') {\n        // eslint-disable-next-line no-console\n        console.warn(`${result} is not a valid value. Rule functions must return boolean true or a string.`);\n        continue;\n      }\n      results.push(result);\n    }\n    internalErrorMessages.value = results;\n    isValidating.value = false;\n    isPristine.value = false;\n    return internalErrorMessages.value;\n  }\n  return {\n    errorMessages,\n    isDirty,\n    isDisabled,\n    isReadonly,\n    isPristine,\n    isValid,\n    isValidating,\n    reset,\n    resetValidation,\n    validate,\n    validationClasses\n  };\n}\n//# sourceMappingURL=validation.mjs.map","import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VInput.css\";\n\n// Components\nimport { VMessages } from \"../VMessages/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeValidationProps, useValidation } from \"../../composables/validation.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { EventProp, genericComponent, getUid, isOn, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { useInputIcon } from \"./InputIcon.mjs\";\nexport const makeVInputProps = propsFactory({\n  id: String,\n  appendIcon: IconValue,\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String],\n  messages: {\n    type: [Array, String],\n    default: () => []\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    validator: v => ['horizontal', 'vertical'].includes(v)\n  },\n  'onClick:prepend': EventProp,\n  'onClick:append': EventProp,\n  ...makeDensityProps(),\n  ...makeValidationProps()\n}, 'v-input');\nexport const VInput = genericComponent()({\n  name: 'VInput',\n  props: {\n    ...makeVInputProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      emit\n    } = _ref;\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      InputIcon\n    } = useInputIcon(props);\n    const uid = getUid();\n    const id = computed(() => props.id || `input-${uid}`);\n    const messagesId = computed(() => `${id.value}-messages`);\n    const {\n      errorMessages,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses\n    } = useValidation(props, 'v-input', id);\n    const slotProps = computed(() => ({\n      id,\n      messagesId,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate\n    }));\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.prependIcon);\n      const hasAppend = !!(slots.append || props.appendIcon);\n      const hasMessages = !!(props.messages?.length || errorMessages.value.length);\n      const hasDetails = !props.hideDetails || props.hideDetails === 'auto' && (hasMessages || !!slots.details);\n      return _createVNode(\"div\", {\n        \"class\": ['v-input', `v-input--${props.direction}`, densityClasses.value, validationClasses.value]\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-input__prepend\"\n      }, [slots.prepend?.(slotProps.value), props.prependIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prepend\"\n      }, null)]), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-input__control\"\n      }, [slots.default?.(slotProps.value)]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-input__append\"\n      }, [props.appendIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"append\"\n      }, null), slots.append?.(slotProps.value)]), hasDetails && _createVNode(\"div\", {\n        \"class\": \"v-input__details\"\n      }, [_createVNode(VMessages, {\n        \"id\": messagesId.value,\n        \"active\": hasMessages,\n        \"messages\": errorMessages.value.length > 0 ? errorMessages.value : props.messages\n      }, {\n        message: slots.message\n      }), slots.details?.(slotProps.value)])]);\n    });\n    return {\n      reset,\n      resetValidation,\n      validate\n    };\n  }\n});\nexport function filterInputProps(props) {\n  const keys = Object.keys(VInput.props).filter(k => !isOn(k));\n  return pick(props, keys);\n}\n//# sourceMappingURL=VInput.mjs.map","import { withDirectives as _withDirectives, createVNode as _createVNode, vShow as _vShow } from \"vue\";\n// Styles\nimport \"./VCounter.css\";\n\n// Components\nimport { VSlideYTransition } from \"../transitions/index.mjs\"; // Composables\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VCounter = genericComponent()({\n  name: 'VCounter',\n  functional: true,\n  props: {\n    active: Boolean,\n    max: [Number, String],\n    value: {\n      type: [Number, String],\n      default: 0\n    },\n    ...makeTransitionProps({\n      transition: {\n        component: VSlideYTransition\n      }\n    })\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value);\n    });\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": \"v-counter\"\n      }, [slots.default ? slots.default({\n        counter: counter.value,\n        max: props.max,\n        value: props.value\n      }) : counter.value]), [[_vShow, props.active]])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VCounter.mjs.map","const Refs = Symbol('Forwarded refs');\n\n/** Omit properties starting with P */\n\nexport function forwardRefs(target) {\n  for (var _len = arguments.length, refs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    refs[_key - 1] = arguments[_key];\n  }\n  target[Refs] = refs;\n  return new Proxy(target, {\n    get(target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key);\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key);\n          return typeof val === 'function' ? val.bind(ref.value) : val;\n        }\n      }\n    },\n    getOwnPropertyDescriptor(target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key);\n      if (descriptor) return descriptor;\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return;\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue;\n        const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key);\n        if (descriptor) return descriptor;\n        if ('_' in ref.value && 'setupState' in ref.value._) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value._.setupState, key);\n          if (descriptor) return descriptor;\n        }\n      }\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        let obj = ref.value && Object.getPrototypeOf(ref.value);\n        while (obj) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(obj, key);\n          if (descriptor) return descriptor;\n          obj = Object.getPrototypeOf(obj);\n        }\n      }\n      // Call forwarded refs' proxies\n      for (const ref of refs) {\n        const childRefs = ref.value && ref.value[Refs];\n        if (!childRefs) continue;\n        const queue = childRefs.slice();\n        while (queue.length) {\n          const ref = queue.shift();\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key);\n          if (descriptor) return descriptor;\n          const childRefs = ref.value && ref.value[Refs];\n          if (childRefs) queue.push(...childRefs);\n        }\n      }\n      return undefined;\n    }\n  });\n}\n//# sourceMappingURL=forwardRefs.mjs.map","import { Fragment as _Fragment, withDirectives as _withDirectives, createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VTextField.css\";\n\n// Components\nimport { filterFieldProps, makeVFieldProps, VField } from \"../VField/VField.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { cloneVNode, computed, nextTick, ref } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\nconst EventProp = [Function, Array];\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: Function,\n  hint: String,\n  persistentHint: Boolean,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  type: {\n    type: String,\n    default: 'text'\n  },\n  ...makeVInputProps(),\n  ...makeVFieldProps()\n}, 'v-text-field');\nexport const VTextField = genericComponent()({\n  name: 'VTextField',\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextFieldProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value ?? '').toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting) return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value);\n    const messages = computed(() => {\n      return props.messages.length ? props.messages : isFocused.value || props.persistentHint ? props.hint : '';\n    });\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n      if (e.target === inputRef.value) return;\n      onFocus();\n      e.preventDefault();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = null;\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      model.value = e.target.value;\n    }\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = filterInputProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-text-field', {\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-text-field--flush-details': ['plain', 'underlined'].includes(props.variant)\n        }],\n        \"onClick:prepend\": props['onClick:prepend'],\n        \"onClick:append\": props['onClick:append']\n      }, rootAttrs, inputProps, {\n        \"focused\": isFocused.value,\n        \"messages\": messages.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner'],\n            \"role\": \"textbox\"\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              const inputNode = _withDirectives(_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"name\": props.name,\n                \"placeholder\": props.placeholder,\n                \"size\": 1,\n                \"type\": props.type,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]);\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), slots.default ? _createVNode(\"div\", {\n                \"class\": fieldClass,\n                \"data-no-activator\": \"\"\n              }, [slots.default(), inputNode]) : cloneVNode(inputNode, {\n                class: fieldClass\n              }), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\nexport function filterVTextFieldProps(props) {\n  return pick(props, Object.keys(VTextField.props));\n}\n//# sourceMappingURL=VTextField.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSelectionControlGroup.css\";\n\n// Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\";\nimport { makeThemeProps } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue';\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const VSelectionControlGroupSymbol = Symbol.for('vuetify:selection-control-group');\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: Boolean,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: Boolean,\n    default: true\n  },\n  multiple: {\n    type: Boolean,\n    default: null\n  },\n  name: String,\n  readonly: Boolean,\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  },\n  ...makeThemeProps(),\n  ...makeDensityProps()\n}, 'v-selection-control-group');\nexport const VSelectionControlGroup = genericComponent()({\n  name: 'VSelectionControlGroup',\n  props: {\n    defaultsTarget: {\n      type: String,\n      default: 'VSelectionControl'\n    },\n    ...makeSelectionControlGroupProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const modelValue = useProxiedModel(props, 'modelValue');\n    const uid = getUid();\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`);\n    const name = computed(() => props.name || id.value);\n    const updateHandlers = new Set();\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn());\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb);\n        onScopeDispose(() => {\n          updateHandlers.delete(cb);\n        });\n      }\n    });\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || props.multiple == null && Array.isArray(modelValue.value)),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator')\n      }\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-selection-control-group', {\n        'v-selection-control-group--inline': props.inline\n      }],\n      \"role\": props.type === 'radio' ? 'radiogroup' : undefined\n    }, [slots.default?.()]));\n    return {};\n  }\n});\n//# sourceMappingURL=VSelectionControlGroup.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSelectionControl.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { useDensity } from \"../../composables/density.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, inject, nextTick, ref } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, pick, propsFactory, SUPPORTS_FOCUS_VISIBLE, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeSelectionControlProps = propsFactory({\n  label: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n  ...makeSelectionControlGroupProps()\n}, 'v-selection-control');\nexport function useSelectionControl(props) {\n  const group = inject(VSelectionControlGroupSymbol, undefined);\n  const {\n    densityClasses\n  } = useDensity(props);\n  const modelValue = useProxiedModel(props, 'modelValue');\n  const trueValue = computed(() => props.trueValue !== undefined ? props.trueValue : props.value !== undefined ? props.value : true);\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false);\n  const isMultiple = computed(() => !!props.multiple || props.multiple == null && Array.isArray(modelValue.value));\n  const model = computed({\n    get() {\n      const val = group ? group.modelValue.value : modelValue.value;\n      return isMultiple.value ? val.some(v => props.valueComparator(v, trueValue.value)) : props.valueComparator(val, trueValue.value);\n    },\n    set(val) {\n      if (props.readonly) return;\n      const currentValue = val ? trueValue.value : falseValue.value;\n      let newVal = currentValue;\n      if (isMultiple.value) {\n        newVal = val ? [...wrapInArray(modelValue.value), currentValue] : wrapInArray(modelValue.value).filter(item => !props.valueComparator(item, trueValue.value));\n      }\n      if (group) {\n        group.modelValue.value = newVal;\n      } else {\n        modelValue.value = newVal;\n      }\n    }\n  });\n  const {\n    textColorClasses,\n    textColorStyles\n  } = useTextColor(computed(() => {\n    return model.value && !props.error && !props.disabled ? props.color : undefined;\n  }));\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon);\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    icon\n  };\n}\nexport const VSelectionControl = genericComponent()({\n  name: 'VSelectionControl',\n  directives: {\n    Ripple\n  },\n  inheritAttrs: false,\n  props: makeSelectionControlProps(),\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      trueValue\n    } = useSelectionControl(props);\n    const uid = getUid();\n    const id = computed(() => props.id || `input-${uid}`);\n    const isFocused = ref(false);\n    const isFocusVisible = ref(false);\n    const input = ref();\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value;\n      }\n    });\n    function onFocus(e) {\n      isFocused.value = true;\n      if (!SUPPORTS_FOCUS_VISIBLE || SUPPORTS_FOCUS_VISIBLE && e.target.matches(':focus-visible')) {\n        isFocusVisible.value = true;\n      }\n    }\n    function onBlur() {\n      isFocused.value = false;\n      isFocusVisible.value = false;\n    }\n    function onInput(e) {\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate());\n      }\n      model.value = e.target.checked;\n    }\n    useRender(() => {\n      const label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-selection-control', {\n          'v-selection-control--dirty': model.value,\n          'v-selection-control--disabled': props.disabled,\n          'v-selection-control--error': props.error,\n          'v-selection-control--focused': isFocused.value,\n          'v-selection-control--focus-visible': isFocusVisible.value,\n          'v-selection-control--inline': props.inline\n        }, densityClasses.value]\n      }, rootAttrs), [_createVNode(\"div\", {\n        \"class\": ['v-selection-control__wrapper', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, [slots.default?.(), _withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-selection-control__input']\n      }, [icon.value && _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": icon.value\n      }, null), _createVNode(\"input\", _mergeProps({\n        \"ref\": input,\n        \"checked\": model.value,\n        \"disabled\": props.disabled,\n        \"id\": id.value,\n        \"onBlur\": onBlur,\n        \"onFocus\": onFocus,\n        \"onInput\": onInput,\n        \"aria-disabled\": props.readonly,\n        \"type\": props.type,\n        \"value\": trueValue.value,\n        \"name\": props.name,\n        \"aria-checked\": props.type === 'checkbox' ? model.value : undefined\n      }, inputAttrs), null), slots.input?.({\n        model,\n        textColorClasses,\n        textColorStyles,\n        props: {\n          onFocus,\n          onBlur,\n          id: id.value\n        }\n      })]), [[_resolveDirective(\"ripple\"), props.ripple && [!props.disabled && !props.readonly, null, ['center', 'circle']]]])]), label && _createVNode(VLabel, {\n        \"for\": id.value,\n        \"clickable\": true\n      }, {\n        default: () => [label]\n      })]);\n    });\n    return {\n      isFocused,\n      input\n    };\n  }\n});\nexport function filterControlProps(props) {\n  return pick(props, Object.keys(VSelectionControl.props));\n}\n//# sourceMappingURL=VSelectionControl.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate'\n  },\n  ...makeSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn'\n  })\n}, 'v-checkbox-btn');\nexport const VCheckboxBtn = genericComponent()({\n  name: 'VCheckboxBtn',\n  props: makeVCheckboxBtnProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:indeterminate': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    function onChange(v) {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    const falseIcon = computed(() => {\n      return props.indeterminate ? props.indeterminateIcon : props.falseIcon;\n    });\n    const trueIcon = computed(() => {\n      return props.indeterminate ? props.indeterminateIcon : props.trueIcon;\n    });\n    useRender(() => _createVNode(VSelectionControl, _mergeProps(props, {\n      \"modelValue\": model.value,\n      \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n      \"class\": \"v-checkbox-btn\",\n      \"type\": \"checkbox\",\n      \"inline\": true,\n      \"falseIcon\": falseIcon.value,\n      \"trueIcon\": trueIcon.value,\n      \"aria-checked\": props.indeterminate ? 'mixed' : undefined\n    }), slots));\n    return {};\n  }\n});\nexport function filterCheckboxBtnProps(props) {\n  return pick(props, Object.keys(VCheckboxBtn.props));\n}\n//# sourceMappingURL=VCheckboxBtn.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VCheckbox.css\";\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { filterCheckboxBtnProps, makeVCheckboxBtnProps, VCheckboxBtn } from \"./VCheckboxBtn.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCheckbox = genericComponent()({\n  name: 'VCheckbox',\n  inheritAttrs: false,\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps()\n  },\n  emits: {\n    'update:focused': focused => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const uid = getUid();\n    const id = computed(() => props.id || `checkbox-${uid}`);\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [checkboxProps, _2] = filterCheckboxBtnProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": \"v-checkbox\"\n      }, inputAttrs, inputProps, {\n        \"id\": id.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly\n          } = _ref2;\n          return _createVNode(VCheckboxBtn, _mergeProps(checkboxProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value\n          }, controlAttrs, {\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }), slots);\n        }\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCheckbox.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAvatar.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'v-avatar');\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n  props: makeVAvatarProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-avatar', {\n        'v-avatar--start': props.start,\n        'v-avatar--end': props.end\n      }, themeClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n      \"style\": [colorStyles.value, sizeStyles.value]\n    }, {\n      default: () => [props.image ? _createVNode(VImg, {\n        \"key\": \"image\",\n        \"src\": props.image,\n        \"alt\": \"\",\n        \"cover\": true\n      }, null) : props.icon ? _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": props.icon\n      }, null) : slots.default?.(), genOverlays(false, 'v-avatar')]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VAvatar.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VChipGroup.css\";\n\n// Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { deepEqual, genericComponent, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\n\n// Types\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group');\nexport const VChipGroup = genericComponent()({\n  name: 'VChipGroup',\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function,\n      default: deepEqual\n    },\n    ...makeGroupProps({\n      selectedClass: 'v-chip--selected'\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'tonal'\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      isSelected,\n      select,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VChipGroupSymbol);\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-chip-group', {\n        'v-chip-group--column': props.column\n      }, themeClasses.value]\n    }, {\n      default: () => [slots.default?.({\n        isSelected,\n        select,\n        next,\n        prev,\n        selected: selected.value\n      })]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VChipGroup.mjs.map","import { resolveDirective as _resolveDirective, withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n// Styles\nimport \"./VChip.css\";\n\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VChipGroupSymbol } from \"../VChipGroup/VChipGroup.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { EventProp, genericComponent } from \"../../util/index.mjs\";\nimport { computed } from 'vue';\n\n// Types\n\nexport const VChip = genericComponent()({\n  name: 'VChip',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete'\n    },\n    label: Boolean,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    onClick: EventProp,\n    onClickOnce: EventProp,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'span'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'tonal'\n    })\n  },\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true,\n    'group:selected': val => true,\n    click: e => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isActive = useProxiedModel(props, 'modelValue');\n    const group = useGroupItem(props, VChipGroupSymbol, false);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (!!group || props.link || link.isClickable.value));\n    function onCloseClick(e) {\n      isActive.value = false;\n      emit('click:close', e);\n    }\n    function onClick(e) {\n      emit('click', e);\n      if (!isClickable.value) return;\n      link.navigate?.(e);\n      group?.toggle();\n    }\n    function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onClick(e);\n      }\n    }\n    return () => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar);\n      const hasClose = !!(slots.close || props.closable);\n      const hasFilter = !!(slots.filter || props.filter) && group;\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar);\n      const hasColor = !group || group.isSelected.value;\n      return isActive.value && _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-chip', {\n          'v-chip--disabled': props.disabled,\n          'v-chip--label': props.label,\n          'v-chip--link': isClickable.value,\n          'v-chip--filter': hasFilter,\n          'v-chip--pill': props.pill\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, group?.selectedClass.value],\n        \"style\": [hasColor ? colorStyles.value : undefined],\n        \"disabled\": props.disabled || undefined,\n        \"draggable\": props.draggable,\n        \"href\": link.href.value,\n        \"tabindex\": isClickable.value ? 0 : undefined,\n        \"onClick\": onClick,\n        \"onKeydown\": isClickable.value && !isLink.value && onKeyDown\n      }, {\n        default: () => [genOverlays(isClickable.value, 'v-chip'), hasFilter && _createVNode(VDefaultsProvider, {\n          \"key\": \"filter\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.filterIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(VExpandXTransition, null, {\n            default: () => [_withDirectives(_createVNode(\"div\", {\n              \"class\": \"v-chip__filter\"\n            }, [slots.filter ? slots.filter() : _createVNode(VIcon, null, null)]), [[_vShow, group.isSelected.value]])]\n          })]\n        }), hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VAvatar: {\n              image: props.prependAvatar\n            },\n            VIcon: {\n              icon: props.prependIcon\n            }\n          }\n        }, {\n          default: () => [slots.prepend ? _createVNode(\"div\", {\n            \"class\": \"v-chip__prepend\"\n          }, [slots.prepend()]) : props.prependAvatar ? _createVNode(VAvatar, {\n            \"start\": true\n          }, null) : props.prependIcon ? _createVNode(VIcon, {\n            \"start\": true\n          }, null) : undefined]\n        }), slots.default?.({\n          isSelected: group?.isSelected.value,\n          selectedClass: group?.selectedClass.value,\n          select: group?.select,\n          toggle: group?.toggle,\n          value: group?.value.value,\n          disabled: props.disabled\n        }) ?? props.text, hasAppend && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VAvatar: {\n              image: props.appendAvatar\n            },\n            VIcon: {\n              icon: props.appendIcon\n            }\n          }\n        }, {\n          default: () => [slots.append ? _createVNode(\"div\", {\n            \"class\": \"v-chip__append\"\n          }, [slots.append()]) : props.appendAvatar ? _createVNode(VAvatar, {\n            \"end\": true\n          }, null) : props.appendIcon ? _createVNode(VIcon, {\n            \"end\": true\n          }, null) : undefined]\n        }), hasClose && _createVNode(VDefaultsProvider, {\n          \"key\": \"close\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.closeIcon,\n              size: 'x-small'\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-chip__close\",\n            \"aria-label\": t(props.closeLabel),\n            \"onClick\": onCloseClick\n          }, [slots.close ? slots.close() : _createVNode(VIcon, null, null)])]\n        })]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple, null]]);\n    };\n  }\n});\n//# sourceMappingURL=VChip.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDivider.css\";\n\n// Composables\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n  props: {\n    color: String,\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n    ...makeThemeProps()\n  },\n  setup(props, _ref) {\n    let {\n      attrs\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    const dividerStyles = computed(() => {\n      const styles = {};\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length);\n      }\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness);\n      }\n      return styles;\n    });\n    useRender(() => _createVNode(\"hr\", {\n      \"class\": [{\n        'v-divider': true,\n        'v-divider--inset': props.inset,\n        'v-divider--vertical': props.vertical\n      }, themeClasses.value, textColorClasses.value],\n      \"style\": [dividerStyles.value, textColorStyles.value],\n      \"aria-orientation\": !attrs.role || attrs.role === 'separator' ? props.vertical ? 'vertical' : 'horizontal' : undefined,\n      \"role\": `${attrs.role || 'separator'}`\n    }, null));\n    return {};\n  }\n});\n//# sourceMappingURL=VDivider.mjs.map","// Utilities\nimport { computed, inject, provide, ref } from 'vue';\n\n// Types\n\n// Depth\nexport const DepthKey = Symbol.for('vuetify:depth');\nexport function useDepth(hasPrepend) {\n  const parent = inject(DepthKey, ref(-1));\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0));\n  provide(DepthKey, depth);\n  return depth;\n}\n\n// List\nexport const ListKey = Symbol.for('vuetify:list');\nexport function createList() {\n  const parent = inject(ListKey, {\n    hasPrepend: ref(false),\n    updateHasPrepend: () => null\n  });\n  const data = {\n    hasPrepend: ref(false),\n    updateHasPrepend: value => {\n      if (value) data.hasPrepend.value = value;\n    }\n  };\n  provide(ListKey, data);\n  return parent;\n}\nexport function useList() {\n  return inject(ListKey, null);\n}\n//# sourceMappingURL=list.mjs.map","export const singleOpenStrategy = {\n  open: _ref => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref;\n    if (value) {\n      const newOpened = new Set();\n      newOpened.add(id);\n      let parent = parents.get(id);\n      while (parent != null) {\n        newOpened.add(parent);\n        parent = parents.get(parent);\n      }\n      return newOpened;\n    } else {\n      opened.delete(id);\n      return opened;\n    }\n  },\n  select: () => null\n};\nexport const multipleOpenStrategy = {\n  open: _ref2 => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref2;\n    if (value) {\n      let parent = parents.get(id);\n      opened.add(id);\n      while (parent != null && parent !== id) {\n        opened.add(parent);\n        parent = parents.get(parent);\n      }\n      return opened;\n    } else {\n      opened.delete(id);\n    }\n    return opened;\n  },\n  select: () => null\n};\nexport const listOpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: _ref3 => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref3;\n    if (!value) return opened;\n    const path = [];\n    let parent = parents.get(id);\n    while (parent != null) {\n      path.push(parent);\n      parent = parents.get(parent);\n    }\n    return new Set(path);\n  }\n};\n//# sourceMappingURL=openStrategies.mjs.map","/* eslint-disable sonarjs/no-identical-functions */\nimport { toRaw } from 'vue';\nexport const independentSelectStrategy = mandatory => {\n  const strategy = {\n    select: _ref => {\n      let {\n        id,\n        value,\n        selected\n      } = _ref;\n      id = toRaw(id);\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries()).reduce((arr, _ref2) => {\n          let [key, value] = _ref2;\n          return value === 'on' ? [...arr, key] : arr;\n        }, []);\n        if (on.length === 1 && on[0] === id) return selected;\n      }\n      selected.set(id, value ? 'on' : 'off');\n      return selected;\n    },\n    in: (v, children, parents) => {\n      let map = new Map();\n      for (const id of v || []) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents\n        });\n      }\n      return map;\n    },\n    out: v => {\n      const arr = [];\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key);\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};\nexport const independentSingleSelectStrategy = mandatory => {\n  const parentStrategy = independentSelectStrategy(mandatory);\n  const strategy = {\n    select: _ref3 => {\n      let {\n        selected,\n        id,\n        ...rest\n      } = _ref3;\n      id = toRaw(id);\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)]]) : new Map();\n      return parentStrategy.select({\n        ...rest,\n        id,\n        selected: singleSelected\n      });\n    },\n    in: (v, children, parents) => {\n      let map = new Map();\n      if (v?.length) {\n        map = parentStrategy.in(v.slice(0, 1), children, parents);\n      }\n      return map;\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents);\n    }\n  };\n  return strategy;\n};\nexport const leafSelectStrategy = mandatory => {\n  const parentStrategy = independentSelectStrategy(mandatory);\n  const strategy = {\n    select: _ref4 => {\n      let {\n        id,\n        selected,\n        children,\n        ...rest\n      } = _ref4;\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select({\n        id,\n        selected,\n        children,\n        ...rest\n      });\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport const leafSingleSelectStrategy = mandatory => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory);\n  const strategy = {\n    select: _ref5 => {\n      let {\n        id,\n        selected,\n        children,\n        ...rest\n      } = _ref5;\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select({\n        id,\n        selected,\n        children,\n        ...rest\n      });\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport const classicSelectStrategy = mandatory => {\n  const strategy = {\n    select: _ref6 => {\n      let {\n        id,\n        value,\n        selected,\n        children,\n        parents\n      } = _ref6;\n      id = toRaw(id);\n      const original = new Map(selected);\n      const items = [id];\n      while (items.length) {\n        const item = items.shift();\n        selected.set(item, value ? 'on' : 'off');\n        if (children.has(item)) {\n          items.push(...children.get(item));\n        }\n      }\n      let parent = parents.get(id);\n      while (parent) {\n        const childrenIds = children.get(parent);\n        const everySelected = childrenIds.every(cid => selected.get(cid) === 'on');\n        const noneSelected = childrenIds.every(cid => !selected.has(cid) || selected.get(cid) === 'off');\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate');\n        parent = parents.get(parent);\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries()).reduce((arr, _ref7) => {\n          let [key, value] = _ref7;\n          return value === 'on' ? [...arr, key] : arr;\n        }, []);\n        if (on.length === 0) return original;\n      }\n      return selected;\n    },\n    in: (v, children, parents) => {\n      let map = new Map();\n      for (const id of v || []) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents\n        });\n      }\n      return map;\n    },\n    out: (v, children) => {\n      const arr = [];\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key);\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};\n//# sourceMappingURL=selectStrategies.mjs.map","import { useProxiedModel } from \"../proxiedModel.mjs\";\nimport { getCurrentInstance, getUid, propsFactory } from \"../../util/index.mjs\";\nimport { computed, inject, onBeforeUnmount, provide, ref, toRaw } from 'vue';\nimport { listOpenStrategy, multipleOpenStrategy, singleOpenStrategy } from \"./openStrategies.mjs\";\nimport { classicSelectStrategy, independentSelectStrategy, independentSingleSelectStrategy, leafSelectStrategy, leafSingleSelectStrategy } from \"./selectStrategies.mjs\"; // Types\nexport const VNestedSymbol = Symbol.for('vuetify:nested');\nexport const emptyNested = {\n  id: ref(),\n  root: {\n    register: () => null,\n    unregister: () => null,\n    parents: ref(new Map()),\n    children: ref(new Map()),\n    open: () => null,\n    openOnSelect: () => null,\n    select: () => null,\n    opened: ref(new Set()),\n    selected: ref(new Map()),\n    selectedValues: ref([])\n  }\n};\nexport const makeNestedProps = propsFactory({\n  selectStrategy: [String, Function],\n  openStrategy: [String, Object],\n  opened: Array,\n  selected: Array,\n  mandatory: Boolean\n}, 'nested');\nexport const useNested = props => {\n  let isUnmounted = false;\n  const children = ref(new Map());\n  const parents = ref(new Map());\n  const opened = useProxiedModel(props, 'opened', props.opened, v => new Set(v), v => [...v.values()]);\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy;\n    switch (props.selectStrategy) {\n      case 'single-leaf':\n        return leafSingleSelectStrategy(props.mandatory);\n      case 'leaf':\n        return leafSelectStrategy(props.mandatory);\n      case 'independent':\n        return independentSelectStrategy(props.mandatory);\n      case 'single-independent':\n        return independentSingleSelectStrategy(props.mandatory);\n      case 'classic':\n      default:\n        return classicSelectStrategy(props.mandatory);\n    }\n  });\n  const openStrategy = computed(() => {\n    if (typeof props.openStrategy === 'object') return props.openStrategy;\n    switch (props.openStrategy) {\n      case 'list':\n        return listOpenStrategy;\n      case 'single':\n        return singleOpenStrategy;\n      case 'multiple':\n      default:\n        return multipleOpenStrategy;\n    }\n  });\n  const selected = useProxiedModel(props, 'selected', props.selected, v => selectStrategy.value.in(v, children.value, parents.value), v => selectStrategy.value.out(v, children.value, parents.value));\n  onBeforeUnmount(() => {\n    isUnmounted = true;\n  });\n  function getPath(id) {\n    const path = [];\n    let parent = id;\n    while (parent != null) {\n      path.unshift(parent);\n      parent = parents.value.get(parent);\n    }\n    return path;\n  }\n  const vm = getCurrentInstance('nested');\n  const nested = {\n    id: ref(),\n    root: {\n      opened,\n      selected,\n      selectedValues: computed(() => {\n        const arr = [];\n        for (const [key, value] of selected.value.entries()) {\n          if (value === 'on') arr.push(key);\n        }\n        return arr;\n      }),\n      register: (id, parentId, isGroup) => {\n        parentId && id !== parentId && parents.value.set(id, parentId);\n        isGroup && children.value.set(id, []);\n        if (parentId != null) {\n          children.value.set(parentId, [...(children.value.get(parentId) || []), id]);\n        }\n      },\n      unregister: id => {\n        if (isUnmounted) return;\n        children.value.delete(id);\n        const parent = parents.value.get(id);\n        if (parent) {\n          const list = children.value.get(parent) ?? [];\n          children.value.set(parent, list.filter(child => child !== id));\n        }\n        parents.value.delete(id);\n        opened.value.delete(id);\n      },\n      open: (id, value, event) => {\n        vm.emit('click:open', {\n          id,\n          value,\n          path: getPath(id),\n          event\n        });\n        const newOpened = openStrategy.value.open({\n          id,\n          value,\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event\n        });\n        newOpened && (opened.value = newOpened);\n      },\n      openOnSelect: (id, value, event) => {\n        const newOpened = openStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event\n        });\n        newOpened && (opened.value = newOpened);\n      },\n      select: (id, value, event) => {\n        vm.emit('click:select', {\n          id,\n          value,\n          path: getPath(id),\n          event\n        });\n        const newSelected = selectStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          children: children.value,\n          parents: parents.value,\n          event\n        });\n        newSelected && (selected.value = newSelected);\n        nested.root.openOnSelect(id, value, event);\n      },\n      children,\n      parents\n    }\n  };\n  provide(VNestedSymbol, nested);\n  return nested.root;\n};\nexport const useNestedItem = (id, isGroup) => {\n  const parent = inject(VNestedSymbol, emptyNested);\n  const uidSymbol = Symbol(getUid());\n  const computedId = computed(() => id.value ?? uidSymbol);\n  const item = {\n    ...parent,\n    id: computedId,\n    open: (open, e) => parent.root.open(computedId.value, open, e),\n    openOnSelect: (open, e) => parent.root.openOnSelect(computedId.value, open, e),\n    isOpen: computed(() => parent.root.opened.value.has(computedId.value)),\n    parent: computed(() => parent.root.parents.value.get(computedId.value)),\n    select: (selected, e) => parent.root.select(computedId.value, selected, e),\n    isSelected: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'on'),\n    isIndeterminate: computed(() => parent.root.selected.value.get(computedId.value) === 'indeterminate'),\n    isLeaf: computed(() => !parent.root.children.value.get(computedId.value)),\n    isGroupActivator: parent.isGroupActivator\n  };\n  !parent.isGroupActivator && parent.root.register(computedId.value, parent.id.value, isGroup);\n  onBeforeUnmount(() => {\n    !parent.isGroupActivator && parent.root.unregister(computedId.value);\n  });\n  isGroup && provide(VNestedSymbol, item);\n  return item;\n};\nexport const useNestedGroupActivator = () => {\n  const parent = inject(VNestedSymbol, emptyNested);\n  provide(VNestedSymbol, {\n    ...parent,\n    isGroupActivator: true\n  });\n};\n//# sourceMappingURL=nested.mjs.map","import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\"; // Composables\nimport { useList } from \"./list.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useNestedGroupActivator, useNestedItem } from \"../../composables/nested/nested.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { defineComponent, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n  setup(_, _ref) {\n    let {\n      slots\n    } = _ref;\n    useNestedGroupActivator();\n    return () => slots.default?.();\n  }\n});\nexport const makeVListGroupProps = propsFactory({\n  activeColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  value: null,\n  ...makeTagProps()\n}, 'v-list-group');\nexport const VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: {\n    title: String,\n    ...makeVListGroupProps()\n  },\n  setup(props, _ref2) {\n    let {\n      slots\n    } = _ref2;\n    const {\n      isOpen,\n      open,\n      id: _id\n    } = useNestedItem(toRef(props, 'value'), true);\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`);\n    const list = useList();\n    function onClick(e) {\n      open(!isOpen.value, e);\n    }\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value\n    }));\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-list-group', {\n        'v-list-group--prepend': list?.hasPrepend.value,\n        'v-list-group--fluid': props.fluid,\n        'v-list-group--subgroup': props.subgroup,\n        'v-list-group--open': isOpen.value\n      }]\n    }, {\n      default: () => [slots.activator && _createVNode(VDefaultsProvider, {\n        \"defaults\": {\n          VListItem: {\n            active: isOpen.value,\n            activeColor: props.activeColor,\n            color: props.color,\n            prependIcon: props.prependIcon || props.subgroup && toggleIcon.value,\n            appendIcon: props.appendIcon || !props.subgroup && toggleIcon.value,\n            title: props.title,\n            value: props.value\n          }\n        }\n      }, {\n        default: () => [_createVNode(VListGroupActivator, null, {\n          default: () => [slots.activator({\n            props: activatorProps.value,\n            isOpen: isOpen.value\n          })]\n        })]\n      }), _createVNode(VExpandTransition, null, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-list-group__items\",\n          \"role\": \"group\",\n          \"aria-labelledby\": id.value\n        }, [slots.default?.()]), [[_vShow, isOpen.value]])]\n      })]\n    }));\n    return {};\n  }\n});\nexport function filterListGroupProps(props) {\n  return pick(props, Object.keys(VListGroup.props));\n}\n//# sourceMappingURL=VListGroup.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VListItemSubtitle = createSimpleFunctional('v-list-item-subtitle');\n//# sourceMappingURL=VListItemSubtitle.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VListItemTitle = createSimpleFunctional('v-list-item-title');\n//# sourceMappingURL=VListItemTitle.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VListItem.css\";\n\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useList } from \"./list.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\"; // Utilities\nimport { computed, watch } from 'vue';\nimport { EventProp, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined\n    },\n    activeClass: String,\n    activeColor: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    lines: String,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    subtitle: [String, Number, Boolean],\n    title: [String, Number, Boolean],\n    value: null,\n    onClick: EventProp,\n    onClickOnce: EventProp,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n  emits: {\n    click: e => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      emit\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => props.value ?? link.href.value);\n    const {\n      select,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent,\n      openOnSelect\n    } = useNestedItem(id, false);\n    const list = useList();\n    const isActive = computed(() => props.active !== false && (props.active || link.isActive?.value || isSelected.value));\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value || props.value != null && !!list));\n    const roundedProps = computed(() => props.rounded || props.nav);\n    const variantProps = computed(() => ({\n      color: isActive.value ? props.activeColor ?? props.color : props.color,\n      variant: props.variant\n    }));\n    watch(() => link.isActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true);\n      }\n      if (val) {\n        openOnSelect(val);\n      }\n    }, {\n      immediate: true\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(roundedProps);\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined);\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value\n    }));\n    function onClick(e) {\n      emit('click', e);\n      if (isGroupActivator || !isClickable.value) return;\n      link.navigate?.(e);\n      props.value != null && select(!isSelected.value, e);\n    }\n    function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onClick(e);\n      }\n    }\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasColor = !list || isSelected.value || isActive.value;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      list?.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable.value,\n          'v-list-item--nav': props.nav,\n          'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n          [`${props.activeClass}`]: props.activeClass && isActive.value\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable.value ? 0 : undefined,\n        \"onClick\": onClick,\n        \"onKeydown\": isClickable.value && !isLink.value && onKeyDown\n      }, {\n        default: () => [genOverlays(isClickable.value || isActive.value, 'v-list-item'), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-list-item__prepend\"\n        }, [props.prependAvatar && _createVNode(VAvatar, {\n          \"key\": \"prepend-avatar\",\n          \"density\": props.density,\n          \"image\": props.prependAvatar\n        }, null), props.prependIcon && _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"density\": props.density,\n          \"icon\": props.prependIcon\n        }, null), slots.prepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VAvatar: {\n              density: props.density,\n              image: props.prependAvatar\n            },\n            VIcon: {\n              density: props.density,\n              icon: props.prependIcon\n            },\n            VListItemAction: {\n              start: true\n            }\n          }\n        }, {\n          default: () => [slots.prepend(slotProps.value)]\n        })]), _createVNode(\"div\", {\n          \"class\": \"v-list-item__content\",\n          \"data-no-activator\": \"\"\n        }, [hasTitle && _createVNode(VListItemTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title?.({\n            title: props.title\n          }) ?? props.title]\n        }), hasSubtitle && _createVNode(VListItemSubtitle, {\n          \"key\": \"subtitle\"\n        }, {\n          default: () => [slots.subtitle?.({\n            subtitle: props.subtitle\n          }) ?? props.subtitle]\n        }), slots.default?.(slotProps.value)]), hasAppend && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-list-item__append\"\n        }, [slots.append && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VAvatar: {\n              density: props.density,\n              image: props.appendAvatar\n            },\n            VIcon: {\n              density: props.density,\n              icon: props.appendIcon\n            },\n            VListItemAction: {\n              end: true\n            }\n          }\n        }, {\n          default: () => [slots.append(slotProps.value)]\n        }), props.appendIcon && _createVNode(VIcon, {\n          \"key\": \"append-icon\",\n          \"density\": props.density,\n          \"icon\": props.appendIcon\n        }, null), props.appendAvatar && _createVNode(VAvatar, {\n          \"key\": \"append-avatar\",\n          \"density\": props.density,\n          \"image\": props.appendAvatar\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VListItem.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n  props: {\n    color: String,\n    inset: Boolean,\n    sticky: Boolean,\n    title: String,\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    useRender(() => {\n      const hasText = !!(slots.default || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-subheader', {\n          'v-list-subheader--inset': props.inset,\n          'v-list-subheader--sticky': props.sticky\n        }, textColorClasses.value],\n        \"style\": {\n          textColorStyles\n        }\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-list-subheader__text\"\n        }, [slots.default?.() ?? props.title])]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VListSubheader.mjs.map","import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { filterListGroupProps, VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\"; // Utilities\nimport { createList } from \"./list.mjs\";\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: {\n    items: Array\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    createList();\n    return () => slots.default?.() ?? props.items?.map(_ref2 => {\n      let {\n        children,\n        props: itemProps,\n        type,\n        raw: item\n      } = _ref2;\n      if (type === 'divider') {\n        return slots.divider?.({\n          props: itemProps\n        }) ?? _createVNode(VDivider, itemProps, null);\n      }\n      if (type === 'subheader') {\n        return slots.subheader?.({\n          props: itemProps\n        }) ?? _createVNode(VListSubheader, itemProps, {\n          default: slots.subheader\n        });\n      }\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? slotProps => slots.subtitle?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        prepend: slots.prepend ? slotProps => slots.prepend?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        append: slots.append ? slotProps => slots.append?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        default: slots.default ? slotProps => slots.default?.({\n          ...slotProps,\n          item\n        }) : undefined,\n        title: slots.title ? slotProps => slots.title?.({\n          ...slotProps,\n          item\n        }) : undefined\n      };\n      const [listGroupProps, _1] = filterListGroupProps(itemProps);\n      return children ? _createVNode(VListGroup, _mergeProps({\n        \"value\": itemProps?.value\n      }, listGroupProps), {\n        activator: _ref3 => {\n          let {\n            props: activatorProps\n          } = _ref3;\n          return slots.header ? slots.header({\n            props: {\n              ...itemProps,\n              ...activatorProps\n            }\n          }) : _createVNode(VListItem, _mergeProps(itemProps, activatorProps), slotsWithItem);\n        },\n        default: () => _createVNode(VListChildren, {\n          \"items\": children\n        }, slots)\n      }) : slots.item ? slots.item(itemProps) : _createVNode(VListItem, itemProps, slotsWithItem);\n    });\n  }\n});\n//# sourceMappingURL=VListChildren.mjs.map","// Utilities\nimport { computed } from 'vue';\nimport { getPropertyFromItem, pick, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array,\n    default: () => []\n  },\n  itemTitle: {\n    type: [String, Array, Function],\n    default: 'title'\n  },\n  itemValue: {\n    type: [String, Array, Function],\n    default: 'value'\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function],\n    default: 'children'\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function],\n    default: 'props'\n  },\n  returnObject: Boolean\n}, 'item');\nexport function transformItem(props, item) {\n  const title = getPropertyFromItem(item, props.itemTitle, item);\n  const value = props.returnObject ? item : getPropertyFromItem(item, props.itemValue, title);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? typeof item === 'object' && item != null && !Array.isArray(item) ? 'children' in item ? pick(item, ['children'])[1] : item : undefined : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nexport function transformItems(props, items) {\n  const array = [];\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n  return array;\n}\nexport function useItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  function transformIn(value) {\n    return value.map(item => transformItem(props, item));\n  }\n  function transformOut(value) {\n    return value.map(_ref => {\n      let {\n        props\n      } = _ref;\n      return props.value;\n    });\n  }\n  return {\n    items,\n    transformIn,\n    transformOut\n  };\n}\n//# sourceMappingURL=items.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VList.css\";\n\n// Components\nimport { VListChildren } from \"./VListChildren.mjs\"; // Composables\nimport { createList } from \"./list.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeItemsProps } from \"../../composables/items.mjs\";\nimport { makeNestedProps, useNested } from \"../../composables/nested/nested.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, ref, toRef } from 'vue';\nimport { genericComponent, getPropertyFromItem, pick, useRender } from \"../../util/index.mjs\"; // Types\nfunction isPrimitive(value) {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\n}\nfunction transformItem(props, item) {\n  const type = getPropertyFromItem(item, props.itemType, 'item');\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle);\n  const value = getPropertyFromItem(item, props.itemValue, undefined);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? pick(item, ['children'])[1] : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nfunction transformItems(props, items) {\n  const array = [];\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n  return array;\n}\nfunction useListItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  return {\n    items\n  };\n}\nexport const VList = genericComponent()({\n  name: 'VList',\n  props: {\n    activeColor: String,\n    activeClass: String,\n    bgColor: String,\n    disabled: Boolean,\n    lines: {\n      type: [Boolean, String],\n      default: 'one'\n    },\n    nav: Boolean,\n    ...makeNestedProps({\n      selectStrategy: 'single-leaf',\n      openStrategy: 'list'\n    }),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    itemType: {\n      type: String,\n      default: 'type'\n    },\n    ...makeItemsProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n  emits: {\n    'update:selected': val => true,\n    'update:opened': val => true,\n    'click:open': value => true,\n    'click:select': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      items\n    } = useListItems(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      open,\n      select\n    } = useNested(props);\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined);\n    const activeColor = toRef(props, 'activeColor');\n    const color = toRef(props, 'color');\n    createList();\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        color\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    const isFocused = ref(false);\n    const contentRef = ref();\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      isFocused.value = false;\n    }\n    function onFocus(e) {\n      if (!isFocused.value && !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget))) focus();\n    }\n    function onKeydown(e) {\n      if (!contentRef.value) return;\n      if (e.key === 'ArrowDown') {\n        focus('next');\n      } else if (e.key === 'ArrowUp') {\n        focus('prev');\n      } else if (e.key === 'Home') {\n        focus('first');\n      } else if (e.key === 'End') {\n        focus('last');\n      } else {\n        return;\n      }\n      e.preventDefault();\n    }\n    function focus(location) {\n      if (!contentRef.value) return;\n      const focusable = [...contentRef.value.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')].filter(el => !el.hasAttribute('disabled'));\n      const idx = focusable.indexOf(document.activeElement);\n      if (!location) {\n        if (!contentRef.value.contains(document.activeElement)) {\n          focusable[0]?.focus();\n        }\n      } else if (location === 'first') {\n        focusable[0]?.focus();\n      } else if (location === 'last') {\n        focusable.at(-1)?.focus();\n      } else {\n        let el;\n        let idxx = idx;\n        const inc = location === 'next' ? 1 : -1;\n        do {\n          idxx += inc;\n          el = focusable[idxx];\n        } while ((!el || el.offsetParent == null) && idxx < focusable.length && idxx >= 0);\n        if (el) el.focus();else focus(location === 'next' ? 'first' : 'last');\n      }\n    }\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"ref\": contentRef,\n        \"class\": ['v-list', {\n          'v-list--disabled': props.disabled,\n          'v-list--nav': props.nav\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value],\n        \"role\": \"listbox\",\n        \"aria-activedescendant\": undefined,\n        \"onFocusin\": onFocusin,\n        \"onFocusout\": onFocusout,\n        \"onFocus\": onFocus,\n        \"onKeydown\": onKeydown\n      }, {\n        default: () => [_createVNode(VListChildren, {\n          \"items\": items.value\n        }, slots)]\n      });\n    });\n    return {\n      open,\n      select,\n      focus\n    };\n  }\n});\n//# sourceMappingURL=VList.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VListItemAction = genericComponent()({\n  name: 'VListItemAction',\n  props: {\n    start: Boolean,\n    end: Boolean,\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-list-item-action', {\n        'v-list-item-action--start': props.start,\n        'v-list-item-action--end': props.end\n      }]\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VListItemAction.mjs.map","// Utilities\nimport { IN_BROWSER, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeDelayProps = propsFactory({\n  closeDelay: [Number, String],\n  openDelay: [Number, String]\n}, 'delay');\nexport function useDelay(props, cb) {\n  const delays = {};\n  const runDelayFactory = prop => () => {\n    // istanbul ignore next\n    if (!IN_BROWSER) return Promise.resolve(true);\n    const active = prop === 'openDelay';\n    delays.closeDelay && window.clearTimeout(delays.closeDelay);\n    delete delays.closeDelay;\n    delays.openDelay && window.clearTimeout(delays.openDelay);\n    delete delays.openDelay;\n    return new Promise(resolve => {\n      const delay = parseInt(props[prop] ?? 0, 10);\n      delays[prop] = window.setTimeout(() => {\n        cb?.(active);\n        resolve(active);\n      }, delay);\n    });\n  };\n  return {\n    runCloseDelay: runDelayFactory('closeDelay'),\n    runOpenDelay: runDelayFactory('openDelay')\n  };\n}\n//# sourceMappingURL=delay.mjs.map","export const VMenuSymbol = Symbol.for('vuetify:v-menu');\n//# sourceMappingURL=shared.mjs.map","// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { VMenuSymbol } from \"../VMenu/shared.mjs\"; // Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from \"../../util/index.mjs\";\nimport { computed, effectScope, inject, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue';\n\n// Types\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: undefined\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n}, 'v-overlay-activator');\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop\n  } = _ref;\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  let firstEnter = true;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, value => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      if (isActive.value !== value) {\n        firstEnter = true;\n      }\n      isActive.value = value;\n    }\n  });\n  const availableEvents = {\n    click: e => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      isActive.value = !isActive.value;\n    },\n    mouseenter: e => {\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    mouseleave: e => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    focus: e => {\n      if (SUPPORTS_FOCUS_VISIBLE && !e.target.matches(':focus-visible')) return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    blur: e => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n    if (openOnClick.value) {\n      events.click = availableEvents.click;\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter;\n      events.mouseleave = availableEvents.mouseleave;\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus;\n      events.blur = availableEvents.blur;\n    }\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n      events.mouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n      events.click = () => {\n        isActive.value = false;\n        menu?.closeParents();\n      };\n    }\n    return events;\n  });\n  const scrimEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true;\n          firstEnter = false;\n          runOpenDelay();\n        }\n      };\n      events.mouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    return events;\n  });\n  watch(isTop, val => {\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))) {\n      isActive.value = false;\n    }\n  });\n  const activatorRef = ref();\n  watchEffect(() => {\n    if (!activatorRef.value) return;\n    nextTick(() => {\n      const activator = activatorRef.value;\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator;\n    });\n  });\n  const vm = getCurrentInstance('useActivator');\n  let scope;\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: 'post',\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    activatorEvents,\n    contentEvents,\n    scrimEvents\n  };\n}\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref3 => {\n      let [name, cb] = _ref3;\n      el.addEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k);\n      } else {\n        el.setAttribute(k, _props[k]);\n      }\n    });\n  }\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref4 => {\n      let [name, cb] = _ref4;\n      el.removeEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k);\n    });\n  }\n  function getActivator() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\n    let activator;\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode;\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode;\n        }\n        activator = el;\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector);\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el;\n      } else {\n        // HTMLElement | Element\n        activator = selector;\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null;\n    return activatorEl.value;\n  }\n}\n//# sourceMappingURL=useActivator.mjs.map","// Utilities\nimport { computed, ref, watch } from 'vue';\n\n// Types\nimport { propsFactory } from \"../util/index.mjs\";\nexport const makeLazyProps = propsFactory({\n  eager: Boolean\n}, 'lazy');\nexport function useLazy(props, active) {\n  const isBooted = ref(false);\n  const hasContent = computed(() => isBooted.value || props.eager || active.value);\n  watch(active, () => isBooted.value = true);\n  function onAfterLeave() {\n    if (!props.eager) isBooted.value = false;\n  }\n  return {\n    isBooted,\n    hasContent,\n    onAfterLeave\n  };\n}\n//# sourceMappingURL=lazy.mjs.map","/** Convert a point in local space to viewport space */\nexport function elementToViewport(point, offset) {\n  return {\n    x: point.x + offset.x,\n    y: point.y + offset.y\n  };\n}\n\n/** Convert a point in viewport space to local space */\nexport function viewportToElement(point, offset) {\n  return {\n    x: point.x - offset.x,\n    y: point.y - offset.y\n  };\n}\n\n/** Get the difference between two points */\nexport function getOffset(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\n/** Convert an anchor object to a point in local space */\nexport function anchorToPoint(anchor, box) {\n  if (anchor.side === 'top' || anchor.side === 'bottom') {\n    const {\n      side,\n      align\n    } = anchor;\n    const x = align === 'left' ? 0 : align === 'center' ? box.width / 2 : align === 'right' ? box.width : align;\n    const y = side === 'top' ? 0 : side === 'bottom' ? box.height : side;\n    return elementToViewport({\n      x,\n      y\n    }, box);\n  } else if (anchor.side === 'left' || anchor.side === 'right') {\n    const {\n      side,\n      align\n    } = anchor;\n    const x = side === 'left' ? 0 : side === 'right' ? box.width : side;\n    const y = align === 'top' ? 0 : align === 'center' ? box.height / 2 : align === 'bottom' ? box.height : align;\n    return elementToViewport({\n      x,\n      y\n    }, box);\n  }\n  return elementToViewport({\n    x: box.width / 2,\n    y: box.height / 2\n  }, box);\n}\n//# sourceMappingURL=point.mjs.map","// Utilities\nimport { computed, nextTick, onScopeDispose, ref, watch } from 'vue';\nimport { clamp, consoleError, convertToUnit, destructComputed, flipAlign, flipCorner, flipSide, getAxis, getScrollParents, IN_BROWSER, isFixedPosition, nullifyTransforms, parseAnchor, propsFactory } from \"../../util/index.mjs\";\nimport { Box, getOverflow } from \"../../util/box.mjs\";\nimport { anchorToPoint, getOffset } from \"./util/point.mjs\"; // Composables\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Types\nconst locationStrategies = {\n  static: staticLocationStrategy,\n  // specific viewport position, usually centered\n  connected: connectedLocationStrategy // connected to a certain element\n};\n\nexport const makeLocationStrategyProps = propsFactory({\n  locationStrategy: {\n    type: [String, Function],\n    default: 'static',\n    validator: val => typeof val === 'function' || val in locationStrategies\n  },\n  location: {\n    type: String,\n    default: 'bottom'\n  },\n  origin: {\n    type: String,\n    default: 'auto'\n  },\n  offset: [Number, String, Array]\n}, 'v-overlay-location-strategies');\nexport function useLocationStrategies(props, data) {\n  const contentStyles = ref({});\n  const updateLocation = ref();\n  if (IN_BROWSER) {\n    useToggleScope(() => !!(data.isActive.value && props.locationStrategy), reset => {\n      watch(() => props.locationStrategy, reset);\n      onScopeDispose(() => {\n        updateLocation.value = undefined;\n      });\n      if (typeof props.locationStrategy === 'function') {\n        updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation;\n      } else {\n        updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation;\n      }\n    });\n    window.addEventListener('resize', onResize, {\n      passive: true\n    });\n    onScopeDispose(() => {\n      window.removeEventListener('resize', onResize);\n      updateLocation.value = undefined;\n    });\n  }\n  function onResize(e) {\n    updateLocation.value?.(e);\n  }\n  return {\n    contentStyles,\n    updateLocation\n  };\n}\nfunction staticLocationStrategy() {\n  // TODO\n}\n\n/** Get size of element ignoring max-width/max-height */\nfunction getIntrinsicSize(el) {\n  // const scrollables = new Map<Element, [number, number]>()\n  // el.querySelectorAll('*').forEach(el => {\n  //   const x = el.scrollLeft\n  //   const y = el.scrollTop\n  //   if (x || y) {\n  //     scrollables.set(el, [x, y])\n  //   }\n  // })\n\n  // const initialMaxWidth = el.style.maxWidth\n  // const initialMaxHeight = el.style.maxHeight\n  // el.style.removeProperty('max-width')\n  // el.style.removeProperty('max-height')\n\n  /* eslint-disable-next-line sonarjs/prefer-immediate-return */\n  const contentBox = nullifyTransforms(el);\n  contentBox.x -= parseFloat(el.style.left || 0);\n  contentBox.y -= parseFloat(el.style.top || 0);\n\n  // el.style.maxWidth = initialMaxWidth\n  // el.style.maxHeight = initialMaxHeight\n  // scrollables.forEach((position, el) => {\n  //   el.scrollTo(...position)\n  // })\n\n  return contentBox;\n}\nfunction connectedLocationStrategy(data, props, contentStyles) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value);\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed'\n    });\n  }\n  const {\n    preferredAnchor,\n    preferredOrigin\n  } = destructComputed(() => {\n    const parsedAnchor = parseAnchor(props.location, data.isRtl.value);\n    const parsedOrigin = props.origin === 'overlap' ? parsedAnchor : props.origin === 'auto' ? flipSide(parsedAnchor) : parseAnchor(props.origin, data.isRtl.value);\n\n    // Some combinations of props may produce an invalid origin\n    if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === flipAlign(parsedOrigin).align) {\n      return {\n        preferredAnchor: flipCorner(parsedAnchor),\n        preferredOrigin: flipCorner(parsedOrigin)\n      };\n    } else {\n      return {\n        preferredAnchor: parsedAnchor,\n        preferredOrigin: parsedOrigin\n      };\n    }\n  });\n  const [minWidth, minHeight, maxWidth, maxHeight] = ['minWidth', 'minHeight', 'maxWidth', 'maxHeight'].map(key => {\n    return computed(() => {\n      const val = parseFloat(props[key]);\n      return isNaN(val) ? Infinity : val;\n    });\n  });\n  const offset = computed(() => {\n    if (Array.isArray(props.offset)) {\n      return props.offset;\n    }\n    if (typeof props.offset === 'string') {\n      const offset = props.offset.split(' ').map(parseFloat);\n      if (offset.length < 2) offset.push(0);\n      return offset;\n    }\n    return typeof props.offset === 'number' ? [props.offset, 0] : [0, 0];\n  });\n  let observe = false;\n  const observer = new ResizeObserver(() => {\n    if (observe) updateLocation();\n  });\n  watch([data.activatorEl, data.contentEl], (_ref, _ref2) => {\n    let [newActivatorEl, newContentEl] = _ref;\n    let [oldActivatorEl, oldContentEl] = _ref2;\n    if (oldActivatorEl) observer.unobserve(oldActivatorEl);\n    if (newActivatorEl) observer.observe(newActivatorEl);\n    if (oldContentEl) observer.unobserve(oldContentEl);\n    if (newContentEl) observer.observe(newContentEl);\n  }, {\n    immediate: true\n  });\n  onScopeDispose(() => {\n    observer.disconnect();\n  });\n\n  // eslint-disable-next-line max-statements\n  function updateLocation() {\n    observe = false;\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true);\n    });\n    if (!data.activatorEl.value || !data.contentEl.value) return;\n    const targetBox = data.activatorEl.value.getBoundingClientRect();\n    const contentBox = getIntrinsicSize(data.contentEl.value);\n    const scrollParents = getScrollParents(data.contentEl.value);\n    const viewportMargin = 12;\n    if (!scrollParents.length) {\n      scrollParents.push(document.documentElement);\n      if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {\n        contentBox.x += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-x') || 0);\n        contentBox.y += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-y') || 0);\n      }\n    }\n    const viewport = scrollParents.reduce((box, el) => {\n      const rect = el.getBoundingClientRect();\n      const scrollBox = new Box({\n        x: el === document.documentElement ? 0 : rect.x,\n        y: el === document.documentElement ? 0 : rect.y,\n        width: el.clientWidth,\n        height: el.clientHeight\n      });\n      if (box) {\n        return new Box({\n          x: Math.max(box.left, scrollBox.left),\n          y: Math.max(box.top, scrollBox.top),\n          width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),\n          height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top)\n        });\n      }\n      return scrollBox;\n    }, undefined);\n    viewport.x += viewportMargin;\n    viewport.y += viewportMargin;\n    viewport.width -= viewportMargin * 2;\n    viewport.height -= viewportMargin * 2;\n    let placement = {\n      anchor: preferredAnchor.value,\n      origin: preferredOrigin.value\n    };\n    function checkOverflow(_placement) {\n      const box = new Box(contentBox);\n      const targetPoint = anchorToPoint(_placement.anchor, targetBox);\n      const contentPoint = anchorToPoint(_placement.origin, box);\n      let {\n        x,\n        y\n      } = getOffset(targetPoint, contentPoint);\n      switch (_placement.anchor.side) {\n        case 'top':\n          y -= offset.value[0];\n          break;\n        case 'bottom':\n          y += offset.value[0];\n          break;\n        case 'left':\n          x -= offset.value[0];\n          break;\n        case 'right':\n          x += offset.value[0];\n          break;\n      }\n      switch (_placement.anchor.align) {\n        case 'top':\n          y -= offset.value[1];\n          break;\n        case 'bottom':\n          y += offset.value[1];\n          break;\n        case 'left':\n          x -= offset.value[1];\n          break;\n        case 'right':\n          x += offset.value[1];\n          break;\n      }\n      box.x += x;\n      box.y += y;\n      box.width = Math.min(box.width, maxWidth.value);\n      box.height = Math.min(box.height, maxHeight.value);\n      const overflows = getOverflow(box, viewport);\n      return {\n        overflows,\n        x,\n        y\n      };\n    }\n    let x = 0;\n    let y = 0;\n    const available = {\n      x: 0,\n      y: 0\n    };\n    const flipped = {\n      x: false,\n      y: false\n    };\n    let resets = -1;\n    while (true) {\n      if (resets++ > 10) {\n        consoleError('Infinite loop detected in connectedLocationStrategy');\n        break;\n      }\n      const {\n        x: _x,\n        y: _y,\n        overflows\n      } = checkOverflow(placement);\n      x += _x;\n      y += _y;\n      contentBox.x += _x;\n      contentBox.y += _y;\n\n      // flip\n      {\n        const axis = getAxis(placement.anchor);\n        const hasOverflowX = overflows.x.before || overflows.x.after;\n        const hasOverflowY = overflows.y.before || overflows.y.after;\n        let reset = false;\n        ['x', 'y'].forEach(key => {\n          if (key === 'x' && hasOverflowX && !flipped.x || key === 'y' && hasOverflowY && !flipped.y) {\n            const newPlacement = {\n              anchor: {\n                ...placement.anchor\n              },\n              origin: {\n                ...placement.origin\n              }\n            };\n            const flip = key === 'x' ? axis === 'y' ? flipAlign : flipSide : axis === 'y' ? flipSide : flipAlign;\n            newPlacement.anchor = flip(newPlacement.anchor);\n            newPlacement.origin = flip(newPlacement.origin);\n            const {\n              overflows: newOverflows\n            } = checkOverflow(newPlacement);\n            if (newOverflows[key].before <= overflows[key].before && newOverflows[key].after <= overflows[key].after || newOverflows[key].before + newOverflows[key].after < (overflows[key].before + overflows[key].after) / 2) {\n              placement = newPlacement;\n              reset = flipped[key] = true;\n            }\n          }\n        });\n        if (reset) continue;\n      }\n\n      // shift\n      if (overflows.x.before) {\n        x += overflows.x.before;\n        contentBox.x += overflows.x.before;\n      }\n      if (overflows.x.after) {\n        x -= overflows.x.after;\n        contentBox.x -= overflows.x.after;\n      }\n      if (overflows.y.before) {\n        y += overflows.y.before;\n        contentBox.y += overflows.y.before;\n      }\n      if (overflows.y.after) {\n        y -= overflows.y.after;\n        contentBox.y -= overflows.y.after;\n      }\n\n      // size\n      {\n        const overflows = getOverflow(contentBox, viewport);\n        available.x = viewport.width - overflows.x.before - overflows.x.after;\n        available.y = viewport.height - overflows.y.before - overflows.y.after;\n        x += overflows.x.before;\n        contentBox.x += overflows.x.before;\n        y += overflows.y.before;\n        contentBox.y += overflows.y.before;\n      }\n      break;\n    }\n    const axis = getAxis(placement.anchor);\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': `${placement.anchor.side} ${placement.anchor.align}`,\n      transformOrigin: `${placement.origin.side} ${placement.origin.align}`,\n      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,\n      top: convertToUnit(pixelRound(y)),\n      left: convertToUnit(pixelRound(x)),\n      minWidth: convertToUnit(axis === 'y' ? Math.min(minWidth.value, targetBox.width) : minWidth.value),\n      maxWidth: convertToUnit(pixelCeil(clamp(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),\n      maxHeight: convertToUnit(pixelCeil(clamp(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value)))\n    });\n    return {\n      available,\n      contentBox\n    };\n  }\n  watch(() => [preferredAnchor.value, preferredOrigin.value, props.offset, props.minWidth, props.minHeight, props.maxWidth, props.maxHeight], () => updateLocation());\n  nextTick(() => {\n    const result = updateLocation();\n\n    // TODO: overflowing content should only require a single updateLocation call\n    // Icky hack to make sure the content is positioned consistently\n    if (!result) return;\n    const {\n      available,\n      contentBox\n    } = result;\n    if (contentBox.height > available.y) {\n      requestAnimationFrame(() => {\n        updateLocation();\n        requestAnimationFrame(() => {\n          updateLocation();\n        });\n      });\n    }\n  });\n  return {\n    updateLocation\n  };\n}\nfunction pixelRound(val) {\n  return Math.round(val * devicePixelRatio) / devicePixelRatio;\n}\nfunction pixelCeil(val) {\n  return Math.ceil(val * devicePixelRatio) / devicePixelRatio;\n}\n//# sourceMappingURL=locationStrategies.mjs.map","let clean = true;\nconst frames = [];\n\n/**\n * Schedule a task to run in an animation frame on its own\n * This is useful for heavy tasks that may cause jank if all ran together\n */\nexport function requestNewFrame(cb) {\n  if (!clean || frames.length) {\n    frames.push(cb);\n    run();\n  } else {\n    clean = false;\n    cb();\n    run();\n  }\n}\nlet raf = -1;\nfunction run() {\n  cancelAnimationFrame(raf);\n  raf = requestAnimationFrame(() => {\n    const frame = frames.shift();\n    if (frame) frame();\n    if (frames.length) run();else clean = true;\n  });\n}\n//# sourceMappingURL=requestNewFrame.mjs.map","// Utilities\nimport { convertToUnit, getScrollParents, hasScrollbar, IN_BROWSER, propsFactory } from \"../../util/index.mjs\";\nimport { effectScope, nextTick, onScopeDispose, watchEffect } from 'vue';\nimport { requestNewFrame } from \"./requestNewFrame.mjs\"; // Types\nconst scrollStrategies = {\n  none: null,\n  close: closeScrollStrategy,\n  block: blockScrollStrategy,\n  reposition: repositionScrollStrategy\n};\nexport const makeScrollStrategyProps = propsFactory({\n  scrollStrategy: {\n    type: [String, Function],\n    default: 'block',\n    validator: val => typeof val === 'function' || val in scrollStrategies\n  }\n}, 'v-overlay-scroll-strategies');\nexport function useScrollStrategies(props, data) {\n  if (!IN_BROWSER) return;\n  let scope;\n  watchEffect(async () => {\n    scope?.stop();\n    if (!(data.isActive.value && props.scrollStrategy)) return;\n    scope = effectScope();\n    await nextTick();\n    scope.active && scope.run(() => {\n      if (typeof props.scrollStrategy === 'function') {\n        props.scrollStrategy(data, props, scope);\n      } else {\n        scrollStrategies[props.scrollStrategy]?.(data, props, scope);\n      }\n    });\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n}\nfunction closeScrollStrategy(data) {\n  function onScroll(e) {\n    data.isActive.value = false;\n  }\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, onScroll);\n}\nfunction blockScrollStrategy(data, props) {\n  const offsetParent = data.root.value?.offsetParent;\n  const scrollElements = [...new Set([...getScrollParents(data.activatorEl.value, props.contained ? offsetParent : undefined), ...getScrollParents(data.contentEl.value, props.contained ? offsetParent : undefined)])].filter(el => !el.classList.contains('v-overlay-scroll-blocked'));\n  const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth;\n  const scrollableParent = (el => hasScrollbar(el) && el)(offsetParent || document.documentElement);\n  if (scrollableParent) {\n    data.root.value.classList.add('v-overlay--scroll-blocked');\n  }\n  scrollElements.forEach((el, i) => {\n    el.style.setProperty('--v-body-scroll-x', convertToUnit(-el.scrollLeft));\n    el.style.setProperty('--v-body-scroll-y', convertToUnit(-el.scrollTop));\n    el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth));\n    el.classList.add('v-overlay-scroll-blocked');\n  });\n  onScopeDispose(() => {\n    scrollElements.forEach((el, i) => {\n      const x = parseFloat(el.style.getPropertyValue('--v-body-scroll-x'));\n      const y = parseFloat(el.style.getPropertyValue('--v-body-scroll-y'));\n      el.style.removeProperty('--v-body-scroll-x');\n      el.style.removeProperty('--v-body-scroll-y');\n      el.style.removeProperty('--v-scrollbar-offset');\n      el.classList.remove('v-overlay-scroll-blocked');\n      el.scrollLeft = -x;\n      el.scrollTop = -y;\n    });\n    if (scrollableParent) {\n      data.root.value.classList.remove('v-overlay--scroll-blocked');\n    }\n  });\n}\nfunction repositionScrollStrategy(data, props, scope) {\n  let slow = false;\n  let raf = -1;\n  let ric = -1;\n  function update(e) {\n    requestNewFrame(() => {\n      const start = performance.now();\n      data.updateLocation.value?.(e);\n      const time = performance.now() - start;\n      slow = time / (1000 / 60) > 2;\n    });\n  }\n  ric = (typeof requestIdleCallback === 'undefined' ? cb => cb() : requestIdleCallback)(() => {\n    scope.run(() => {\n      bindScroll(data.activatorEl.value ?? data.contentEl.value, e => {\n        if (slow) {\n          // If the position calculation is slow,\n          // defer updates until scrolling is finished.\n          // Browsers usually fire one scroll event per frame so\n          // we just wait until we've got two frames without an event\n          cancelAnimationFrame(raf);\n          raf = requestAnimationFrame(() => {\n            raf = requestAnimationFrame(() => {\n              update(e);\n            });\n          });\n        } else {\n          update(e);\n        }\n      });\n    });\n  });\n  onScopeDispose(() => {\n    typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(ric);\n    cancelAnimationFrame(raf);\n  });\n}\n\n/** @private */\nfunction bindScroll(el, onScroll) {\n  const scrollElements = [document, ...getScrollParents(el)];\n  scrollElements.forEach(el => {\n    el.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n  });\n  onScopeDispose(() => {\n    scrollElements.forEach(el => {\n      el.removeEventListener('scroll', onScroll);\n    });\n  });\n}\n//# sourceMappingURL=scrollStrategies.mjs.map","// Utilities\nimport { onMounted, ref } from 'vue';\nimport { IN_BROWSER } from \"../util/index.mjs\";\nimport { useDisplay } from \"./display.mjs\";\nexport function useHydration() {\n  if (!IN_BROWSER) return ref(false);\n  const {\n    ssr\n  } = useDisplay();\n  if (ssr) {\n    const isMounted = ref(false);\n    onMounted(() => {\n      isMounted.value = true;\n    });\n    return isMounted;\n  } else {\n    return ref(true);\n  }\n}\n//# sourceMappingURL=hydration.mjs.map","import { getCurrentInstance } from \"../util/index.mjs\";\nexport function useScopeId() {\n  const vm = getCurrentInstance('useScopeId');\n  const scopeId = vm.vnode.scopeId;\n  return {\n    scopeId: scopeId ? {\n      [scopeId]: ''\n    } : undefined\n  };\n}\n//# sourceMappingURL=scopeId.mjs.map","import { useToggleScope } from \"./toggleScope.mjs\";\nimport { computed, inject, onScopeDispose, provide, reactive, readonly, ref, toRaw, watchEffect } from 'vue';\nimport { getCurrentInstance } from \"../util/index.mjs\"; // Types\nconst StackSymbol = Symbol.for('vuetify:stack');\nconst globalStack = reactive([]);\nexport function useStack(isActive, zIndex, disableGlobalStack) {\n  const vm = getCurrentInstance('useStack');\n  const createStackEntry = !disableGlobalStack;\n  const parent = inject(StackSymbol, undefined);\n  const stack = reactive({\n    activeChildren: new Set()\n  });\n  provide(StackSymbol, stack);\n  const _zIndex = ref(+zIndex.value);\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1];\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value;\n    if (createStackEntry) {\n      globalStack.push([vm.uid, _zIndex.value]);\n    }\n    parent?.activeChildren.add(vm.uid);\n    onScopeDispose(() => {\n      if (createStackEntry) {\n        const idx = toRaw(globalStack).findIndex(v => v[0] === vm.uid);\n        globalStack.splice(idx, 1);\n      }\n      parent?.activeChildren.delete(vm.uid);\n    });\n  });\n  const globalTop = ref(true);\n  if (createStackEntry) {\n    watchEffect(() => {\n      const _isTop = globalStack.at(-1)?.[0] === vm.uid;\n      setTimeout(() => globalTop.value = _isTop);\n    });\n  }\n  const localTop = computed(() => !stack.activeChildren.size);\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: computed(() => ({\n      zIndex: _zIndex.value\n    }))\n  };\n}\n//# sourceMappingURL=stack.mjs.map","// Utilities\nimport { computed, warn } from 'vue';\nimport { IN_BROWSER } from \"../util/index.mjs\"; // Types\nexport function useTeleport(target) {\n  const teleportTarget = computed(() => {\n    const _target = target.value;\n    if (_target === true || !IN_BROWSER) return undefined;\n    const targetElement = _target === false ? document.body : typeof _target === 'string' ? document.querySelector(_target) : _target;\n    if (targetElement == null) {\n      warn(`Unable to locate target ${_target}`);\n      return undefined;\n    }\n    let container = targetElement.querySelector(':scope > .v-overlay-container');\n    if (!container) {\n      container = document.createElement('div');\n      container.className = 'v-overlay-container';\n      targetElement.appendChild(container);\n    }\n    return container;\n  });\n  return {\n    teleportTarget\n  };\n}\n//# sourceMappingURL=teleport.mjs.map","import { attachedRoot } from \"../../util/index.mjs\";\nfunction defaultConditional() {\n  return true;\n}\nfunction checkEvent(e, el, binding) {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false;\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot && root.host === e.target) return false;\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (typeof binding.value === 'object' && binding.value.include || (() => []))();\n  // Add the root element for the component this directive was defined on\n  elements.push(el);\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target));\n}\nfunction checkIsActive(e, binding) {\n  const isActive = typeof binding.value === 'object' && binding.value.closeConditional || defaultConditional;\n  return isActive(e);\n}\nfunction directive(e, el, binding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler;\n  el._clickOutside.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e);\n  }, 0);\n}\nfunction handleShadow(el, callback) {\n  const root = attachedRoot(el);\n  callback(document);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root);\n  }\n}\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted(el, binding) {\n    const onClick = e => directive(e, el, binding);\n    const onMousedown = e => {\n      el._clickOutside.lastMousedownWasOutside = checkEvent(e, el, binding);\n    };\n    handleShadow(el, app => {\n      app.addEventListener('click', onClick, true);\n      app.addEventListener('mousedown', onMousedown, true);\n    });\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true\n      };\n    }\n    el._clickOutside[binding.instance.$.uid] = {\n      onClick,\n      onMousedown\n    };\n  },\n  unmounted(el, binding) {\n    if (!el._clickOutside) return;\n    handleShadow(el, app => {\n      if (!app || !el._clickOutside?.[binding.instance.$.uid]) return;\n      const {\n        onClick,\n        onMousedown\n      } = el._clickOutside[binding.instance.$.uid];\n      app.removeEventListener('click', onClick, true);\n      app.removeEventListener('mousedown', onMousedown, true);\n    });\n    delete el._clickOutside[binding.instance.$.uid];\n  }\n};\nexport default ClickOutside;\n//# sourceMappingURL=index.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, vShow as _vShow, Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VOverlay.css\";\n\n// Composables\nimport { makeActivatorProps, useActivator } from \"./useActivator.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\";\nimport { makeLocationStrategyProps, useLocationStrategies } from \"./locationStrategies.mjs\";\nimport { makeScrollStrategyProps, useScrollStrategies } from \"./scrollStrategies.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useBackButton, useRouter } from \"../../composables/router.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useHydration } from \"../../composables/hydration.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { useStack } from \"../../composables/stack.mjs\";\nimport { useTeleport } from \"../../composables/teleport.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Directives\nimport { ClickOutside } from \"../../directives/click-outside/index.mjs\"; // Utilities\nimport { animate, convertToUnit, genericComponent, getScrollParent, IN_BROWSER, pick, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\";\nimport { computed, mergeProps, ref, Teleport, toHandlers, toRef, Transition, watch } from 'vue';\n\n// Types\n\nfunction Scrim(props) {\n  const {\n    modelValue,\n    color,\n    ...rest\n  } = props;\n  return _createVNode(Transition, {\n    \"name\": \"fade-transition\",\n    \"appear\": true\n  }, {\n    default: () => [props.modelValue && _createVNode(\"div\", _mergeProps({\n      \"class\": ['v-overlay__scrim', props.color.backgroundColorClasses.value],\n      \"style\": props.color.backgroundColorStyles.value\n    }, rest), null)]\n  });\n}\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object],\n  closeOnBack: {\n    type: Boolean,\n    default: true\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [String, Boolean],\n    default: true\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000\n  },\n  ...makeActivatorProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps()\n}, 'v-overlay');\nexport const VOverlay = genericComponent()({\n  name: 'VOverlay',\n  directives: {\n    ClickOutside\n  },\n  inheritAttrs: false,\n  props: {\n    _disableGlobalStack: Boolean,\n    ...makeVOverlayProps()\n  },\n  emits: {\n    'click:outside': e => true,\n    'update:modelValue': value => true,\n    afterLeave: () => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v;\n      }\n    });\n    const {\n      teleportTarget\n    } = useTeleport(computed(() => props.attach || props.contained));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      rtlClasses,\n      isRtl\n    } = useRtl();\n    const {\n      hasContent,\n      onAfterLeave\n    } = useLazy(props, isActive);\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const {\n      globalTop,\n      localTop,\n      stackStyles\n    } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack);\n    const {\n      activatorEl,\n      activatorRef,\n      activatorEvents,\n      contentEvents,\n      scrimEvents\n    } = useActivator(props, {\n      isActive,\n      isTop: localTop\n    });\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const isMounted = useHydration();\n    const {\n      scopeId\n    } = useScopeId();\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false;\n    });\n    const root = ref();\n    const contentEl = ref();\n    const {\n      contentStyles,\n      updateLocation\n    } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      activatorEl,\n      isActive\n    });\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation\n    });\n    function onClickOutside(e) {\n      emit('click:outside', e);\n      if (!props.persistent) isActive.value = false;else animateClick();\n    }\n    function closeConditional() {\n      return isActive.value && globalTop.value;\n    }\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown);\n      } else {\n        window.removeEventListener('keydown', onKeydown);\n      }\n    }, {\n      immediate: true\n    });\n    function onKeydown(e) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false;\n        } else animateClick();\n      }\n    }\n    const router = useRouter();\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false);\n          if (!props.persistent) isActive.value = false;else animateClick();\n        } else {\n          next();\n        }\n      });\n    });\n    const top = ref();\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value);\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop;\n        }\n      }\n    });\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick() {\n      if (props.noClickAnimation) return;\n      contentEl.value && animate(contentEl.value, [{\n        transformOrigin: 'center'\n      }, {\n        transform: 'scale(1.03)'\n      }, {\n        transformOrigin: 'center'\n      }], {\n        duration: 150,\n        easing: standardEasing\n      });\n    }\n    useRender(() => _createVNode(_Fragment, null, [slots.activator?.({\n      isActive: isActive.value,\n      props: mergeProps({\n        ref: activatorRef\n      }, toHandlers(activatorEvents.value), props.activatorProps)\n    }), isMounted.value && _createVNode(Teleport, {\n      \"disabled\": !teleportTarget.value,\n      \"to\": teleportTarget.value\n    }, {\n      default: () => [hasContent.value && _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-overlay', {\n          'v-overlay--absolute': props.absolute || props.contained,\n          'v-overlay--active': isActive.value,\n          'v-overlay--contained': props.contained\n        }, themeClasses.value, rtlClasses.value],\n        \"style\": [stackStyles.value, {\n          top: convertToUnit(top.value)\n        }],\n        \"ref\": root\n      }, scopeId, attrs), [_createVNode(Scrim, _mergeProps({\n        \"color\": scrimColor,\n        \"modelValue\": isActive.value && !!props.scrim\n      }, toHandlers(scrimEvents.value)), null), _createVNode(MaybeTransition, {\n        \"appear\": true,\n        \"persisted\": true,\n        \"transition\": props.transition,\n        \"target\": activatorEl.value,\n        \"onAfterLeave\": () => {\n          onAfterLeave();\n          emit('afterLeave');\n        }\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", _mergeProps({\n          \"ref\": contentEl,\n          \"class\": ['v-overlay__content', props.contentClass],\n          \"style\": [dimensionStyles.value, contentStyles.value]\n        }, toHandlers(contentEvents.value), props.contentProps), [slots.default?.({\n          isActive\n        })]), [[_vShow, isActive.value], [_resolveDirective(\"click-outside\"), {\n          handler: onClickOutside,\n          closeConditional,\n          include: () => [activatorEl.value]\n        }]])]\n      })])]\n    })]));\n    return {\n      activatorEl,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation\n    };\n  }\n});\nexport function filterVOverlayProps(props) {\n  return pick(props, Object.keys(VOverlay.props));\n}\n//# sourceMappingURL=VOverlay.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMenu.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\"; // Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue';\nimport { genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VMenuSymbol } from \"./shared.mjs\"; // Types\nexport const VMenu = genericComponent()({\n  name: 'VMenu',\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected',\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition',\n      transition: {\n        component: VDialogTransition\n      }\n    }), ['absolute'])\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const uid = getUid();\n    const id = computed(() => props.id || `v-menu-${uid}`);\n    const overlay = ref();\n    const parent = inject(VMenuSymbol, null);\n    const openChildren = ref(0);\n    provide(VMenuSymbol, {\n      register() {\n        ++openChildren.value;\n      },\n      unregister() {\n        --openChildren.value;\n      },\n      closeParents() {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false;\n            parent?.closeParents();\n          }\n        }, 40);\n      }\n    });\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister();\n    });\n    function onClickOutside() {\n      parent?.closeParents();\n    }\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'menu',\n      'aria-expanded': String(isActive.value),\n      'aria-owns': id.value\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-menu']\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"absolute\": true,\n        \"activatorProps\": activatorProps.value,\n        \"onClick:outside\": onClickOutside\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({\n      id,\n      ΨopenChildren: openChildren\n    }, overlay);\n  }\n});\n//# sourceMappingURL=VMenu.mjs.map","import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VSelect.css\";\n\n// Components\nimport { filterVTextFieldProps, makeVTextFieldProps } from \"../VTextField/VTextField.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeItemsProps, useItems } from \"../../composables/items.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utility\nimport { computed, mergeProps, ref } from 'vue';\nimport { deepEqual, genericComponent, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  },\n  ...makeItemsProps({\n    itemChildren: false\n  })\n}, 'v-select');\nexport const VSelect = genericComponent()({\n  name: 'VSelect',\n  props: {\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: {\n        component: VDialogTransition\n      }\n    })\n  },\n  emits: {\n    'update:modelValue': val => true,\n    'update:menu': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const vMenuRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !selections.value.some(s => s === item));\n      }\n      return items.value;\n    });\n    const listRef = ref();\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (props.hideNoData && !items.value.length || props.readonly || form?.isReadonly.value) return;\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (props.readonly || form?.isReadonly.value) return;\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev');\n      } else if (e.key === 'Home') {\n        listRef.value?.focus('first');\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last');\n      }\n    }\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value));\n        if (index === -1) {\n          model.value = [...model.value, item];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n      } else {\n        model.value = [item];\n        menu.value = false;\n      }\n    }\n    function onBlur(e) {\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\n        menu.value = false;\n      }\n    }\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots.prepend || slots.append || slots['no-data']);\n      const [textFieldProps] = filterVTextFieldProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(v => v.props.value).join(', '),\n        \"onUpdate:modelValue\": v => {\n          if (v == null) model.value = [];\n        },\n        \"validationValue\": model.externalValue,\n        \"dirty\": model.value.length > 0,\n        \"class\": ['v-select', {\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips,\n          [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n          'v-select--selected': model.value.length\n        }],\n        \"appendInnerIcon\": props.menuIcon,\n        \"readonly\": true,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-select__content\",\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, {\n            \"ref\": listRef,\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onFocusout\": onFocusout\n          }, {\n            default: () => [!displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), slots['prepend-item']?.(), displayItems.value.map((item, index) => {\n              if (slots.item) {\n                return slots.item?.({\n                  item,\n                  index,\n                  props: mergeProps(item.props, {\n                    onClick: () => select(item)\n                  })\n                });\n              }\n              return _createVNode(VListItem, _mergeProps({\n                \"key\": index\n              }, item.props, {\n                \"onClick\": () => select(item)\n              }), {\n                prepend: _ref2 => {\n                  let {\n                    isSelected\n                  } = _ref2;\n                  return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                    \"modelValue\": isSelected,\n                    \"ripple\": false\n                  }, null) : undefined;\n                }\n              });\n            }), slots['append-item']?.()]\n          })]\n        }), selections.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-select__selection\"\n          }, [hasChips ? _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slots.chip ? slots.chip({\n              item,\n              index,\n              props: slotProps\n            }) : _createVNode(VChip, slotProps, null)]\n          }) : slots.selection ? slots.selection({\n            item,\n            index\n          }) : _createVNode(\"span\", {\n            \"class\": \"v-select__selection-text\"\n          }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-select__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })])\n      });\n    });\n    return forwardRefs({\n      menu,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VSelect.mjs.map","/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray } from \"../util/index.mjs\";\nimport { computed, ref, unref, watchEffect } from 'vue';\n\n// Types\n\n// Composables\nexport const defaultFilter = (value, query, item) => {\n  if (value == null || query == null) return -1;\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase());\n};\nexport const makeFilterProps = propsFactory({\n  customFilter: Function,\n  customKeyFilter: Object,\n  filterKeys: [Array, String],\n  filterMode: {\n    type: String,\n    default: 'intersection'\n  },\n  noFilter: Boolean\n}, 'filter');\nexport function filterItems(items, query, options) {\n  const array = [];\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter;\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false;\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length;\n  if (!items?.length) return array;\n  loop: for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const customMatches = {};\n    const defaultMatches = {};\n    let match = -1;\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(item);\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(item, key, item);\n          const keyFilter = options?.customKeyFilter?.[key];\n          match = keyFilter ? keyFilter(value, query, item) : filter(value, query, item);\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match;else defaultMatches[key] = match;\n          } else if (options?.filterMode === 'every') {\n            continue loop;\n          }\n        }\n      } else {\n        match = filter(item, query, item);\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match;\n        }\n      }\n      const defaultMatchesLength = Object.keys(defaultMatches).length;\n      const customMatchesLength = Object.keys(customMatches).length;\n      if (!defaultMatchesLength && !customMatchesLength) continue;\n      if (options?.filterMode === 'union' && customMatchesLength !== customFiltersLength && !defaultMatchesLength) continue;\n      if (options?.filterMode === 'intersection' && (customMatchesLength !== customFiltersLength || !defaultMatchesLength)) continue;\n    }\n    array.push({\n      index: i,\n      matches: {\n        ...defaultMatches,\n        ...customMatches\n      }\n    });\n  }\n  return array;\n}\nexport function useFilter(props, items, query, options) {\n  const strQuery = computed(() => typeof query?.value !== 'string' && typeof query?.value !== 'number' ? '' : String(query.value));\n  const filteredItems = ref([]);\n  const filteredMatches = ref(new Map());\n  watchEffect(() => {\n    filteredItems.value = [];\n    filteredMatches.value = new Map();\n    const transformedItems = unref(items);\n    const results = filterItems(transformedItems, strQuery.value, {\n      customKeyFilter: props.customKeyFilter,\n      default: props.customFilter,\n      filterKeys: unref(options?.filterKeys) ?? props.filterKeys,\n      filterMode: props.filterMode,\n      noFilter: props.noFilter\n    });\n    results.forEach(_ref => {\n      let {\n        index,\n        matches\n      } = _ref;\n      const item = transformedItems[index];\n      filteredItems.value.push(item);\n      filteredMatches.value.set(item.value, matches);\n    });\n  });\n  function getMatches(item) {\n    return filteredMatches.value.get(item.value);\n  }\n  return {\n    filteredItems,\n    filteredMatches,\n    getMatches\n  };\n}\n//# sourceMappingURL=filter.mjs.map","import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VAutocomplete.css\";\n\n// Components\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { useItems } from \"../../composables/items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, omit, useRender, wrapInArray } from \"../../util/index.mjs\";\nimport { filterVTextFieldProps, makeVTextFieldProps } from \"../VTextField/VTextField.mjs\"; // Types\nfunction highlightResult(text, matches, length) {\n  if (matches == null) return text;\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-autocomplete__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-autocomplete__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-autocomplete__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\nexport const VAutocomplete = genericComponent()({\n  name: 'VAutocomplete',\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n    ...makeFilterProps({\n      filterKeys: ['title']\n    }),\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: false\n    })\n  },\n  emits: {\n    'update:search': val => true,\n    'update:modelValue': val => true,\n    'update:menu': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = ref(false);\n    const isPristine = ref(true);\n    const vMenuRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const search = useProxiedModel(props, 'search', '');\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value));\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value));\n      }\n      return filteredItems.value;\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const listRef = ref();\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n      search.value = '';\n    }\n    function onMousedownControl() {\n      if (props.hideNoData && !items.value.length || props.readonly || form?.isReadonly.value) return;\n      menu.value = true;\n    }\n    function onKeydown(e) {\n      if (props.readonly || form?.isReadonly.value) return;\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true;\n      }\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev');\n      }\n    }\n    function onInput(e) {\n      search.value = e.target.value;\n    }\n    function onAfterLeave() {\n      if (isFocused.value) isPristine.value = true;\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    const isSelecting = ref(false);\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value));\n        if (index === -1) {\n          model.value = [...model.value, item];\n          search.value = '';\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n      } else {\n        model.value = [item];\n        isSelecting.value = true;\n        if (!slots.selection) {\n          search.value = item.title;\n        }\n        menu.value = false;\n        isPristine.value = true;\n        nextTick(() => isSelecting.value = false);\n      }\n    }\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true;\n        search.value = props.multiple || !!slots.selection ? '' : String(selections.value.at(-1)?.props.title ?? '');\n        isPristine.value = true;\n        nextTick(() => isSelecting.value = false);\n      } else {\n        menu.value = false;\n        search.value = '';\n      }\n    });\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return;\n      if (val) menu.value = true;\n      isPristine.value = !val;\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots.prepend || slots.append || slots['no-data']);\n      const [textFieldProps] = filterVTextFieldProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": v => {\n          if (v == null) model.value = [];\n        },\n        \"validationValue\": model.externalValue,\n        \"dirty\": model.value.length > 0,\n        \"onInput\": onInput,\n        \"class\": ['v-autocomplete', {\n          'v-autocomplete--active-menu': menu.value,\n          'v-autocomplete--chips': !!props.chips,\n          [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n          'v-autocomplete--selection-slot': !!slots.selection\n        }],\n        \"appendInnerIcon\": props.menuIcon,\n        \"readonly\": props.readonly,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onFocus\": () => isFocused.value = true,\n        \"onBlur\": () => isFocused.value = false,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-autocomplete__content\",\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, {\n            \"ref\": listRef,\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout\n          }, {\n            default: () => [!displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), slots['prepend-item']?.(), displayItems.value.map((item, index) => slots.item?.({\n              item,\n              index,\n              props: mergeProps(item.props, {\n                onClick: () => select(item)\n              })\n            }) ?? _createVNode(VListItem, _mergeProps({\n              \"key\": index\n            }, item.props, {\n              \"onClick\": () => select(item)\n            }), {\n              prepend: _ref2 => {\n                let {\n                  isSelected\n                } = _ref2;\n                return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                  \"modelValue\": isSelected,\n                  \"ripple\": false\n                }, null) : undefined;\n              },\n              title: () => {\n                return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\n              }\n            })), slots['append-item']?.()]\n          })]\n        }), selections.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-autocomplete__selection\"\n          }, [hasChips ? _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slots.chip ? slots.chip({\n              item,\n              index,\n              props: slotProps\n            }) : _createVNode(VChip, slotProps, null)]\n          }) : slots.selection ? slots.selection({\n            item,\n            index\n          }) : _createVNode(\"span\", {\n            \"class\": \"v-autocomplete__selection-text\"\n          }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-autocomplete__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })])\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VAutocomplete.mjs.map","import { withDirectives as _withDirectives, mergeProps as _mergeProps, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBadge.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Utilities\nimport { genericComponent, pick, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\n\n// Types\n\nexport const VBadge = genericComponent()({\n  name: 'VBadge',\n  inheritAttrs: false,\n  props: {\n    bordered: Boolean,\n    color: String,\n    content: [Number, String],\n    dot: Boolean,\n    floating: Boolean,\n    icon: IconValue,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge'\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    textColor: String,\n    ...makeLocationProps({\n      location: 'top end'\n    }),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps({\n      transition: 'scale-rotate-transition'\n    })\n  },\n  setup(props, ctx) {\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      t\n    } = useLocale();\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'textColor'));\n    const {\n      themeClasses\n    } = useTheme();\n    const {\n      locationStyles\n    } = useLocation(props, true, side => {\n      const base = props.floating ? props.dot ? 2 : 4 : props.dot ? 8 : 12;\n      return base + (['top', 'bottom'].includes(side) ? +(props.offsetY ?? 0) : ['left', 'right'].includes(side) ? +(props.offsetX ?? 0) : 0);\n    });\n    useRender(() => {\n      const value = Number(props.content);\n      const content = !props.max || isNaN(value) ? props.content : value <= props.max ? value : `${props.max}+`;\n      const [badgeAttrs, attrs] = pick(ctx.attrs, ['aria-atomic', 'aria-label', 'aria-live', 'role', 'title']);\n      return _createVNode(props.tag, _mergeProps({\n        \"class\": ['v-badge', {\n          'v-badge--bordered': props.bordered,\n          'v-badge--dot': props.dot,\n          'v-badge--floating': props.floating,\n          'v-badge--inline': props.inline\n        }]\n      }, attrs), {\n        default: () => [_createVNode(\"div\", {\n          \"class\": \"v-badge__wrapper\"\n        }, [ctx.slots.default?.(), _createVNode(MaybeTransition, {\n          \"transition\": props.transition\n        }, {\n          default: () => [_withDirectives(_createVNode(\"span\", _mergeProps({\n            \"class\": ['v-badge__badge', themeClasses.value, backgroundColorClasses.value, roundedClasses.value, textColorClasses.value],\n            \"style\": [backgroundColorStyles.value, textColorStyles.value, props.inline ? {} : locationStyles.value],\n            \"aria-atomic\": \"true\",\n            \"aria-label\": t(props.label, value),\n            \"aria-live\": \"polite\",\n            \"role\": \"status\"\n          }, badgeAttrs), [props.dot ? undefined : ctx.slots.badge ? ctx.slots.badge?.() : props.icon ? _createVNode(VIcon, {\n            \"icon\": props.icon\n          }, null) : content]), [[_vShow, props.modelValue]])]\n        })])]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VBadge.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { defineComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCardActions = defineComponent({\n  name: 'VCardActions',\n  setup(_, _ref) {\n    let {\n      slots\n    } = _ref;\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": \"v-card-actions\"\n    }, [slots.default?.()]));\n    return {};\n  }\n});\n//# sourceMappingURL=VCardActions.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardSubtitle = createSimpleFunctional('v-card-subtitle');\n//# sourceMappingURL=VCardSubtitle.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardTitle = createSimpleFunctional('v-card-title');\n//# sourceMappingURL=VCardTitle.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCardSubtitle } from \"./VCardSubtitle.mjs\";\nimport { VCardTitle } from \"./VCardTitle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\"; // Utility\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCardItem = genericComponent()({\n  name: 'VCardItem',\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: String,\n    title: String,\n    ...makeDensityProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasPrepend = !!(props.prependAvatar || props.prependIcon || slots.prepend);\n      const hasAppend = !!(props.appendAvatar || props.appendIcon || slots.append);\n      const hasTitle = !!(props.title || slots.title);\n      const hasSubtitle = !!(props.subtitle || slots.subtitle);\n      return _createVNode(\"div\", {\n        \"class\": \"v-card-item\"\n      }, [hasPrepend && _createVNode(VDefaultsProvider, {\n        \"key\": \"prepend\",\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.prependIcon,\n            image: props.prependAvatar\n          },\n          VIcon: {\n            density: props.density,\n            icon: props.prependIcon\n          }\n        }\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": \"v-card-item__prepend\"\n        }, [slots.prepend?.() ?? _createVNode(VAvatar, null, null)])]\n      }), _createVNode(\"div\", {\n        \"class\": \"v-card-item__content\"\n      }, [hasTitle && _createVNode(VCardTitle, {\n        \"key\": \"title\"\n      }, {\n        default: () => [slots.title?.() ?? props.title]\n      }), hasSubtitle && _createVNode(VCardSubtitle, {\n        \"key\": \"subtitle\"\n      }, {\n        default: () => [slots.subtitle?.() ?? props.subtitle]\n      }), slots.default?.()]), hasAppend && _createVNode(VDefaultsProvider, {\n        \"key\": \"append\",\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.appendIcon,\n            image: props.appendAvatar\n          },\n          VIcon: {\n            density: props.density,\n            icon: props.appendIcon\n          }\n        }\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": \"v-card-item__append\"\n        }, [slots.append?.() ?? _createVNode(VAvatar, null, null)])]\n      })]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCardItem.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardText = createSimpleFunctional('v-card-text');\n//# sourceMappingURL=VCardText.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n\n// Styles\nimport \"./VCard.css\";\n\n// Components\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCard = genericComponent()({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    subtitle: String,\n    text: String,\n    title: String,\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"href\": link.href.value,\n        \"onClick\": isClickable.value && link.navigate,\n        \"tabindex\": props.disabled ? -1 : undefined\n      }, {\n        default: () => [hasImage && _createVNode(VDefaultsProvider, {\n          \"key\": \"image\",\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-card__image\"\n          }, [slots.image?.() ?? _createVNode(VImg, null, null)])]\n        }), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.(), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCard.mjs.map","/* eslint-disable max-statements */\n// Composables\nimport { makeElevationProps } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps } from \"../../composables/rounded.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\"; // Utilities\nimport { clamp, createRange, propsFactory } from \"../../util/index.mjs\";\nimport { computed, provide, ref, toRef } from 'vue';\n\n// Types\n\nexport const VSliderSymbol = Symbol.for('vuetify:v-slider');\nexport function getOffset(e, el, direction) {\n  const vertical = direction === 'vertical';\n  const rect = el.getBoundingClientRect();\n  const touch = 'touches' in e ? e.touches[0] : e;\n  return vertical ? touch.clientY - (rect.top + rect.height / 2) : touch.clientX - (rect.left + rect.width / 2);\n}\nfunction getPosition(e, position) {\n  if ('touches' in e && e.touches.length) return e.touches[0][position];else if ('changedTouches' in e && e.changedTouches.length) return e.changedTouches[0][position];else return e[position];\n}\nexport const makeSliderProps = propsFactory({\n  disabled: Boolean,\n  error: Boolean,\n  readonly: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  min: {\n    type: [Number, String],\n    default: 0\n  },\n  step: {\n    type: [Number, String],\n    default: 0\n  },\n  thumbColor: String,\n  thumbLabel: {\n    type: [Boolean, String],\n    default: undefined,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  thumbSize: {\n    type: [Number, String],\n    default: 20\n  },\n  showTicks: {\n    type: [Boolean, String],\n    default: false,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  ticks: {\n    type: [Array, Object]\n  },\n  tickSize: {\n    type: [Number, String],\n    default: 2\n  },\n  color: String,\n  trackColor: String,\n  trackFillColor: String,\n  trackSize: {\n    type: [Number, String],\n    default: 4\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    validator: v => ['vertical', 'horizontal'].includes(v)\n  },\n  reverse: Boolean,\n  ...makeRoundedProps(),\n  ...makeElevationProps({\n    elevation: 2\n  })\n}, 'slider');\nexport const useSlider = _ref => {\n  let {\n    props,\n    handleSliderMouseUp,\n    handleMouseMove,\n    getActiveThumb\n  } = _ref;\n  const {\n    isRtl\n  } = useRtl();\n  const isReversed = toRef(props, 'reverse');\n  const horizontalDirection = computed(() => {\n    let hd = isRtl.value ? 'rtl' : 'ltr';\n    if (props.reverse) {\n      hd = hd === 'rtl' ? 'ltr' : 'rtl';\n    }\n    return hd;\n  });\n  const min = computed(() => parseFloat(props.min));\n  const max = computed(() => parseFloat(props.max));\n  const step = computed(() => props.step > 0 ? parseFloat(props.step) : 0);\n  const decimals = computed(() => {\n    const trimmedStep = step.value.toString().trim();\n    return trimmedStep.includes('.') ? trimmedStep.length - trimmedStep.indexOf('.') - 1 : 0;\n  });\n  const thumbSize = computed(() => parseInt(props.thumbSize, 10));\n  const tickSize = computed(() => parseInt(props.tickSize, 10));\n  const trackSize = computed(() => parseInt(props.trackSize, 10));\n  const numTicks = computed(() => (max.value - min.value) / step.value);\n  const disabled = toRef(props, 'disabled');\n  const vertical = computed(() => props.direction === 'vertical');\n  const thumbColor = computed(() => props.error || props.disabled ? undefined : props.thumbColor ?? props.color);\n  const trackColor = computed(() => props.error || props.disabled ? undefined : props.trackColor ?? props.color);\n  const trackFillColor = computed(() => props.error || props.disabled ? undefined : props.trackFillColor ?? props.color);\n  const mousePressed = ref(false);\n  const startOffset = ref(0);\n  const trackContainerRef = ref();\n  const activeThumbRef = ref();\n  function roundValue(value) {\n    if (step.value <= 0) return value;\n    const clamped = clamp(value, min.value, max.value);\n    const offset = min.value % step.value;\n    const newValue = Math.round((clamped - offset) / step.value) * step.value + offset;\n    return parseFloat(Math.min(newValue, max.value).toFixed(decimals.value));\n  }\n  function parseMouseMove(e) {\n    const vertical = props.direction === 'vertical';\n    const start = vertical ? 'top' : 'left';\n    const length = vertical ? 'height' : 'width';\n    const position = vertical ? 'clientY' : 'clientX';\n    const {\n      [start]: trackStart,\n      [length]: trackLength\n    } = trackContainerRef.value?.$el.getBoundingClientRect();\n    const clickOffset = getPosition(e, position);\n\n    // It is possible for left to be NaN, force to number\n    let clickPos = Math.min(Math.max((clickOffset - trackStart - startOffset.value) / trackLength, 0), 1) || 0;\n    if (vertical || horizontalDirection.value === 'rtl') clickPos = 1 - clickPos;\n    return roundValue(min.value + clickPos * (max.value - min.value));\n  }\n  let thumbMoved = false;\n  const handleStop = e => {\n    if (!thumbMoved) {\n      startOffset.value = 0;\n      handleSliderMouseUp(parseMouseMove(e));\n    }\n    mousePressed.value = false;\n    thumbMoved = false;\n    startOffset.value = 0;\n  };\n  const handleStart = e => {\n    activeThumbRef.value = getActiveThumb(e);\n    if (!activeThumbRef.value) return;\n    activeThumbRef.value.focus();\n    mousePressed.value = true;\n    if (activeThumbRef.value.contains(e.target)) {\n      thumbMoved = true;\n      startOffset.value = getOffset(e, activeThumbRef.value, props.direction);\n    } else {\n      startOffset.value = 0;\n      handleMouseMove(parseMouseMove(e));\n    }\n  };\n  const moveListenerOptions = {\n    passive: true,\n    capture: true\n  };\n  function onMouseMove(e) {\n    thumbMoved = true;\n    handleMouseMove(parseMouseMove(e));\n  }\n  function onSliderMouseUp(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    handleStop(e);\n    window.removeEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.removeEventListener('mouseup', onSliderMouseUp);\n  }\n  function onSliderTouchend(e) {\n    handleStop(e);\n    window.removeEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.removeEventListener('touchend', onSliderTouchend);\n  }\n  function onSliderTouchstart(e) {\n    handleStart(e);\n    window.addEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.addEventListener('touchend', onSliderTouchend, {\n      passive: false\n    });\n  }\n  function onSliderMousedown(e) {\n    e.preventDefault();\n    handleStart(e);\n    window.addEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.addEventListener('mouseup', onSliderMouseUp, {\n      passive: false\n    });\n  }\n  const position = val => {\n    const percentage = (val - min.value) / (max.value - min.value) * 100;\n    return clamp(isNaN(percentage) ? 0 : percentage, 0, 100);\n  };\n  const parsedTicks = computed(() => {\n    if (!props.ticks) {\n      return numTicks.value !== Infinity ? createRange(numTicks.value + 1).map(t => {\n        const value = min.value + t * step.value;\n        return {\n          value,\n          position: position(value)\n        };\n      }) : [];\n    }\n    if (Array.isArray(props.ticks)) return props.ticks.map(t => ({\n      value: t,\n      position: position(t),\n      label: t.toString()\n    }));\n    return Object.keys(props.ticks).map(key => ({\n      value: parseFloat(key),\n      position: position(parseFloat(key)),\n      label: props.ticks[key]\n    }));\n  });\n  const hasLabels = computed(() => parsedTicks.value.some(_ref2 => {\n    let {\n      label\n    } = _ref2;\n    return !!label;\n  }));\n  const data = {\n    activeThumbRef,\n    color: toRef(props, 'color'),\n    decimals,\n    disabled,\n    direction: toRef(props, 'direction'),\n    elevation: toRef(props, 'elevation'),\n    hasLabels,\n    horizontalDirection,\n    isReversed,\n    min,\n    max,\n    mousePressed,\n    numTicks,\n    onSliderMousedown,\n    onSliderTouchstart,\n    parsedTicks,\n    parseMouseMove,\n    position,\n    readonly: toRef(props, 'readonly'),\n    rounded: toRef(props, 'rounded'),\n    roundValue,\n    showTicks: toRef(props, 'showTicks'),\n    startOffset,\n    step,\n    thumbSize,\n    thumbColor,\n    thumbLabel: toRef(props, 'thumbLabel'),\n    ticks: toRef(props, 'ticks'),\n    tickSize,\n    trackColor,\n    trackContainerRef,\n    trackFillColor,\n    trackSize,\n    vertical\n  };\n  provide(VSliderSymbol, data);\n  return data;\n};\n//# sourceMappingURL=slider.mjs.map","import { vShow as _vShow, withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSliderThumb.css\";\n\n// Components\nimport { VScaleTransition } from \"../transitions/index.mjs\";\nimport { VSliderSymbol } from \"./slider.mjs\"; // Directives\nimport Ripple from \"../../directives/ripple/index.mjs\"; // Composables\nimport { useElevation } from \"../../composables/elevation.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { convertToUnit, genericComponent, keyValues, useRender } from \"../../util/index.mjs\";\nexport const VSliderThumb = genericComponent()({\n  name: 'VSliderThumb',\n  directives: {\n    Ripple\n  },\n  props: {\n    focused: Boolean,\n    max: {\n      type: Number,\n      required: true\n    },\n    min: {\n      type: Number,\n      required: true\n    },\n    modelValue: {\n      type: Number,\n      required: true\n    },\n    position: {\n      type: Number,\n      required: true\n    },\n    ripple: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const slider = inject(VSliderSymbol);\n    if (!slider) throw new Error('[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider');\n    const {\n      thumbColor,\n      step,\n      vertical,\n      disabled,\n      thumbSize,\n      thumbLabel,\n      direction,\n      readonly,\n      elevation,\n      isReversed,\n      horizontalDirection,\n      mousePressed,\n      decimals\n    } = slider;\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(thumbColor);\n    const {\n      pageup,\n      pagedown,\n      end,\n      home,\n      left,\n      right,\n      down,\n      up\n    } = keyValues;\n    const relevantKeys = [pageup, pagedown, end, home, left, right, down, up];\n    const multipliers = computed(() => {\n      if (step.value) return [1, 2, 3];else return [1, 5, 10];\n    });\n    function parseKeydown(e, value) {\n      if (!relevantKeys.includes(e.key)) return;\n      e.preventDefault();\n      const _step = step.value || 0.1;\n      const steps = (props.max - props.min) / _step;\n      if ([left, right, down, up].includes(e.key)) {\n        const increase = horizontalDirection.value === 'rtl' ? [left, up] : [right, up];\n        const direction = increase.includes(e.key) ? 1 : -1;\n        const multiplier = e.shiftKey ? 2 : e.ctrlKey ? 1 : 0;\n        value = value + direction * _step * multipliers.value[multiplier];\n      } else if (e.key === home) {\n        value = props.min;\n      } else if (e.key === end) {\n        value = props.max;\n      } else {\n        const direction = e.key === pagedown ? 1 : -1;\n        value = value - direction * _step * (steps > 100 ? steps / 10 : 10);\n      }\n      return Math.max(props.min, Math.min(props.max, value));\n    }\n    function onKeydown(e) {\n      const newValue = parseKeydown(e, props.modelValue);\n      newValue != null && emit('update:modelValue', newValue);\n    }\n    useRender(() => {\n      const positionPercentage = convertToUnit(vertical.value || isReversed.value ? 100 - props.position : props.position, '%');\n      const {\n        elevationClasses\n      } = useElevation(computed(() => !disabled.value ? elevation.value : undefined));\n      return _createVNode(\"div\", {\n        \"class\": ['v-slider-thumb', {\n          'v-slider-thumb--focused': props.focused,\n          'v-slider-thumb--pressed': props.focused && mousePressed.value\n        }],\n        \"style\": {\n          '--v-slider-thumb-position': positionPercentage,\n          '--v-slider-thumb-size': convertToUnit(thumbSize.value)\n        },\n        \"role\": \"slider\",\n        \"tabindex\": disabled.value ? -1 : 0,\n        \"aria-valuemin\": props.min,\n        \"aria-valuemax\": props.max,\n        \"aria-valuenow\": props.modelValue,\n        \"aria-readonly\": readonly.value,\n        \"aria-orientation\": direction.value,\n        \"onKeydown\": !readonly.value ? onKeydown : undefined\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-slider-thumb__surface', textColorClasses.value, elevationClasses.value],\n        \"style\": {\n          ...textColorStyles.value\n        }\n      }, null), _withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-slider-thumb__ripple', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, null), [[_resolveDirective(\"ripple\"), props.ripple, null, {\n        circle: true,\n        center: true\n      }]]), _createVNode(VScaleTransition, {\n        \"origin\": \"bottom center\"\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-slider-thumb__label-container\"\n        }, [_createVNode(\"div\", {\n          \"class\": ['v-slider-thumb__label']\n        }, [_createVNode(\"div\", null, [slots['thumb-label']?.({\n          modelValue: props.modelValue\n        }) ?? props.modelValue.toFixed(step.value ? decimals.value : 1)])])]), [[_vShow, thumbLabel.value && props.focused || thumbLabel.value === 'always']])]\n      })]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VSliderThumb.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSliderTrack.css\";\n\n// Components\nimport { VSliderSymbol } from \"./slider.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useRounded } from \"../../composables/rounded.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VSliderTrack = genericComponent()({\n  name: 'VSliderTrack',\n  props: {\n    start: {\n      type: Number,\n      required: true\n    },\n    stop: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: {},\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slider = inject(VSliderSymbol);\n    if (!slider) throw new Error('[Vuetify] v-slider-track must be inside v-slider or v-range-slider');\n    const {\n      color,\n      horizontalDirection,\n      parsedTicks,\n      rounded,\n      showTicks,\n      tickSize,\n      trackColor,\n      trackFillColor,\n      trackSize,\n      vertical,\n      min,\n      max\n    } = slider;\n    const {\n      roundedClasses\n    } = useRounded(rounded);\n    const {\n      backgroundColorClasses: trackFillColorClasses,\n      backgroundColorStyles: trackFillColorStyles\n    } = useBackgroundColor(trackFillColor);\n    const {\n      backgroundColorClasses: trackColorClasses,\n      backgroundColorStyles: trackColorStyles\n    } = useBackgroundColor(trackColor);\n    const startDir = computed(() => `inset-${vertical.value ? 'block-end' : 'inline-start'}`);\n    const endDir = computed(() => vertical.value ? 'height' : 'width');\n    const backgroundStyles = computed(() => {\n      return {\n        [startDir.value]: '0%',\n        [endDir.value]: '100%'\n      };\n    });\n    const trackFillWidth = computed(() => props.stop - props.start);\n    const trackFillStyles = computed(() => {\n      return {\n        [startDir.value]: convertToUnit(props.start, '%'),\n        [endDir.value]: convertToUnit(trackFillWidth.value, '%')\n      };\n    });\n    const computedTicks = computed(() => {\n      const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value;\n      return ticks.map((tick, index) => {\n        const directionProperty = vertical.value ? 'bottom' : 'margin-inline-start';\n        const directionValue = tick.value !== min.value && tick.value !== max.value ? convertToUnit(tick.position, '%') : undefined;\n        return _createVNode(\"div\", {\n          \"key\": tick.value,\n          \"class\": ['v-slider-track__tick', {\n            'v-slider-track__tick--filled': tick.position >= props.start && tick.position <= props.stop,\n            'v-slider-track__tick--first': tick.value === min.value,\n            'v-slider-track__tick--last': tick.value === max.value\n          }],\n          \"style\": {\n            [directionProperty]: directionValue\n          }\n        }, [(tick.label || slots['tick-label']) && _createVNode(\"div\", {\n          \"class\": \"v-slider-track__tick-label\"\n        }, [slots['tick-label']?.({\n          tick,\n          index\n        }) ?? tick.label])]);\n      });\n    });\n    useRender(() => {\n      return _createVNode(\"div\", {\n        \"class\": ['v-slider-track', roundedClasses.value],\n        \"style\": {\n          '--v-slider-track-size': convertToUnit(trackSize.value),\n          '--v-slider-tick-size': convertToUnit(tickSize.value),\n          direction: !vertical.value ? horizontalDirection.value : undefined\n        }\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-slider-track__background', trackColorClasses.value, {\n          'v-slider-track__background--opacity': !!color.value || !trackFillColor.value\n        }],\n        \"style\": {\n          ...backgroundStyles.value,\n          ...trackColorStyles.value\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-slider-track__fill', trackFillColorClasses.value],\n        \"style\": {\n          ...trackFillStyles.value,\n          ...trackFillColorStyles.value\n        }\n      }, null), showTicks.value && _createVNode(\"div\", {\n        \"class\": ['v-slider-track__ticks', {\n          'v-slider-track__ticks--always-show': showTicks.value === 'always'\n        }]\n      }, [computedTicks.value])]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VSliderTrack.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VSlider.css\";\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\";\nimport { VSliderThumb } from \"./VSliderThumb.mjs\";\nimport { VSliderTrack } from \"./VSliderTrack.mjs\"; // Composables\nimport { makeFocusProps, useFocus } from \"../../composables/focus.mjs\";\nimport { makeSliderProps, useSlider } from \"./slider.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VSlider = genericComponent()({\n  name: 'VSlider',\n  props: {\n    ...makeFocusProps(),\n    ...makeSliderProps(),\n    ...makeVInputProps(),\n    modelValue: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  emits: {\n    'update:focused': value => true,\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const thumbContainerRef = ref();\n    const {\n      min,\n      max,\n      mousePressed,\n      roundValue,\n      onSliderMousedown,\n      onSliderTouchstart,\n      trackContainerRef,\n      position,\n      hasLabels,\n      readonly\n    } = useSlider({\n      props,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleSliderMouseUp: newValue => model.value = roundValue(newValue),\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleMouseMove: newValue => model.value = roundValue(newValue),\n      getActiveThumb: () => thumbContainerRef.value?.$el\n    });\n    const model = useProxiedModel(props, 'modelValue', undefined, v => {\n      const value = typeof v === 'string' ? parseFloat(v) : v == null ? min.value : v;\n      return roundValue(value);\n    });\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const trackStop = computed(() => position(model.value));\n    useRender(() => {\n      const [inputProps, _] = filterInputProps(props);\n      const hasPrepend = !!(props.label || slots.label || slots.prepend);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-slider', {\n          'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n          'v-slider--focused': isFocused.value,\n          'v-slider--pressed': mousePressed.value,\n          'v-slider--disabled': props.disabled\n        }]\n      }, inputProps, {\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        prepend: hasPrepend ? slotProps => _createVNode(_Fragment, null, [slots.label?.(slotProps) ?? props.label ? _createVNode(VLabel, {\n          \"id\": slotProps.id,\n          \"class\": \"v-slider__label\",\n          \"text\": props.label\n        }, null) : undefined, slots.prepend?.(slotProps)]) : undefined,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId\n          } = _ref2;\n          return _createVNode(\"div\", {\n            \"class\": \"v-slider__container\",\n            \"onMousedown\": !readonly.value ? onSliderMousedown : undefined,\n            \"onTouchstartPassive\": !readonly.value ? onSliderTouchstart : undefined\n          }, [_createVNode(\"input\", {\n            \"id\": id.value,\n            \"name\": props.name || id.value,\n            \"disabled\": props.disabled,\n            \"readonly\": props.readonly,\n            \"tabindex\": \"-1\",\n            \"value\": model.value\n          }, null), _createVNode(VSliderTrack, {\n            \"ref\": trackContainerRef,\n            \"start\": 0,\n            \"stop\": trackStop.value\n          }, {\n            'tick-label': slots['tick-label']\n          }), _createVNode(VSliderThumb, {\n            \"ref\": thumbContainerRef,\n            \"aria-describedby\": messagesId.value,\n            \"focused\": isFocused.value,\n            \"min\": min.value,\n            \"max\": max.value,\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": v => model.value = v,\n            \"position\": trackStop.value,\n            \"elevation\": props.elevation,\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }, {\n            'thumb-label': slots['thumb-label']\n          })]);\n        }\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VSlider.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VSheet.css\";\n\n// Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\n\n// Types\n\nexport const makeVSheetProps = propsFactory({\n  color: String,\n  ...makeBorderProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'v-sheet');\nexport const VSheet = genericComponent()({\n  name: 'VSheet',\n  props: {\n    ...makeVSheetProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-sheet', themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value],\n      \"style\": [backgroundColorStyles.value, dimensionStyles.value, locationStyles.value]\n    }, slots));\n    return {};\n  }\n});\nexport function filterSheetProps(props) {\n  return pick(props, Object.keys(VSheet?.props ?? {}));\n}\n//# sourceMappingURL=VSheet.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDialog.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, IN_BROWSER, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\"; // Types\nexport const VDialog = genericComponent()({\n  name: 'VDialog',\n  props: {\n    fullscreen: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: Boolean,\n    ...makeVOverlayProps({\n      origin: 'center center',\n      scrollStrategy: 'block',\n      transition: {\n        component: VDialogTransition\n      },\n      zIndex: 2400\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const overlay = ref();\n    function onFocusin(e) {\n      const before = e.relatedTarget;\n      const after = e.target;\n      if (before !== after && overlay.value?.contentEl &&\n      // We're the topmost dialog\n      overlay.value?.globalTop &&\n      // It isn't the document or the dialog body\n      ![document, overlay.value.contentEl].includes(after) &&\n      // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        const focusable = [...overlay.value.contentEl.querySelectorAll('button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])')].filter(el => !el.hasAttribute('disabled') && !el.matches('[tabindex=\"-1\"]'));\n        if (!focusable.length) return;\n        const firstElement = focusable[0];\n        const lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    watch(isActive, async val => {\n      await nextTick();\n      if (val) {\n        overlay.value.contentEl?.focus({\n          preventScroll: true\n        });\n      } else {\n        overlay.value.activatorEl?.focus({\n          preventScroll: true\n        });\n      }\n    });\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'dialog',\n      'aria-expanded': String(isActive.value)\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-dialog', {\n          'v-dialog--fullscreen': props.fullscreen,\n          'v-dialog--scrollable': props.scrollable\n        }]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"aria-role\": \"dialog\",\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps.value\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VDialog.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VExpansionPanel.css\";\n\n// Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VExpansionPanelSymbol = Symbol.for('vuetify:v-expansion-panel');\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'];\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n  props: {\n    color: String,\n    variant: {\n      type: String,\n      default: 'default',\n      validator: v => allowedVariants.includes(v)\n    },\n    readonly: Boolean,\n    ...makeGroupProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useGroup(props, VExpansionPanelSymbol);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`);\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-expansion-panels', themeClasses.value, variantClass.value]\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanels.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  color: String,\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: false\n  },\n  readonly: Boolean\n}, 'v-expansion-panel-title');\nexport const VExpansionPanelTitle = genericComponent()({\n  name: 'VExpansionPanelTitle',\n  directives: {\n    Ripple\n  },\n  props: {\n    ...makeVExpansionPanelTitleProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'color');\n    const slotProps = computed(() => ({\n      collapseIcon: props.collapseIcon,\n      disabled: expansionPanel.disabled.value,\n      expanded: expansionPanel.isSelected.value,\n      expandIcon: props.expandIcon,\n      readonly: props.readonly\n    }));\n    useRender(() => _withDirectives(_createVNode(\"button\", {\n      \"class\": ['v-expansion-panel-title', {\n        'v-expansion-panel-title--active': expansionPanel.isSelected.value\n      }, backgroundColorClasses.value],\n      \"style\": backgroundColorStyles.value,\n      \"type\": \"button\",\n      \"tabindex\": expansionPanel.disabled.value ? -1 : undefined,\n      \"disabled\": expansionPanel.disabled.value,\n      \"aria-expanded\": expansionPanel.isSelected.value,\n      \"onClick\": !props.readonly ? expansionPanel.toggle : undefined\n    }, [_createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__overlay\"\n    }, null), slots.default?.(slotProps.value), !props.hideActions && _createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__icon\"\n    }, [slots.actions ? slots.actions(slotProps.value) : _createVNode(VIcon, {\n      \"icon\": expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon\n    }, null)])]), [[_resolveDirective(\"ripple\"), props.ripple]]));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelTitle.mjs.map","import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\"; // Composables\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\"; // Utilities\nimport { inject } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n  props: {\n    ...makeLazyProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel');\n    const {\n      hasContent,\n      onAfterLeave\n    } = useLazy(props, expansionPanel.isSelected);\n    useRender(() => _createVNode(VExpandTransition, {\n      \"onAfterLeave\": onAfterLeave\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": \"v-expansion-panel-text\"\n      }, [slots.default && hasContent.value && _createVNode(\"div\", {\n        \"class\": \"v-expansion-panel-text__wrapper\"\n      }, [slots.default?.()])]), [[_vShow, expansionPanel.isSelected.value]])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelText.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from \"./VExpansionPanelTitle.mjs\";\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VExpansionPanelText } from \"./VExpansionPanelText.mjs\"; // Composables\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps } from \"../../composables/lazy.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, provide } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VExpansionPanel = genericComponent()({\n  name: 'VExpansionPanel',\n  props: {\n    title: String,\n    text: String,\n    bgColor: String,\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLazyProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeVExpansionPanelTitleProps()\n  },\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'bgColor');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled);\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index);\n      return arr;\n    }, []));\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === 1);\n    });\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === -1);\n    });\n    provide(VExpansionPanelSymbol, groupItem);\n    useRender(() => {\n      const hasText = !!(slots.text || props.text);\n      const hasTitle = !!(slots.title || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panel', {\n          'v-expansion-panel--active': groupItem.isSelected.value,\n          'v-expansion-panel--before-active': isBeforeSelected.value,\n          'v-expansion-panel--after-active': isAfterSelected.value,\n          'v-expansion-panel--disabled': isDisabled.value\n        }, roundedClasses.value, backgroundColorClasses.value],\n        \"style\": backgroundColorStyles.value,\n        \"aria-expanded\": groupItem.isSelected.value\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": ['v-expansion-panel__shadow', ...elevationClasses.value]\n        }, null), hasTitle && _createVNode(VExpansionPanelTitle, {\n          \"key\": \"title\",\n          \"collapseIcon\": props.collapseIcon,\n          \"color\": props.color,\n          \"expandIcon\": props.expandIcon,\n          \"hideActions\": props.hideActions,\n          \"ripple\": props.ripple\n        }, {\n          default: () => [slots.title ? slots.title() : props.title]\n        }), hasText && _createVNode(VExpansionPanelText, {\n          \"key\": \"text\",\n          \"eager\": props.eager\n        }, {\n          default: () => [slots.text ? slots.text() : props.text]\n        }), slots.default?.()]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanel.mjs.map","import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n  props: {\n    fluid: {\n      type: Boolean,\n      default: false\n    },\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-container', {\n        'v-container--fluid': props.fluid\n      }]\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VContainer.mjs.map","// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl']; // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n  if (val == null || val === false) {\n    return undefined;\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  if (type === 'col') {\n    className = 'v-' + className;\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase();\n  }\n  // .order-md-6\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'];\nexport const VCol = genericComponent()({\n  name: 'VCol',\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ALIGN_SELF_VALUES.includes(str)\n    },\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'));\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: classes.value\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VCol.mjs.map","// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl']; // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'];\nconst SPACE = ['space-between', 'space-around', 'space-evenly'];\nfunction makeRowProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def();\n    return props;\n  }, {});\n}\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'];\nconst alignValidator = str => ALIGN_VALUES.includes(str);\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE];\nconst justifyValidator = str => JUSTIFY_VALUES.includes(str);\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'];\nconst alignContentValidator = str => ALIGN_CONTENT_VALUES.includes(str);\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n  if (val == null) {\n    return undefined;\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  // .align-items-sm-center\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nexport const VRow = genericComponent()({\n  name: 'VRow',\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator\n    },\n    ...alignContentProps,\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: ['v-row', classes.value]\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VRow.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMain.css\";\n\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useLayout } from \"../../composables/layout.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VMain = genericComponent()({\n  name: 'VMain',\n  props: {\n    scrollable: Boolean,\n    ...makeTagProps({\n      tag: 'main'\n    })\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      mainStyles\n    } = useLayout();\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-main', {\n        'v-main--scrollable': props.scrollable\n      }],\n      \"style\": [mainStyles.value, ssrBootStyles.value]\n    }, {\n      default: () => [props.scrollable ? _createVNode(\"div\", {\n        \"class\": \"v-main__scroller\"\n      }, [slots.default?.()]) : slots.default?.()]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VMain.mjs.map","import { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue';\nimport { convertToUnit } from \"../../util/index.mjs\";\nexport function useSticky(_ref) {\n  let {\n    rootEl,\n    isSticky,\n    layoutItemStyles\n  } = _ref;\n  const isStuck = ref(false);\n  const stuckPosition = ref(0);\n  const stickyStyles = computed(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value;\n    return [isSticky.value ? {\n      top: 'auto',\n      bottom: 'auto',\n      height: undefined\n    } : undefined, isStuck.value ? {\n      [side]: convertToUnit(stuckPosition.value)\n    } : {\n      top: layoutItemStyles.value.top\n    }];\n  });\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, {\n          passive: true\n        });\n      } else {\n        window.removeEventListener('scroll', onScroll);\n      }\n    }, {\n      immediate: true\n    });\n  });\n  onBeforeUnmount(() => {\n    document.removeEventListener('scroll', onScroll);\n  });\n  let lastScrollTop = 0;\n  function onScroll() {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down';\n    const rect = rootEl.value.getBoundingClientRect();\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0);\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop);\n    const bottom = rect.height + Math.max(stuckPosition.value, layoutTop) - window.scrollY - window.innerHeight;\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top';\n      stuckPosition.value = layoutTop;\n    } else if (direction === 'up' && isStuck.value === 'bottom' || direction === 'down' && isStuck.value === 'top') {\n      stuckPosition.value = window.scrollY + rect.top;\n      isStuck.value = true;\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0;\n      isStuck.value = 'bottom';\n    } else if (direction === 'up' && top <= 0) {\n      stuckPosition.value = rect.top + top;\n      isStuck.value = 'top';\n    }\n    lastScrollTop = window.scrollY;\n  }\n  return {\n    isStuck,\n    stickyStyles\n  };\n}\n//# sourceMappingURL=sticky.mjs.map","import { CircularBuffer } from \"../util/index.mjs\";\nconst HORIZON = 100; // ms\nconst HISTORY = 20; // number of samples to keep\n\n/** @see https://android.googlesource.com/platform/frameworks/native/+/master/libs/input/VelocityTracker.cpp */\nfunction kineticEnergyToVelocity(work) {\n  const sqrt2 = 1.41421356237;\n  return (work < 0 ? -1.0 : 1.0) * Math.sqrt(Math.abs(work)) * sqrt2;\n}\n\n/**\n * Returns pointer velocity in px/s\n */\nexport function calculateImpulseVelocity(samples) {\n  // The input should be in reversed time order (most recent sample at index i=0)\n  if (samples.length < 2) {\n    // if 0 or 1 points, velocity is zero\n    return 0;\n  }\n  // if (samples[1].t > samples[0].t) {\n  //   // Algorithm will still work, but not perfectly\n  //   consoleWarn('Samples provided to calculateImpulseVelocity in the wrong order')\n  // }\n  if (samples.length === 2) {\n    // if 2 points, basic linear calculation\n    if (samples[1].t === samples[0].t) {\n      // consoleWarn(`Events have identical time stamps t=${samples[0].t}, setting velocity = 0`)\n      return 0;\n    }\n    return (samples[1].d - samples[0].d) / (samples[1].t - samples[0].t);\n  }\n  // Guaranteed to have at least 3 points here\n  // start with the oldest sample and go forward in time\n  let work = 0;\n  for (let i = samples.length - 1; i > 0; i--) {\n    if (samples[i].t === samples[i - 1].t) {\n      // consoleWarn(`Events have identical time stamps t=${samples[i].t}, skipping sample`)\n      continue;\n    }\n    const vprev = kineticEnergyToVelocity(work); // v[i-1]\n    const vcurr = (samples[i].d - samples[i - 1].d) / (samples[i].t - samples[i - 1].t); // v[i]\n    work += (vcurr - vprev) * Math.abs(vcurr);\n    if (i === samples.length - 1) {\n      work *= 0.5;\n    }\n  }\n  return kineticEnergyToVelocity(work) * 1000;\n}\nexport function useVelocity() {\n  const touches = {};\n  function addMovement(e) {\n    Array.from(e.changedTouches).forEach(touch => {\n      const samples = touches[touch.identifier] ?? (touches[touch.identifier] = new CircularBuffer(HISTORY));\n      samples.push([e.timeStamp, touch]);\n    });\n  }\n  function endTouch(e) {\n    Array.from(e.changedTouches).forEach(touch => {\n      delete touches[touch.identifier];\n    });\n  }\n  function getVelocity(id) {\n    const samples = touches[id]?.values().reverse();\n    if (!samples) {\n      throw new Error(`No samples for touch id ${id}`);\n    }\n    const newest = samples[0];\n    const x = [];\n    const y = [];\n    for (const val of samples) {\n      if (newest[0] - val[0] > HORIZON) break;\n      x.push({\n        t: val[0],\n        d: val[1].clientX\n      });\n      y.push({\n        t: val[0],\n        d: val[1].clientY\n      });\n    }\n    return {\n      x: calculateImpulseVelocity(x),\n      y: calculateImpulseVelocity(y),\n      get direction() {\n        const {\n          x,\n          y\n        } = this;\n        const [absX, absY] = [Math.abs(x), Math.abs(y)];\n        return absX > absY && x >= 0 ? 'right' : absX > absY && x <= 0 ? 'left' : absY > absX && y >= 0 ? 'down' : absY > absX && y <= 0 ? 'up' : oops();\n      }\n    };\n  }\n  return {\n    addMovement,\n    endTouch,\n    getVelocity\n  };\n}\nfunction oops() {\n  throw new Error();\n}\n//# sourceMappingURL=touch.mjs.map","// Composables\nimport { useVelocity } from \"../../composables/touch.mjs\"; // Utilities\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue';\n\n// Types\n\nexport function useTouch(_ref) {\n  let {\n    isActive,\n    isTemporary,\n    width,\n    touchless,\n    position\n  } = _ref;\n  onMounted(() => {\n    window.addEventListener('touchstart', onTouchstart, {\n      passive: true\n    });\n    window.addEventListener('touchmove', onTouchmove, {\n      passive: false\n    });\n    window.addEventListener('touchend', onTouchend, {\n      passive: true\n    });\n  });\n  onBeforeUnmount(() => {\n    window.removeEventListener('touchstart', onTouchstart);\n    window.removeEventListener('touchmove', onTouchmove);\n    window.removeEventListener('touchend', onTouchend);\n  });\n  const isHorizontal = computed(() => ['left', 'right'].includes(position.value));\n  const {\n    addMovement,\n    endTouch,\n    getVelocity\n  } = useVelocity();\n  let maybeDragging = false;\n  const isDragging = ref(false);\n  const dragProgress = ref(0);\n  const offset = ref(0);\n  let start;\n  function getOffset(pos, active) {\n    return (position.value === 'left' ? pos : position.value === 'right' ? document.documentElement.clientWidth - pos : position.value === 'top' ? pos : position.value === 'bottom' ? document.documentElement.clientHeight - pos : oops()) - (active ? width.value : 0);\n  }\n  function getProgress(pos) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const progress = position.value === 'left' ? (pos - offset.value) / width.value : position.value === 'right' ? (document.documentElement.clientWidth - pos - offset.value) / width.value : position.value === 'top' ? (pos - offset.value) / width.value : position.value === 'bottom' ? (document.documentElement.clientHeight - pos - offset.value) / width.value : oops();\n    return limit ? Math.max(0, Math.min(1, progress)) : progress;\n  }\n  function onTouchstart(e) {\n    if (touchless.value) return;\n    const touchX = e.changedTouches[0].clientX;\n    const touchY = e.changedTouches[0].clientY;\n    const touchZone = 25;\n    const inTouchZone = position.value === 'left' ? touchX < touchZone : position.value === 'right' ? touchX > document.documentElement.clientWidth - touchZone : position.value === 'top' ? touchY < touchZone : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - touchZone : oops();\n    const inElement = isActive.value && (position.value === 'left' ? touchX < width.value : position.value === 'right' ? touchX > document.documentElement.clientWidth - width.value : position.value === 'top' ? touchY < width.value : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - width.value : oops());\n    if (inTouchZone || inElement || isActive.value && isTemporary.value) {\n      maybeDragging = true;\n      start = [touchX, touchY];\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, isActive.value);\n      dragProgress.value = getProgress(isHorizontal.value ? touchX : touchY);\n      endTouch(e);\n      addMovement(e);\n    }\n  }\n  function onTouchmove(e) {\n    const touchX = e.changedTouches[0].clientX;\n    const touchY = e.changedTouches[0].clientY;\n    if (maybeDragging) {\n      if (!e.cancelable) {\n        maybeDragging = false;\n        return;\n      }\n      const dx = Math.abs(touchX - start[0]);\n      const dy = Math.abs(touchY - start[1]);\n      const thresholdMet = isHorizontal.value ? dx > dy && dx > 3 : dy > dx && dy > 3;\n      if (thresholdMet) {\n        isDragging.value = true;\n        maybeDragging = false;\n      } else if ((isHorizontal.value ? dy : dx) > 3) {\n        maybeDragging = false;\n      }\n    }\n    if (!isDragging.value) return;\n    e.preventDefault();\n    addMovement(e);\n    const progress = getProgress(isHorizontal.value ? touchX : touchY, false);\n    dragProgress.value = Math.max(0, Math.min(1, progress));\n    if (progress > 1) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, true);\n    } else if (progress < 0) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, false);\n    }\n  }\n  function onTouchend(e) {\n    maybeDragging = false;\n    if (!isDragging.value) return;\n    addMovement(e);\n    isDragging.value = false;\n    const velocity = getVelocity(e.changedTouches[0].identifier);\n    const vx = Math.abs(velocity.x);\n    const vy = Math.abs(velocity.y);\n    const thresholdMet = isHorizontal.value ? vx > vy && vx > 400 : vy > vx && vy > 3;\n    if (thresholdMet) {\n      isActive.value = velocity.direction === ({\n        left: 'right',\n        right: 'left',\n        top: 'down',\n        bottom: 'up'\n      }[position.value] || oops());\n    } else {\n      isActive.value = dragProgress.value > 0.5;\n    }\n  }\n  const dragStyles = computed(() => {\n    return isDragging.value ? {\n      transform: position.value === 'left' ? `translateX(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === 'right' ? `translateX(calc(100% - ${dragProgress.value * width.value}px))` : position.value === 'top' ? `translateY(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === 'bottom' ? `translateY(calc(100% - ${dragProgress.value * width.value}px))` : oops(),\n      transition: 'none'\n    } : undefined;\n  });\n  return {\n    isDragging,\n    dragProgress,\n    dragStyles\n  };\n}\nfunction oops() {\n  throw new Error();\n}\n//# sourceMappingURL=touch.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VNavigationDrawer.css\";\n\n// Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useDisplay } from \"../../composables/display.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRouter } from \"../../composables/router.mjs\";\nimport { useRtl } from \"../../composables/index.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { useSticky } from \"./sticky.mjs\";\nimport { useTouch } from \"./touch.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeMount, ref, toRef, Transition, watch } from 'vue';\nimport { convertToUnit, genericComponent, toPhysical, useRender } from \"../../util/index.mjs\"; // Types\nconst locations = ['start', 'end', 'left', 'right', 'top', 'bottom'];\nexport const VNavigationDrawer = genericComponent()({\n  name: 'VNavigationDrawer',\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    permanent: Boolean,\n    rail: {\n      type: Boolean,\n      default: null\n    },\n    railWidth: {\n      type: [Number, String],\n      default: 56\n    },\n    scrim: {\n      type: [String, Boolean],\n      default: true\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256\n    },\n    location: {\n      type: String,\n      default: 'start',\n      validator: value => locations.includes(value)\n    },\n    sticky: Boolean,\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({\n      tag: 'nav'\n    }),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': val => true,\n    'update:rail': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      mobile\n    } = useDisplay();\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const router = useRouter();\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const rootEl = ref();\n    const isHovering = ref(false);\n    const width = computed(() => {\n      return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);\n    });\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value);\n    });\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary));\n    const isSticky = computed(() => props.sticky && !isTemporary.value && location.value !== 'bottom');\n    if (props.expandOnHover && props.rail != null) {\n      watch(isHovering, val => emit('update:rail', !val));\n    }\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && nextTick(() => isActive.value = !val));\n    }\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false));\n    }\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true;\n    });\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return;\n      isActive.value = props.permanent || !mobile.value;\n    });\n    const {\n      isDragging,\n      dragProgress,\n      dragStyles\n    } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location\n    });\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;\n      return isDragging.value ? size * dragProgress.value : size;\n    });\n    const {\n      layoutItemStyles,\n      layoutRect,\n      layoutItemScrimStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() =>\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      props.absolute || isSticky.value && typeof isStuck.value !== 'string')\n    });\n    const {\n      isStuck,\n      stickyStyles\n    } = useSticky({\n      rootEl,\n      isSticky,\n      layoutItemStyles\n    });\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const scrimStyles = computed(() => ({\n      ...(isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none'\n      } : undefined),\n      ...(layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom)\n      } : undefined),\n      ...layoutItemScrimStyles.value\n    }));\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent'\n      }\n    });\n    useRender(() => {\n      const hasImage = slots.image || props.image;\n      return _createVNode(_Fragment, null, [_createVNode(props.tag, _mergeProps({\n        \"ref\": rootEl,\n        \"onMouseenter\": () => isHovering.value = true,\n        \"onMouseleave\": () => isHovering.value = false,\n        \"class\": ['v-navigation-drawer', `v-navigation-drawer--${location.value}`, {\n          'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n          'v-navigation-drawer--floating': props.floating,\n          'v-navigation-drawer--is-hovering': isHovering.value,\n          'v-navigation-drawer--rail': props.rail,\n          'v-navigation-drawer--temporary': isTemporary.value,\n          'v-navigation-drawer--active': isActive.value,\n          'v-navigation-drawer--sticky': isSticky.value\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, dragStyles.value, ssrBootStyles.value, stickyStyles.value]\n      }, attrs), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-navigation-drawer__img\"\n        }, [slots.image ? slots.image?.({\n          image: props.image\n        }) : _createVNode(\"img\", {\n          \"src\": props.image,\n          \"alt\": \"\"\n        }, null)]), slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__prepend\"\n        }, [slots.prepend?.()]), _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__content\"\n        }, [slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__append\"\n        }, [slots.append?.()])]\n      }), _createVNode(Transition, {\n        \"name\": \"fade-transition\"\n      }, {\n        default: () => [isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && _createVNode(\"div\", {\n          \"class\": ['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value],\n          \"style\": [scrimStyles.value, scrimColor.backgroundColorStyles.value],\n          \"onClick\": () => isActive.value = false\n        }, null)]\n      })]);\n    });\n    return {\n      isStuck\n    };\n  }\n});\n//# sourceMappingURL=VNavigationDrawer.mjs.map","// Imports\nimport { onBeforeUpdate, ref } from 'vue';\nexport function useRefs() {\n  const refs = ref([]);\n  onBeforeUpdate(() => refs.value = []);\n  function updateRef(e, i) {\n    refs.value[i] = e;\n  }\n  return {\n    refs,\n    updateRef\n  };\n}\n//# sourceMappingURL=refs.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VPagination.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps } from \"../../composables/border.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\";\nimport { makeElevationProps } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useDisplay } from \"../../composables/index.mjs\";\nimport { useLocale, useRtl } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRefs } from \"../../composables/refs.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\"; // Utilities\nimport { computed, nextTick, ref, toRef } from 'vue';\nimport { createRange, genericComponent, keyValues, useRender } from \"../../util/index.mjs\"; // Types\nexport const VPagination = genericComponent()({\n  name: 'VPagination',\n  props: {\n    activeColor: String,\n    start: {\n      type: [Number, String],\n      default: 1\n    },\n    modelValue: {\n      type: Number,\n      default: props => props.start\n    },\n    disabled: Boolean,\n    length: {\n      type: [Number, String],\n      default: 1,\n      validator: val => val % 1 === 0\n    },\n    totalVisible: [Number, String],\n    firstIcon: {\n      type: IconValue,\n      default: '$first'\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev'\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next'\n    },\n    lastIcon: {\n      type: IconValue,\n      default: '$last'\n    },\n    ariaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.root'\n    },\n    pageAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.page'\n    },\n    currentPageAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.currentPage'\n    },\n    firstAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.first'\n    },\n    previousAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.previous'\n    },\n    nextAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.next'\n    },\n    lastAriaLabel: {\n      type: String,\n      default: '$vuetify.pagination.ariaLabel.last'\n    },\n    ellipsis: {\n      type: String,\n      default: '...'\n    },\n    showFirstLastPage: Boolean,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'nav'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n  emits: {\n    'update:modelValue': value => true,\n    first: value => true,\n    prev: value => true,\n    next: value => true,\n    last: value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const page = useProxiedModel(props, 'modelValue');\n    const {\n      t,\n      n\n    } = useLocale();\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      width\n    } = useDisplay();\n    const maxButtons = ref(-1);\n    provideDefaults(undefined, {\n      scoped: true\n    });\n    const {\n      resizeRef\n    } = useResizeObserver(entries => {\n      if (!entries.length) return;\n      const {\n        target,\n        contentRect\n      } = entries[0];\n      const firstItem = target.querySelector('.v-pagination__list > *');\n      if (!firstItem) return;\n      const totalWidth = contentRect.width;\n      const itemWidth = firstItem.offsetWidth + parseFloat(getComputedStyle(firstItem).marginRight) * 2;\n      maxButtons.value = getMax(totalWidth, itemWidth);\n    });\n    const length = computed(() => parseInt(props.length, 10));\n    const start = computed(() => parseInt(props.start, 10));\n    const totalVisible = computed(() => {\n      if (props.totalVisible) return parseInt(props.totalVisible, 10);else if (maxButtons.value >= 0) return maxButtons.value;\n      return getMax(width.value, 58);\n    });\n    function getMax(totalWidth, itemWidth) {\n      const minButtons = props.showFirstLastPage ? 5 : 3;\n      return Math.max(0, Math.floor(\n      // Round to two decimal places to avoid floating point errors\n      +((totalWidth - itemWidth * minButtons) / itemWidth).toFixed(2)));\n    }\n    const range = computed(() => {\n      if (length.value <= 0 || isNaN(length.value) || length.value > Number.MAX_SAFE_INTEGER) return [];\n      if (totalVisible.value <= 1) return [page.value];\n      if (length.value <= totalVisible.value) {\n        return createRange(length.value, start.value);\n      }\n      const even = totalVisible.value % 2 === 0;\n      const middle = even ? totalVisible.value / 2 : Math.floor(totalVisible.value / 2);\n      const left = even ? middle : middle + 1;\n      const right = length.value - middle;\n      if (left - page.value >= 0) {\n        return [...createRange(Math.max(1, totalVisible.value - 1), start.value), props.ellipsis, length.value];\n      } else if (page.value - right >= (even ? 1 : 0)) {\n        const rangeLength = totalVisible.value - 1;\n        const rangeStart = length.value - rangeLength + start.value;\n        return [start.value, props.ellipsis, ...createRange(rangeLength, rangeStart)];\n      } else {\n        const rangeLength = Math.max(1, totalVisible.value - 3);\n        const rangeStart = rangeLength === 1 ? page.value : page.value - Math.ceil(rangeLength / 2) + start.value;\n        return [start.value, props.ellipsis, ...createRange(rangeLength, rangeStart), props.ellipsis, length.value];\n      }\n    });\n\n    // TODO: 'first' | 'prev' | 'next' | 'last' does not work here?\n    function setValue(e, value, event) {\n      e.preventDefault();\n      page.value = value;\n      event && emit(event, value);\n    }\n    const {\n      refs,\n      updateRef\n    } = useRefs();\n    provideDefaults({\n      VPaginationBtn: {\n        color: toRef(props, 'color'),\n        border: toRef(props, 'border'),\n        density: toRef(props, 'density'),\n        size: toRef(props, 'size'),\n        variant: toRef(props, 'variant'),\n        rounded: toRef(props, 'rounded'),\n        elevation: toRef(props, 'elevation')\n      }\n    });\n    const items = computed(() => {\n      return range.value.map((item, index) => {\n        const ref = e => updateRef(e, index);\n        if (typeof item === 'string') {\n          return {\n            isActive: false,\n            key: `ellipsis-${index}`,\n            page: item,\n            props: {\n              ref,\n              ellipsis: true,\n              icon: true,\n              disabled: true\n            }\n          };\n        } else {\n          const isActive = item === page.value;\n          return {\n            isActive,\n            key: item,\n            page: n(item),\n            props: {\n              ref,\n              ellipsis: false,\n              icon: true,\n              disabled: !!props.disabled || props.length < 2,\n              color: isActive ? props.activeColor : props.color,\n              ariaCurrent: isActive,\n              ariaLabel: t(isActive ? props.currentPageAriaLabel : props.pageAriaLabel, item),\n              onClick: e => setValue(e, item)\n            }\n          };\n        }\n      });\n    });\n    const controls = computed(() => {\n      const prevDisabled = !!props.disabled || page.value <= start.value;\n      const nextDisabled = !!props.disabled || page.value >= start.value + length.value - 1;\n      return {\n        first: props.showFirstLastPage ? {\n          icon: isRtl.value ? props.lastIcon : props.firstIcon,\n          onClick: e => setValue(e, start.value, 'first'),\n          disabled: prevDisabled,\n          ariaLabel: t(props.firstAriaLabel),\n          ariaDisabled: prevDisabled\n        } : undefined,\n        prev: {\n          icon: isRtl.value ? props.nextIcon : props.prevIcon,\n          onClick: e => setValue(e, page.value - 1, 'prev'),\n          disabled: prevDisabled,\n          ariaLabel: t(props.previousAriaLabel),\n          ariaDisabled: prevDisabled\n        },\n        next: {\n          icon: isRtl.value ? props.prevIcon : props.nextIcon,\n          onClick: e => setValue(e, page.value + 1, 'next'),\n          disabled: nextDisabled,\n          ariaLabel: t(props.nextAriaLabel),\n          ariaDisabled: nextDisabled\n        },\n        last: props.showFirstLastPage ? {\n          icon: isRtl.value ? props.firstIcon : props.lastIcon,\n          onClick: e => setValue(e, start.value + length.value - 1, 'last'),\n          disabled: nextDisabled,\n          ariaLabel: t(props.lastAriaLabel),\n          ariaDisabled: nextDisabled\n        } : undefined\n      };\n    });\n    function updateFocus() {\n      const currentIndex = page.value - start.value;\n      refs.value[currentIndex]?.$el.focus();\n    }\n    function onKeydown(e) {\n      if (e.key === keyValues.left && !props.disabled && page.value > props.start) {\n        page.value = page.value - 1;\n        nextTick(updateFocus);\n      } else if (e.key === keyValues.right && !props.disabled && page.value < start.value + length.value - 1) {\n        page.value = page.value + 1;\n        nextTick(updateFocus);\n      }\n    }\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": resizeRef,\n      \"class\": ['v-pagination', themeClasses.value],\n      \"role\": \"navigation\",\n      \"aria-label\": t(props.ariaLabel),\n      \"onKeydown\": onKeydown,\n      \"data-test\": \"v-pagination-root\"\n    }, {\n      default: () => [_createVNode(\"ul\", {\n        \"class\": \"v-pagination__list\"\n      }, [props.showFirstLastPage && _createVNode(\"li\", {\n        \"key\": \"first\",\n        \"class\": \"v-pagination__first\",\n        \"data-test\": \"v-pagination-first\"\n      }, [slots.first ? slots.first(controls.value.first) : _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VPaginationBtn\"\n      }, controls.value.first), null)]), _createVNode(\"li\", {\n        \"key\": \"prev\",\n        \"class\": \"v-pagination__prev\",\n        \"data-test\": \"v-pagination-prev\"\n      }, [slots.prev ? slots.prev(controls.value.prev) : _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VPaginationBtn\"\n      }, controls.value.prev), null)]), items.value.map((item, index) => _createVNode(\"li\", {\n        \"key\": item.key,\n        \"class\": ['v-pagination__item', {\n          'v-pagination__item--is-active': item.isActive\n        }],\n        \"data-test\": \"v-pagination-item\"\n      }, [slots.item ? slots.item(item) : _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VPaginationBtn\"\n      }, item.props), {\n        default: () => [item.page]\n      })])), _createVNode(\"li\", {\n        \"key\": \"next\",\n        \"class\": \"v-pagination__next\",\n        \"data-test\": \"v-pagination-next\"\n      }, [slots.next ? slots.next(controls.value.next) : _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VPaginationBtn\"\n      }, controls.value.next), null)]), props.showFirstLastPage && _createVNode(\"li\", {\n        \"key\": \"last\",\n        \"class\": \"v-pagination__last\",\n        \"data-test\": \"v-pagination-last\"\n      }, [slots.last ? slots.last(controls.value.last) : _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VPaginationBtn\"\n      }, controls.value.last), null)])])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VPagination.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VRadio = genericComponent()({\n  name: 'VRadio',\n  props: {\n    ...makeSelectionControlProps({\n      falseIcon: '$radioOff',\n      trueIcon: '$radioOn'\n    })\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(VSelectionControl, _mergeProps(props, {\n      \"class\": \"v-radio\",\n      \"type\": \"radio\"\n    }), slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VRadio.mjs.map","import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VRadioGroup.css\";\n\n// Components\nimport { filterControlProps } from \"../VSelectionControl/VSelectionControl.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\"; // Types\nexport const VRadioGroup = genericComponent()({\n  name: 'VRadioGroup',\n  inheritAttrs: false,\n  props: {\n    height: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    ...makeVInputProps(),\n    ...omit(makeSelectionControlGroupProps(), ['multiple']),\n    trueIcon: {\n      type: IconValue,\n      default: '$radioOn'\n    },\n    falseIcon: {\n      type: IconValue,\n      default: '$radioOff'\n    },\n    type: {\n      type: String,\n      default: 'radio'\n    }\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const uid = getUid();\n    const id = computed(() => props.id || `radio-group-${uid}`);\n    const model = useProxiedModel(props, 'modelValue');\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [controlProps, _2] = filterControlProps({\n        ...props,\n        multiple: false\n      });\n      const label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      return _createVNode(VInput, _mergeProps({\n        \"class\": \"v-radio-group\"\n      }, inputAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"id\": id.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly\n          } = _ref2;\n          return _createVNode(_Fragment, null, [label && _createVNode(VLabel, {\n            \"id\": id.value\n          }, {\n            default: () => [label]\n          }), _createVNode(VSelectionControlGroup, _mergeProps(controlProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"defaultsTarget\": \"VRadio\",\n            \"trueIcon\": props.trueIcon,\n            \"falseIcon\": props.falseIcon,\n            \"type\": props.type,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"aria-labelledby\": label ? id.value : undefined\n          }, controlAttrs, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": $event => model.value = $event\n          }), slots)]);\n        }\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VRadioGroup.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSwitch.css\";\n\n// Components\nimport { filterControlProps, makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Composables\nimport { LoaderSlot, useLoader } from \"../../composables/loader.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utility\nimport { computed, ref } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, useRender } from \"../../util/index.mjs\"; // Types\nexport const VSwitch = genericComponent()({\n  name: 'VSwitch',\n  inheritAttrs: false,\n  props: {\n    indeterminate: Boolean,\n    inset: Boolean,\n    flat: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    ...makeVInputProps(),\n    ...makeSelectionControlProps()\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': () => true,\n    'update:indeterminate': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== '' ? props.loading : props.color;\n    });\n    const uid = getUid();\n    const id = computed(() => props.id || `switch-${uid}`);\n    function onChange() {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [controlProps, _2] = filterControlProps(props);\n      const control = ref();\n      function onClick() {\n        control.value?.input?.click();\n      }\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-switch', {\n          'v-switch--inset': props.inset\n        }, {\n          'v-switch--indeterminate': indeterminate.value\n        }, loaderClasses.value]\n      }, inputAttrs, inputProps, {\n        \"id\": id.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VSelectionControl, _mergeProps({\n            \"ref\": control\n          }, controlProps, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"type\": \"checkbox\",\n            \"aria-checked\": indeterminate.value ? 'mixed' : undefined,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }, controlAttrs), {\n            ...slots,\n            default: () => _createVNode(\"div\", {\n              \"class\": \"v-switch__track\",\n              \"onClick\": onClick\n            }, null),\n            input: _ref3 => {\n              let {\n                textColorClasses,\n                textColorStyles\n              } = _ref3;\n              return _createVNode(\"div\", {\n                \"class\": ['v-switch__thumb', textColorClasses.value],\n                \"style\": textColorStyles.value\n              }, [props.loading && _createVNode(LoaderSlot, {\n                \"name\": \"v-switch\",\n                \"active\": true,\n                \"color\": isValid.value === false ? undefined : loaderColor.value\n              }, {\n                default: slotProps => slots.loader ? slots.loader(slotProps) : _createVNode(VProgressCircular, {\n                  \"active\": slotProps.isActive,\n                  \"color\": slotProps.color,\n                  \"indeterminate\": true,\n                  \"size\": \"16\",\n                  \"width\": \"2\"\n                }, null)\n              })]);\n            }\n          });\n        }\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VSwitch.mjs.map","import { vModelText as _vModelText, withDirectives as _withDirectives, mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\";\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: {\n    autoGrow: Boolean,\n    autofocus: Boolean,\n    counter: [Boolean, Number, String],\n    counterValue: Function,\n    hint: String,\n    persistentHint: Boolean,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    noResize: Boolean,\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: v => !isNaN(parseFloat(v))\n    },\n    maxRows: {\n      type: [Number, String],\n      validator: v => !isNaN(parseFloat(v))\n    },\n    suffix: String,\n    ...makeVInputProps(),\n    ...makeVFieldProps()\n  },\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting) return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const controlHeight = ref('');\n    const textareaRef = ref();\n    const isActive = computed(() => isFocused.value || props.persistentPlaceholder);\n    const messages = computed(() => {\n      return props.messages.length ? props.messages : isActive.value || props.persistentHint ? props.hint : '';\n    });\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      model.value = e.target.value;\n    }\n    const sizerRef = ref();\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        const style = getComputedStyle(sizerRef.value);\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        const height = sizerRef.value.scrollHeight;\n        const lineHeight = parseFloat(style.lineHeight);\n        const minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        const maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        controlHeight.value = convertToUnit(clamp(height ?? 0, minHeight, maxHeight));\n      });\n    }\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(() => props.rows, calculateInputHeight);\n    watch(() => props.maxRows, calculateInputHeight);\n    watch(() => props.density, calculateInputHeight);\n    let observer;\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        observer?.disconnect();\n      }\n    });\n    onBeforeUnmount(() => {\n      observer?.disconnect();\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = filterInputProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-text-field--flush-details': ['plain', 'underlined'].includes(props.variant)\n        }],\n        \"onClick:prepend\": props['onClick:prepend'],\n        \"onClick:append\": props['onClick:append']\n      }, rootAttrs, inputProps, {\n        \"focused\": isFocused.value,\n        \"messages\": messages.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner'],\n            \"role\": \"textbox\"\n          }, fieldProps, {\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createVNode(\"textarea\", {\n                \"class\": [fieldClass, 'v-textarea__sizer'],\n                \"onUpdate:modelValue\": $event => model.value = $event,\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});\n//# sourceMappingURL=VTextarea.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VTooltip.css\";\n\n// Components\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, mergeProps, ref } from 'vue';\nimport { genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\"; // Types\nexport const VTooltip = genericComponent()({\n  name: 'VTooltip',\n  props: {\n    id: String,\n    text: String,\n    ...omit(makeVOverlayProps({\n      closeOnBack: false,\n      location: 'end',\n      locationStrategy: 'connected',\n      minWidth: 0,\n      offset: 10,\n      openOnClick: false,\n      openOnHover: true,\n      origin: 'auto',\n      scrim: false,\n      scrollStrategy: 'reposition',\n      transition: false\n    }), ['absolute', 'persistent', 'eager'])\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const uid = getUid();\n    const id = computed(() => props.id || `v-tooltip-${uid}`);\n    const overlay = ref();\n    const location = computed(() => {\n      return props.location.split(' ').length > 1 ? props.location : props.location + ' center';\n    });\n    const origin = computed(() => {\n      return props.origin === 'auto' || props.origin === 'overlap' || props.origin.split(' ').length > 1 || props.location.split(' ').length > 1 ? props.origin : props.origin + ' center';\n    });\n    const transition = computed(() => {\n      if (props.transition) return props.transition;\n      return isActive.value ? 'scale-transition' : 'fade-transition';\n    });\n    const activatorProps = computed(() => mergeProps({\n      'aria-describedby': id.value\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-tooltip'],\n        \"id\": id.value\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"transition\": transition.value,\n        \"absolute\": true,\n        \"location\": location.value,\n        \"origin\": origin.value,\n        \"persistent\": true,\n        \"role\": \"tooltip\",\n        \"eager\": true,\n        \"activatorProps\": activatorProps.value,\n        \"_disableGlobalStack\": true\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return slots.default?.(...args) ?? props.text;\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VTooltip.mjs.map","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nexport enum GameItemType {\r\n    Unknown = 0,\r\n    Solid = 1,\r\n    Liquid,\r\n    Gas,\r\n    Fluid,\r\n    Countable,\r\n    Loose,\r\n    Molten,\r\n    Energy,\r\n    Special,\r\n}\r\n\r\nexport const GameRecipeIOFlags = {\r\n    None: 0,\r\n    HasProbability: 1,\r\n    HideInMenu: 4,\r\n    HideOnWindow: 8,\r\n    RoundToCeil: 16,\r\n} as const;\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem} from '#types/game-data';\r\nimport type {RecipeIOModel, TransportModel} from './model/store';\r\n\r\nconst decimals = 3;\r\nconst upperPrefixes = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'R', 'Q'];\r\nconst lowerPrefixes = ['m', 'μ', 'n', 'p', 'f', 'a', 'z', 'y', 'r', 'q'];\r\n\r\nfunction formatDigits(n: number, prefix?: string, units?: string) {\r\n    return parseFloat((n).toPrecision(decimals)).toString() + (prefix || '') + (units || '');\r\n}\r\n\r\nexport function formatNumber(n: number | undefined, units?: string) {\r\n    if(n === undefined)\r\n        return '';\r\n    if(n === 0)\r\n        return '0' + (units || '');\r\n\r\n    const abs = Math.abs(n);\r\n    let i = 0;\r\n    let prefix: string | undefined = undefined;\r\n    if(abs >= 1) {\r\n        const exponent = Math.floor((Math.log(abs) / Math.log(10)) + Number.EPSILON);\r\n        if(exponent < 3)\r\n            return formatDigits(n, units);\r\n        i = Math.floor(exponent / 3);\r\n        prefix = upperPrefixes[i - 1];\r\n    } else {\r\n        const exponent = Math.floor((Math.log(abs) / Math.log(10)) - Number.EPSILON);\r\n        if(exponent > -3)\r\n            return formatDigits(n, units);\r\n        i = Math.floor(exponent / 3);\r\n        prefix = lowerPrefixes[(-i) - 1];\r\n    }\r\n\r\n    if(prefix === undefined) {\r\n        //not convertable\r\n        return n.toExponential(decimals);\r\n    }\r\n    const base = n / (1000 ** i);\r\n    return formatDigits(base, prefix, units);\r\n}\r\n\r\nexport function formatIo(n: number | undefined, io: RecipeIOModel) {\r\n    if(n === undefined)\r\n        return '';\r\n    const format = io.formatCountPerSecond(n);\r\n    return formatNumber(format.count, format.unit);\r\n}\r\n\r\nexport function formatTransport(n: number | undefined, transport: TransportModel) {\r\n    if(n === undefined)\r\n        return '';\r\n    const format = transport.formatCountPerSecond(n);\r\n    return formatNumber(format.count, format.unit);\r\n}\r\n\r\nexport function formatItem(n: number | undefined, item: GameItem) {\r\n    if(n === undefined)\r\n        return '';\r\n    const format = item.formatCountPerSecond(n);\r\n    return formatNumber(format.count, format.unit);\r\n}\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {GameItemType} from '#types/constants';\r\nimport {formatItem} from '@/scripts/format';\r\nimport type {SummaryTotal} from '@/scripts/model/store';\r\nimport {computed} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    total: SummaryTotal;\r\n    compact?: boolean;\r\n    format?: boolean;\r\n}>();\r\n\r\nconst totalCountPerSecond = computed(() => (props.format\r\n    ? formatItem(props.total.totalCountPerSecond, props.total.sampleItem)\r\n    : props.total.totalCountPerSecond)\r\n    || '');\r\n\r\nconst typeLables: Record<GameItemType, string> = {\r\n    [GameItemType.Unknown]: '',\r\n    [GameItemType.Solid]: 'Solid',\r\n    [GameItemType.Liquid]: 'Liquid',\r\n    [GameItemType.Gas]: 'Gas',\r\n    [GameItemType.Fluid]: 'Fluid',\r\n    [GameItemType.Countable]: 'Countable',\r\n    [GameItemType.Loose]: 'Loose',\r\n    [GameItemType.Molten]: 'Molten',\r\n    [GameItemType.Energy]: 'Energy',\r\n    [GameItemType.Special]: 'Special',\r\n};\r\n</script>\r\n\r\n<template>\r\n    <v-list-item :class=\"props.compact ? 'pl-0' : ''\">\r\n        <template #prepend>\r\n            <div v-if=\"props.compact\" class=\"text-caption text-info font-weight-bold\">\r\n                {{ totalCountPerSecond }}\r\n            </div>\r\n        </template>\r\n        <template #title>\r\n            <div v-if=\"!props.compact\" class=\"pl-2 text-body-2 text-info font-weight-bold\">\r\n                {{ totalCountPerSecond }}\r\n                {{ ` Total ${typeLables[props.total.type]}` }}\r\n            </div>\r\n        </template>\r\n    </v-list-item>\r\n</template>\r\n","import { shallowRef, watchEffect, readonly, unref, ref, isVue3, version, watch, customRef, getCurrentScope, onScopeDispose, effectScope, provide, inject, isRef, computed, reactive, toRefs as toRefs$1, toRef, isVue2, set as set$1, getCurrentInstance, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, __spreadProps$6(__spreadValues$9({}, options), {\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  }));\n  return readonly(result);\n}\n\nvar _a;\nconst isClient = typeof window !== \"undefined\";\nconst isDef = (val) => typeof val !== \"undefined\";\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isString = (val) => typeof val === \"string\";\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst isWindow = (val) => typeof window !== \"undefined\" && toString.call(val) === \"[object Window]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\n\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  const filter = (invoke) => {\n    const duration = resolveUnref(ms);\n    const maxDuration = resolveUnref(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(invoke());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(ms, trailing = true, leading = true, rejectOnCancel = false) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = resolveUnref(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nfunction __onlyVue3(name = \"this function\") {\n  if (isVue3)\n    return;\n  throw new Error(`[VueUse] ${name} is only works on Vue 3.`);\n}\nfunction __onlyVue27Plus(name = \"this function\") {\n  if (isVue3 || version.startsWith(\"2.7.\"))\n    return;\n  throw new Error(`[VueUse] ${name} is only works on Vue 2.7 or above.`);\n}\nconst directiveHooks = {\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\n};\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = isFunction(fn) ? fn : fn.get;\n  const set = isFunction(fn) ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = [];\n  const off = (fn) => {\n    const index = fns.indexOf(fn);\n    if (index !== -1)\n      fns.splice(index, 1);\n  };\n  const on = (fn) => {\n    fns.push(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (param) => {\n    fns.forEach((fn) => fn(param));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return () => {\n    if (!initialized) {\n      state = scope.run(stateFactory);\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nfunction createInjectionState(composable) {\n  const key = Symbol(\"InjectionState\");\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provide(key, state);\n    return state;\n  };\n  const useInjectedState = () => inject(key);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  __onlyVue27Plus();\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = __spreadValues$8({}, obj);\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : resolveUnref;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(keys.map((key) => {\n    const value = obj[key];\n    return [\n      key,\n      typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n    ];\n  }));\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  return reactiveComputed(() => Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  return reactive(Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = defaultValue;\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = defaultValue;\n      trigger();\n    }, resolveUnref(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(debounceFilter(ms, options), fn);\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(throttleFilter(ms, trailing, leading, rejectOnCancel), fn);\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(ref, {\n    get,\n    set,\n    untrackedGet,\n    silentSet,\n    peek,\n    lay\n  }, { enumerable: true });\n}\nconst controlledRef = refWithControl;\n\nfunction resolveRef(r) {\n  return typeof r === \"function\" ? computed(r) : ref(r);\n}\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction syncRef(left, right, options = {}) {\n  var _a, _b;\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options;\n  let watchLeft;\n  let watchRight;\n  const transformLTR = (_a = transform.ltr) != null ? _a : (v) => v;\n  const transformRTL = (_b = transform.rtl) != null ? _b : (v) => v;\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchLeft = watch(left, (newValue) => right.value = transformLTR(newValue), { flush, deep, immediate });\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchRight = watch(right, (newValue) => left.value = transformRTL(newValue), { flush, deep, immediate });\n  }\n  return () => {\n    watchLeft == null ? void 0 : watchLeft();\n    watchRight == null ? void 0 : watchRight();\n  };\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(source, (newValue) => targets.forEach((target) => target.value = newValue), { flush, deep, immediate });\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction toRefs(objectRef) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        if (Array.isArray(objectRef.value)) {\n          const copy = [...objectRef.value];\n          copy[key] = v;\n          objectRef.value = copy;\n        } else {\n          const newObject = __spreadProps$5(__spreadValues$7({}, objectRef.value), { [key]: v });\n          Object.setPrototypeOf(newObject, objectRef.value);\n          objectRef.value = newObject;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true) {\n  if (getCurrentInstance())\n    onBeforeMount(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn) {\n  if (getCurrentInstance())\n    onBeforeUnmount(fn);\n}\n\nfunction tryOnMounted(fn, sync = true) {\n  if (getCurrentInstance())\n    onMounted(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn) {\n  if (getCurrentInstance())\n    onUnmounted(fn);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(r, (v) => {\n        if (condition(v) !== isNot) {\n          stop == null ? void 0 : stop();\n          resolve(v);\n        }\n      }, {\n        flush,\n        deep,\n        immediate: true\n      });\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => stop == null ? void 0 : stop()));\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch([r, value], ([v1, v2]) => {\n        if (isNot !== (v1 === v2)) {\n          stop == null ? void 0 : stop();\n          resolve(v1);\n        }\n      }, {\n        flush,\n        deep,\n        immediate: true\n      });\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => {\n        stop == null ? void 0 : stop();\n        return resolveUnref(r);\n      }));\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(resolveUnref(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(resolveUnref(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => resolveUnref(list).every((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => resolveUnref(resolveUnref(list).find((element, index, array) => fn(resolveUnref(element), index, array))));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => resolveUnref(list).findIndex((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(() => resolveUnref(!Array.prototype.findLast ? findLast(resolveUnref(list), (element, index, array) => fn(resolveUnref(element), index, array)) : resolveUnref(list).findLast((element, index, array) => fn(resolveUnref(element), index, array))));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).join(resolveUnref(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(resolveUnref(sum), resolveUnref(value), index);\n  return computed(() => {\n    const resolved = resolveUnref(list);\n    return args.length ? resolved.reduce(reduceCallback, resolveUnref(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => resolveUnref(list).some((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction useArrayUnique(list) {\n  return computed(() => [...new Set(resolveUnref(list).map((element) => resolveUnref(element)))]);\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  const count = ref(initialValue);\n  const {\n    max = Infinity,\n    min = -Infinity\n  } = options;\n  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);\n  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = initialValue) => {\n    initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\nconst REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nconst defaultMeridiem = (hours, minutes, isLowercase, hasPeriod) => {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n};\nconst formatDate = (date, formatStr, options = {}) => {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\n    D: () => String(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => $1 || matches[match]());\n};\nconst normalizeDate = (date) => {\n  if (date === null)\n    return new Date(NaN);\n  if (date === void 0)\n    return new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n};\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(resolveUnref(date)), resolveUnref(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = resolveUnref(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || isFunction(interval)) {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(callback ? () => {\n    update();\n    callback(counter.value);\n  } : update, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$6({\n      counter,\n      reset\n    }, controls);\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(source, () => ms.value = timestamp(), options);\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, resolveUnref(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$7.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(b)) {\n      if (__propIsEnum$7.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(callback != null ? callback : noop, interval, options);\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return __spreadValues$5({\n      ready\n    }, controls);\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = resolveUnref(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${resolveUnref(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = resolveUnref(truthyValue);\n      _value.value = _value.value === truthy ? resolveUnref(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [\n    ...source instanceof Function ? source() : Array.isArray(source) ? source : unref(source)\n  ];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = new Array(oldList.length);\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __objRest$5 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchWithFilter(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$5(_a, [\n    \"eventFilter\"\n  ]);\n  return watch(source, createFilterWrapper(eventFilter, cb), watchOptions);\n}\n\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __objRest$4 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$5.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$5.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchAtMost(source, cb, options) {\n  const _a = options, {\n    count\n  } = _a, watchOptions = __objRest$4(_a, [\n    \"count\"\n  ]);\n  const current = ref(0);\n  const stop = watchWithFilter(source, (...args) => {\n    current.value += 1;\n    if (current.value >= resolveUnref(count))\n      nextTick(() => stop());\n    cb(...args);\n  }, watchOptions);\n  return { count: current, stop };\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nvar __objRest$3 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchDebounced(source, cb, options = {}) {\n  const _a = options, {\n    debounce = 0,\n    maxWait = void 0\n  } = _a, watchOptions = __objRest$3(_a, [\n    \"debounce\",\n    \"maxWait\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$4(__spreadValues$4({}, watchOptions), {\n    eventFilter: debounceFilter(debounce, { maxWait })\n  }));\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$3.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$3.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchIgnorable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$2(_a, [\n    \"eventFilter\"\n  ]);\n  const filteredCb = createFilterWrapper(eventFilter, cb);\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(source, (...args) => {\n      if (!ignore.value)\n        filteredCb(...args);\n    }, watchOptions);\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(watch(source, () => {\n      syncCounter.value++;\n    }, __spreadProps$3(__spreadValues$3({}, watchOptions), { flush: \"sync\" })));\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(watch(source, (...args) => {\n      const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n      ignoreCounter.value = 0;\n      syncCounter.value = 0;\n      if (ignore)\n        return;\n      filteredCb(...args);\n    }, watchOptions));\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchPausable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter: filter\n  } = _a, watchOptions = __objRest$1(_a, [\n    \"eventFilter\"\n  ]);\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(source, cb, __spreadProps$2(__spreadValues$2({}, watchOptions), {\n    eventFilter\n  }));\n  return { stop, pause, resume, isActive };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchThrottled(source, cb, options = {}) {\n  const _a = options, {\n    throttle = 0,\n    trailing = true,\n    leading = true\n  } = _a, watchOptions = __objRest(_a, [\n    \"throttle\",\n    \"trailing\",\n    \"leading\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$1(__spreadValues$1({}, watchOptions), {\n    eventFilter: throttleFilter(throttle, trailing, leading)\n  }));\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return __spreadProps(__spreadValues({}, res), {\n    trigger\n  });\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => getOneWatchSource(item));\n  return getOneWatchSource(sources);\n}\nfunction getOneWatchSource(source) {\n  return typeof source === \"function\" ? source() : unref(source);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  return watch(source, (v, ov, onInvalidate) => {\n    if (v)\n      cb(v, ov, onInvalidate);\n  }, options);\n}\n\nexport { __onlyVue27Plus, __onlyVue3, assert, refAutoReset as autoResetRef, bypassFilter, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, hasOwn, identity, watchIgnorable as ignorableWatch, increaseWithUnit, invoke, isBoolean, isClient, isDef, isDefined, isFunction, isIOS, isNumber, isObject, isString, isWindow, makeDestructurable, noop, normalizeDate, now, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRefs, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchIgnorable, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, resolveUnref, isClient, isString, tryOnScopeDispose, isIOS, tryOnMounted, computedWithControl, promiseTimeout, isFunction, resolveRef, increaseWithUnit, useTimeoutFn, pausableWatch, createEventHook, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, createSingletonPromise, toRefs, containsProp, until, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, isObject, isNumber, useIntervalFn, clamp, syncRef, objectPick, tryOnUnmounted, watchWithFilter, identity, isDef } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, ref, shallowRef, watchEffect, computed, inject, unref, watch, getCurrentInstance, customRef, onUpdated, reactive, nextTick, onMounted, markRaw, readonly, getCurrentScope, isVue2, set, del, isReadonly, onBeforeUpdate } from 'vue-demi';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    shallow = false,\n    onError = noop\n  } = options;\n  const started = ref(!lazy);\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nconst createUnrefFn = (fn) => {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => unref(i)));\n  };\n};\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = resolveUnref(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction useEventListener(...args) {\n  let target;\n  let events;\n  let listeners;\n  let options;\n  if (isString(args[0]) || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n  if (!target)\n    return noop;\n  if (!Array.isArray(events))\n    events = [events];\n  if (!Array.isArray(listeners))\n    listeners = [listeners];\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options2) => {\n    el.addEventListener(event, listener, options2);\n    return () => el.removeEventListener(event, listener, options2);\n  };\n  const stopWatch = watch(() => [unrefElement(target), resolveUnref(options)], ([el, options2]) => {\n    cleanup();\n    if (!el)\n      return;\n    cleanups.push(...events.flatMap((event) => {\n      return listeners.map((listener) => register(el, event, listener, options2));\n    }));\n  }, { immediate: true, flush: \"post\" });\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\n  if (!window)\n    return;\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return ignore.some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  const cleanup = [\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      if (el)\n        shouldListen = !e.composedPath().includes(el) && !shouldIgnore(e);\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      var _a;\n      const el = unrefElement(target);\n      if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement)))\n        handler(event);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nvar __defProp$n = Object.defineProperty;\nvar __defProps$9 = Object.defineProperties;\nvar __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$p = Object.getOwnPropertySymbols;\nvar __hasOwnProp$p = Object.prototype.hasOwnProperty;\nvar __propIsEnum$p = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$n = (obj, key, value) => key in obj ? __defProp$n(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$n = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$p.call(b, prop))\n      __defNormalProp$n(a, prop, b[prop]);\n  if (__getOwnPropSymbols$p)\n    for (var prop of __getOwnPropSymbols$p(b)) {\n      if (__propIsEnum$p.call(b, prop))\n        __defNormalProp$n(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));\nconst createKeyPredicate = (keyFilter) => {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n};\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const { target = defaultWindow, eventName = \"keydown\", passive = false } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$n({}, options), { eventName: \"keydown\" }));\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$n({}, options), { eventName: \"keypress\" }));\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$n({}, options), { eventName: \"keyup\" }));\n}\n\nconst DEFAULT_DELAY = 500;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    timeout = setTimeout(() => handler(ev), (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY);\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions);\n  useEventListener(elementRef, \"pointerup\", clear, listenerOptions);\n  useEventListener(elementRef, \"pointerleave\", clear, listenerOptions);\n}\n\nconst isFocusedElementEditable = () => {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n};\nconst isTypedCharValid = ({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) => {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  return false;\n};\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useActiveElement(options = {}) {\n  var _a;\n  const { window = defaultWindow } = options;\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\n  const activeElement = computedWithControl(() => null, () => document == null ? void 0 : document.activeElement);\n  if (window) {\n    useEventListener(window, \"blur\", (event) => {\n      if (event.relatedTarget !== null)\n        return;\n      activeElement.trigger();\n    }, true);\n    useEventListener(window, \"focus\", activeElement.trigger, true);\n  }\n  return activeElement;\n}\n\nfunction useAsyncQueue(tasks, options = {}) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop\n  } = options;\n  const promiseState = {\n    pending: \"pending\",\n    rejected: \"rejected\",\n    fulfilled: \"fulfilled\"\n  };\n  const initialResult = Array.from(new Array(tasks.length), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = ref(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      return curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        activeIndex.value === tasks.length - 1 && onFinished();\n        return currentRes;\n      });\n    }).catch((e) => {\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = ref(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw error;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  return {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = ref(\"\");\n  const promise = ref();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = resolveUnref(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => base64.value = res);\n    return promise.value;\n  }\n  if (isRef(target) || isFunction(target))\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useSupported(callback, sync = false) {\n  const isSupported = ref();\n  const update = () => isSupported.value = Boolean(callback());\n  update();\n  tryOnMounted(update, sync);\n  return isSupported;\n}\n\nfunction useBattery({ navigator = defaultNavigator } = {}) {\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator);\n  const charging = ref(false);\n  const chargingTime = ref(0);\n  const dischargingTime = ref(0);\n  const level = ref(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      for (const event of events)\n        useEventListener(battery, event, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = shallowRef(void 0);\n  const error = shallowRef(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = ref();\n  const isConnected = computed(() => {\n    var _a;\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\n  });\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\n      });\n      try {\n        server.value = await device.value.gatt.connect();\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected,\n    device,\n    requestDevice,\n    server,\n    error\n  };\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", update);\n    else\n      mediaQuery.removeListener(update);\n  };\n  const update = () => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(resolveRef(query).value);\n    matches.value = mediaQuery.matches;\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", update);\n    else\n      mediaQuery.addListener(update);\n  };\n  watchEffect(update);\n  tryOnScopeDispose(() => cleanup());\n  return matches;\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetify = {\n  xs: 600,\n  sm: 960,\n  md: 1264,\n  lg: 1904\n};\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 600,\n  sm: 1024,\n  md: 1440,\n  lg: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\nconst breakpointsMasterCss = {\n  \"3xs\": 360,\n  \"2xs\": 480,\n  \"xs\": 600,\n  \"sm\": 768,\n  \"md\": 1024,\n  \"lg\": 1280,\n  \"xl\": 1440,\n  \"2xl\": 1600,\n  \"3xl\": 1920,\n  \"4xl\": 2560\n};\n\nvar __defProp$m = Object.defineProperty;\nvar __getOwnPropSymbols$o = Object.getOwnPropertySymbols;\nvar __hasOwnProp$o = Object.prototype.hasOwnProperty;\nvar __propIsEnum$o = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$m = (obj, key, value) => key in obj ? __defProp$m(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$m = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$o.call(b, prop))\n      __defNormalProp$m(a, prop, b[prop]);\n  if (__getOwnPropSymbols$o)\n    for (var prop of __getOwnPropSymbols$o(b)) {\n      if (__propIsEnum$o.call(b, prop))\n        __defNormalProp$m(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = breakpoints[k];\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow } = options;\n  function match(query) {\n    if (!window)\n      return false;\n    return window.matchMedia(query).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(`(min-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => greaterOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  return __spreadValues$m({\n    greater(k) {\n      return useMediaQuery(`(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    greaterOrEqual,\n    smaller(k) {\n      return useMediaQuery(`(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    smallerOrEqual(k) {\n      return useMediaQuery(`(max-width: ${getValue(k)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(`(min-width: ${getValue(k, 0.1)})`);\n    },\n    isGreaterOrEqual(k) {\n      return match(`(min-width: ${getValue(k)})`);\n    },\n    isSmaller(k) {\n      return match(`(max-width: ${getValue(k, -0.1)})`);\n    },\n    isSmallerOrEqual(k) {\n      return match(`(max-width: ${getValue(k)})`);\n    },\n    isInBetween(a, b) {\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n    }\n  }, shortcutMethods);\n}\n\nconst useBroadcastChannel = (options) => {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = ref(false);\n  const channel = ref();\n  const data = ref();\n  const error = ref(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      channel.value.addEventListener(\"message\", (e) => {\n        data.value = e.data;\n      }, { passive: true });\n      channel.value.addEventListener(\"messageerror\", (e) => {\n        error.value = e;\n      }, { passive: true });\n      channel.value.addEventListener(\"close\", () => {\n        isClosed.value = true;\n      });\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n};\n\nfunction useBrowserLocation({ window = defaultWindow } = {}) {\n  const buildState = (trigger) => {\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (window == null ? void 0 : window.location) || {};\n    return {\n      trigger,\n      state: state2,\n      length,\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    };\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\n  const cachedValue = ref(refValue.value);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500,\n    legacy = false\n  } = options;\n  const events = [\"copy\", \"cut\"];\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\n  const text = ref(\"\");\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateText() {\n    if (isClipboardApiSupported.value) {\n      navigator.clipboard.readText().then((value) => {\n        text.value = value;\n      });\n    } else {\n      text.value = legacyRead();\n    }\n  }\n  if (isSupported.value && read) {\n    for (const event of events)\n      useEventListener(event, updateText);\n  }\n  async function copy(value = resolveUnref(source)) {\n    if (isSupported.value && value != null) {\n      if (isClipboardApiSupported.value)\n        await navigator.clipboard.writeText(value);\n      else\n        legacyCopy(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  function legacyCopy(value) {\n    const ta = document.createElement(\"textarea\");\n    ta.value = value != null ? value : \"\";\n    ta.style.position = \"absolute\";\n    ta.style.opacity = \"0\";\n    document.body.appendChild(ta);\n    ta.select();\n    document.execCommand(\"copy\");\n    ta.remove();\n  }\n  function legacyRead() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nvar __defProp$l = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$n = Object.getOwnPropertySymbols;\nvar __hasOwnProp$n = Object.prototype.hasOwnProperty;\nvar __propIsEnum$n = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$l = (obj, key, value) => key in obj ? __defProp$l(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$l = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$n.call(b, prop))\n      __defNormalProp$l(a, prop, b[prop]);\n  if (__getOwnPropSymbols$n)\n    for (var prop of __getOwnPropSymbols$n(b)) {\n      if (__propIsEnum$n.call(b, prop))\n        __defNormalProp$l(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const {\n    manual,\n    clone = cloneFnJSON,\n    deep = true,\n    immediate = true\n  } = options;\n  function sync() {\n    cloned.value = clone(unref(source));\n  }\n  if (!manual && isRef(source)) {\n    watch(source, sync, __spreadProps$8(__spreadValues$l({}, options), {\n      deep,\n      immediate\n    }));\n  } else {\n    sync();\n  }\n  return { cloned, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\n_global[globalKey] = _global[globalKey] || {};\nconst handlers = _global[globalKey];\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nvar __defProp$k = Object.defineProperty;\nvar __getOwnPropSymbols$m = Object.getOwnPropertySymbols;\nvar __hasOwnProp$m = Object.prototype.hasOwnProperty;\nvar __propIsEnum$m = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$k = (obj, key, value) => key in obj ? __defProp$k(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$k = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$m.call(b, prop))\n      __defNormalProp$k(a, prop, b[prop]);\n  if (__getOwnPropSymbols$m)\n    for (var prop of __getOwnPropSymbols$m(b)) {\n      if (__propIsEnum$m.call(b, prop))\n        __defNormalProp$k(a, prop, b[prop]);\n    }\n  return a;\n};\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const data = (shallow ? shallowRef : ref)(defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = resolveUnref(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(data, () => write(data.value), { flush, deep, eventFilter });\n  if (window && listenToStorageChanges) {\n    useEventListener(window, \"storage\", update);\n    useEventListener(window, customStorageEventName, updateFromCustomEvent);\n  }\n  update();\n  return data;\n  function write(v) {\n    try {\n      if (v == null) {\n        storage.removeItem(key);\n      } else {\n        const serialized = serializer.write(v);\n        const oldValue = storage.getItem(key);\n        if (oldValue !== serialized) {\n          storage.setItem(key, serialized);\n          if (window) {\n            window.dispatchEvent(new CustomEvent(customStorageEventName, {\n              detail: {\n                key,\n                oldValue,\n                newValue: serialized,\n                storageArea: storage\n              }\n            }));\n          }\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(key);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit !== null)\n        storage.setItem(key, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (isFunction(mergeDefaults))\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return __spreadValues$k(__spreadValues$k({}, rawInit), value);\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nvar __defProp$j = Object.defineProperty;\nvar __getOwnPropSymbols$l = Object.getOwnPropertySymbols;\nvar __hasOwnProp$l = Object.prototype.hasOwnProperty;\nvar __propIsEnum$l = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$j = (obj, key, value) => key in obj ? __defProp$j(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$j = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$l.call(b, prop))\n      __defNormalProp$j(a, prop, b[prop]);\n  if (__getOwnPropSymbols$l)\n    for (var prop of __getOwnPropSymbols$l(b)) {\n      if (__propIsEnum$l.call(b, prop))\n        __defNormalProp$j(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto\n  } = options;\n  const modes = __spreadValues$j({\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\"\n  }, options.modes || {});\n  const preferredDark = usePreferredDark({ window });\n  const preferredMode = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? ref(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed({\n    get() {\n      return store.value === \"auto\" && !emitAuto ? preferredMode.value : store.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  const updateHTMLAttrs = getSSRHandler(\"updateHTMLAttrs\", (selector2, attribute2, value) => {\n    const el = window == null ? void 0 : window.document.querySelector(selector2);\n    if (!el)\n      return;\n    if (attribute2 === \"class\") {\n      const current = value.split(/\\s/g);\n      Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n        if (current.includes(v))\n          el.classList.add(v);\n        else\n          el.classList.remove(v);\n      });\n    } else {\n      el.setAttribute(attribute2, value);\n    }\n  });\n  function defaultOnChanged(mode) {\n    var _a;\n    const resolvedMode = mode === \"auto\" ? preferredMode.value : mode;\n    updateHTMLAttrs(selector, attribute, (_a = modes[resolvedMode]) != null ? _a : resolvedMode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  if (emitAuto)\n    watch(preferredMode, () => onChanged(state.value), { flush: \"post\" });\n  tryOnMounted(() => onChanged(state.value));\n  return state;\n}\n\nfunction useConfirmDialog(revealed = ref(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nfunction useCssVar(prop, target, { window = defaultWindow, initialValue = \"\" } = {}) {\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  watch([elRef, () => resolveUnref(prop)], ([el, prop2]) => {\n    var _a;\n    if (el && window) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(prop2)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }, { immediate: true });\n  watch(variable, (val) => {\n    var _a;\n    if ((_a = elRef.value) == null ? void 0 : _a.style)\n      elRef.value.style.setProperty(resolveUnref(prop), val);\n  });\n  return variable;\n}\n\nfunction useCurrentElement() {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(() => null, () => vm.proxy.$el);\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  var _a;\n  const state = shallowRef((_a = options == null ? void 0 : options.initialValue) != null ? _a : list[0]);\n  const index = computed({\n    get() {\n      var _a2;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, list) : list.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a2 = options == null ? void 0 : options.fallbackIndex) != null ? _a2 : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const length = list.length;\n    const index2 = (i % length + length) % length;\n    const value = list[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  return {\n    state,\n    index,\n    next,\n    prev\n  };\n}\n\nvar __defProp$i = Object.defineProperty;\nvar __defProps$7 = Object.defineProperties;\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$k = Object.getOwnPropertySymbols;\nvar __hasOwnProp$k = Object.prototype.hasOwnProperty;\nvar __propIsEnum$k = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$i = (obj, key, value) => key in obj ? __defProp$i(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$i = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$k.call(b, prop))\n      __defNormalProp$i(a, prop, b[prop]);\n  if (__getOwnPropSymbols$k)\n    for (var prop of __getOwnPropSymbols$k(b)) {\n      if (__propIsEnum$k.call(b, prop))\n        __defNormalProp$i(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\",\n    window = defaultWindow\n  } = options;\n  const mode = useColorMode(__spreadProps$7(__spreadValues$i({}, options), {\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\");\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  }));\n  const preferredDark = usePreferredDark({ window });\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      if (v === preferredDark.value)\n        mode.value = \"auto\";\n      else\n        mode.value = v ? \"dark\" : \"light\";\n    }\n  });\n  return isDark;\n}\n\nconst fnBypass = (v) => v;\nconst fnSetSource = (source, value) => source.value = value;\nfunction defaultDump(clone) {\n  return clone ? isFunction(clone) ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? isFunction(clone) ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Infinity);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nvar __defProp$h = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$j = Object.getOwnPropertySymbols;\nvar __hasOwnProp$j = Object.prototype.hasOwnProperty;\nvar __propIsEnum$j = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$h = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$j.call(b, prop))\n      __defNormalProp$h(a, prop, b[prop]);\n  if (__getOwnPropSymbols$j)\n    for (var prop of __getOwnPropSymbols$j(b)) {\n      if (__propIsEnum$j.call(b, prop))\n        __defNormalProp$h(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(source, commit, { deep, flush, eventFilter: composedFilter });\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, __spreadProps$6(__spreadValues$h({}, options), { clone: options.clone || deep, setSource }));\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return __spreadProps$6(__spreadValues$h({}, manualHistory), {\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  });\n}\n\nvar __defProp$g = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$i = Object.getOwnPropertySymbols;\nvar __hasOwnProp$i = Object.prototype.hasOwnProperty;\nvar __propIsEnum$i = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$g = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$i.call(b, prop))\n      __defNormalProp$g(a, prop, b[prop]);\n  if (__getOwnPropSymbols$i)\n    for (var prop of __getOwnPropSymbols$i(b)) {\n      if (__propIsEnum$i.call(b, prop))\n        __defNormalProp$g(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, __spreadProps$5(__spreadValues$g({}, options), { eventFilter: filter }));\n  return __spreadValues$g({}, history);\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    eventFilter = bypassFilter\n  } = options;\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = ref(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  if (window) {\n    const onDeviceMotion = createFilterWrapper(eventFilter, (event) => {\n      acceleration.value = event.acceleration;\n      accelerationIncludingGravity.value = event.accelerationIncludingGravity;\n      rotationRate.value = event.rotationRate;\n      interval.value = event.interval;\n    });\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = ref(false);\n  const alpha = ref(null);\n  const beta = ref(null);\n  const gamma = ref(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio({\n  window = defaultWindow\n} = {}) {\n  const pixelRatio = ref(1);\n  if (window) {\n    let observe = function() {\n      pixelRatio.value = window.devicePixelRatio;\n      cleanup();\n      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\n      media.addEventListener(\"change\", observe, { once: true });\n    }, cleanup = function() {\n      media == null ? void 0 : media.removeEventListener(\"change\", observe);\n    };\n    let media;\n    observe();\n    tryOnScopeDispose(cleanup);\n  }\n  return { pixelRatio };\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  let permissionStatus;\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = ref();\n  const onChange = () => {\n    if (permissionStatus)\n      state.value = permissionStatus.state;\n  };\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus) {\n      try {\n        permissionStatus = await navigator.permissions.query(desc);\n        useEventListener(permissionStatus, \"change\", onChange);\n        onChange();\n      } catch (e) {\n        state.value = \"prompt\";\n      }\n    }\n    return permissionStatus;\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      stream.getTracks().forEach((t) => t.stop());\n      update();\n      permissionGranted.value = true;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(enabled, (v) => {\n    if (v)\n      _start();\n    else\n      _stop();\n  }, { immediate: true });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility({ document = defaultDocument } = {}) {\n  if (!document)\n    return ref(\"visible\");\n  const visibility = ref(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  });\n  return visibility;\n}\n\nvar __defProp$f = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$h = Object.getOwnPropertySymbols;\nvar __hasOwnProp$h = Object.prototype.hasOwnProperty;\nvar __propIsEnum$h = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$f = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$h.call(b, prop))\n      __defNormalProp$f(a, prop, b[prop]);\n  if (__getOwnPropSymbols$h)\n    for (var prop of __getOwnPropSymbols$h(b)) {\n      if (__propIsEnum$h.call(b, prop))\n        __defNormalProp$f(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nfunction useDraggable(target, options = {}) {\n  var _a, _b, _c;\n  const draggingElement = (_a = options.draggingElement) != null ? _a : defaultWindow;\n  const draggingHandle = (_b = options.handle) != null ? _b : target;\n  const position = ref((_c = resolveUnref(options.initialValue)) != null ? _c : { x: 0, y: 0 });\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (options.pointerTypes)\n      return options.pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (resolveUnref(options.preventDefault))\n      e.preventDefault();\n    if (resolveUnref(options.stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (resolveUnref(options.exact) && e.target !== resolveUnref(target))\n      return;\n    const rect = resolveUnref(target).getBoundingClientRect();\n    const pos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n    if (((_a2 = options.onStart) == null ? void 0 : _a2.call(options, pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    position.value = {\n      x: e.clientX - pressedDelta.value.x,\n      y: e.clientY - pressedDelta.value.y\n    };\n    (_a2 = options.onMove) == null ? void 0 : _a2.call(options, position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    (_a2 = options.onEnd) == null ? void 0 : _a2.call(options, position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    useEventListener(draggingHandle, \"pointerdown\", start, true);\n    useEventListener(draggingElement, \"pointermove\", move, true);\n    useEventListener(draggingElement, \"pointerup\", end, true);\n  }\n  return __spreadProps$4(__spreadValues$f({}, toRefs(position)), {\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(() => `left:${position.value.x}px;top:${position.value.y}px;`)\n  });\n}\n\nfunction useDropZone(target, onDrop) {\n  const isOverDropZone = ref(false);\n  let counter = 0;\n  if (isClient) {\n    useEventListener(target, \"dragenter\", (event) => {\n      event.preventDefault();\n      counter += 1;\n      isOverDropZone.value = true;\n    });\n    useEventListener(target, \"dragover\", (event) => {\n      event.preventDefault();\n    });\n    useEventListener(target, \"dragleave\", (event) => {\n      event.preventDefault();\n      counter -= 1;\n      if (counter === 0)\n        isOverDropZone.value = false;\n    });\n    useEventListener(target, \"drop\", (event) => {\n      var _a, _b;\n      event.preventDefault();\n      counter = 0;\n      isOverDropZone.value = false;\n      const files = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);\n      onDrop == null ? void 0 : onDrop(files.length === 0 ? null : files);\n    });\n  }\n  return {\n    isOverDropZone\n  };\n}\n\nvar __getOwnPropSymbols$g = Object.getOwnPropertySymbols;\nvar __hasOwnProp$g = Object.prototype.hasOwnProperty;\nvar __propIsEnum$g = Object.prototype.propertyIsEnumerable;\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$g.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$g)\n    for (var prop of __getOwnPropSymbols$g(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$g.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useResizeObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, observerOptions = __objRest$2(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (isSupported.value && window && el) {\n      observer = new ResizeObserver(callback);\n      observer.observe(el, observerOptions);\n    }\n  }, { immediate: true, flush: \"post\" });\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true\n  } = options;\n  const height = ref(0);\n  const bottom = ref(0);\n  const left = ref(0);\n  const right = ref(0);\n  const top = ref(0);\n  const width = ref(0);\n  const x = ref(0);\n  const y = ref(0);\n  function update() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    window = defaultWindow\n  } = options;\n  const isActive = ref(false);\n  let previousFrameTimestamp = 0;\n  let rafId = null;\n  function loop(timestamp) {\n    if (!isActive.value || !window)\n      return;\n    const delta = timestamp - previousFrameTimestamp;\n    fn({ delta, timestamp });\n    previousFrameTimestamp = timestamp;\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      rafId = window.requestAnimationFrame(loop);\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive: readonly(isActive),\n    pause,\n    resume\n  };\n}\n\nvar __defProp$e = Object.defineProperty;\nvar __getOwnPropSymbols$f = Object.getOwnPropertySymbols;\nvar __hasOwnProp$f = Object.prototype.hasOwnProperty;\nvar __propIsEnum$f = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$e = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$f.call(b, prop))\n      __defNormalProp$e(a, prop, b[prop]);\n  if (__getOwnPropSymbols$f)\n    for (var prop of __getOwnPropSymbols$f(b)) {\n      if (__propIsEnum$f.call(b, prop))\n        __defNormalProp$e(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useElementByPoint(options) {\n  const element = ref(null);\n  const { x, y, document = defaultDocument } = options;\n  const controls = useRafFn(() => {\n    element.value = (document == null ? void 0 : document.elementFromPoint(resolveUnref(x), resolveUnref(y))) || null;\n  });\n  return __spreadValues$e({\n    element\n  }, controls);\n}\n\nfunction useElementHover(el, options = {}) {\n  const delayEnter = options ? options.delayEnter : 0;\n  const delayLeave = options ? options.delayLeave : 0;\n  const isHovered = ref(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  useResizeObserver(target, ([entry]) => {\n    const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n    if (window && isSVG.value) {\n      const $elem = unrefElement(target);\n      if ($elem) {\n        const styles = window.getComputedStyle($elem);\n        width.value = parseFloat(styles.width);\n        height.value = parseFloat(styles.height);\n      }\n    } else {\n      if (boxSize) {\n        const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\n        width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n        height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n      } else {\n        width.value = entry.contentRect.width;\n        height.value = entry.contentRect.height;\n      }\n    }\n  }, options);\n  watch(() => unrefElement(target), (ele) => {\n    width.value = ele ? initialSize.width : 0;\n    height.value = ele ? initialSize.height : 0;\n  });\n  return {\n    width,\n    height\n  };\n}\n\nfunction useElementVisibility(element, { window = defaultWindow, scrollTarget } = {}) {\n  const elementIsVisible = ref(false);\n  const testBounding = () => {\n    if (!window)\n      return;\n    const document = window.document;\n    const el = unrefElement(element);\n    if (!el) {\n      elementIsVisible.value = false;\n    } else {\n      const rect = el.getBoundingClientRect();\n      elementIsVisible.value = rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth) && rect.bottom >= 0 && rect.right >= 0;\n    }\n  };\n  watch(() => unrefElement(element), () => testBounding(), { immediate: true, flush: \"post\" });\n  if (window) {\n    useEventListener(scrollTarget || window, \"scroll\", testBounding, {\n      capture: false,\n      passive: true\n    });\n  }\n  return elementIsVisible;\n}\n\nconst events = new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || [];\n    listeners.push(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    const index = listeners.indexOf(listener);\n    if (index > -1)\n      listeners.splice(index, 1);\n    if (!listeners.length)\n      events.delete(key);\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction useEventSource(url, events = [], options = {}) {\n  const event = ref(null);\n  const data = ref(null);\n  const status = ref(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = ref(null);\n  const {\n    withCredentials = false\n  } = options;\n  const close = () => {\n    if (eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n    }\n  };\n  const es = new EventSource(url, { withCredentials });\n  eventSource.value = es;\n  es.onopen = () => {\n    status.value = \"OPEN\";\n    error.value = null;\n  };\n  es.onerror = (e) => {\n    status.value = \"CLOSED\";\n    error.value = e;\n  };\n  es.onmessage = (e) => {\n    event.value = null;\n    data.value = e.data;\n  };\n  for (const event_name of events) {\n    useEventListener(es, event_name, (e) => {\n      event.value = event_name;\n      data.value = e.data || null;\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    close\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = ref(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = resolveRef(newIcon);\n  const applyIcon = (icon) => {\n    document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`).forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(favicon, (i, o) => {\n    if (isString(i) && i !== o)\n      applyIcon(i);\n  }, { immediate: true });\n  return favicon;\n}\n\nvar __defProp$d = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$e = Object.getOwnPropertySymbols;\nvar __hasOwnProp$e = Object.prototype.hasOwnProperty;\nvar __propIsEnum$e = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$d = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$e.call(b, prop))\n      __defNormalProp$d(a, prop, b[prop]);\n  if (__getOwnPropSymbols$e)\n    for (var prop of __getOwnPropSymbols$e(b)) {\n      if (__propIsEnum$e.call(b, prop))\n        __defNormalProp$d(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\"\n};\nfunction isFetchOptions(obj) {\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\");\n}\nfunction isAbsoluteURL(url) {\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries([...headers.entries()]);\n  return headers;\n}\nfunction combineCallbacks(combination, ...callbacks) {\n  if (combination === \"overwrite\") {\n    return async (ctx) => {\n      const callback = callbacks[callbacks.length - 1];\n      if (callback !== void 0)\n        await callback(ctx);\n      return ctx;\n    };\n  } else {\n    return async (ctx) => {\n      await callbacks.reduce((prevCallback, callback) => prevCallback.then(async () => {\n        if (callback)\n          ctx = __spreadValues$d(__spreadValues$d({}, ctx), await callback(ctx));\n      }), Promise.resolve());\n      return ctx;\n    };\n  }\n}\nfunction createFetch(config = {}) {\n  const _combination = config.combination || \"chain\";\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => {\n      const baseUrl = resolveUnref(config.baseUrl);\n      const targetUrl = resolveUnref(url);\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\n    });\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = __spreadProps$3(__spreadValues$d(__spreadValues$d({}, options), args[0]), {\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\n        });\n      } else {\n        fetchOptions = __spreadProps$3(__spreadValues$d(__spreadValues$d({}, fetchOptions), args[0]), {\n          headers: __spreadValues$d(__spreadValues$d({}, headersToObject(fetchOptions.headers) || {}), headersToObject(args[0].headers) || {})\n        });\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = __spreadProps$3(__spreadValues$d(__spreadValues$d({}, options), args[1]), {\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\n      });\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = { immediate: true, refetch: false, timeout: 0 };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = __spreadValues$d(__spreadValues$d({}, options), args[0]);\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = __spreadValues$d(__spreadValues$d({}, options), args[1]);\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = ref(false);\n  const isFetching = ref(false);\n  const aborted = ref(false);\n  const statusCode = ref(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort && controller) {\n      controller.abort();\n      controller = void 0;\n    }\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  const execute = async (throwOnFailed = false) => {\n    var _a2;\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    if (supportsAbort) {\n      abort();\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = __spreadProps$3(__spreadValues$d({}, fetchOptions), {\n        signal: controller.signal\n      });\n    }\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    if (config.payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      const payload = resolveUnref(config.payload);\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = {\n      url: resolveUnref(url),\n      options: __spreadValues$d(__spreadValues$d({}, defaultFetchOptions), fetchOptions),\n      cancel: () => {\n        isCanceled = true;\n      }\n    };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return new Promise((resolve, reject) => {\n      var _a3;\n      fetch(context.url, __spreadProps$3(__spreadValues$d(__spreadValues$d({}, defaultFetchOptions), context.options), {\n        headers: __spreadValues$d(__spreadValues$d({}, headersToObject(defaultFetchOptions.headers)), headersToObject((_a3 = context.options) == null ? void 0 : _a3.headers))\n      })).then(async (fetchResponse) => {\n        response.value = fetchResponse;\n        statusCode.value = fetchResponse.status;\n        responseData = await fetchResponse[config.type]();\n        if (options.afterFetch && statusCode.value >= 200 && statusCode.value < 300)\n          ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));\n        data.value = responseData;\n        if (!fetchResponse.ok)\n          throw new Error(fetchResponse.statusText);\n        responseEvent.trigger(fetchResponse);\n        return resolve(fetchResponse);\n      }).catch(async (fetchError) => {\n        let errorData = fetchError.message || fetchError.name;\n        if (options.onFetchError)\n          ({ data: responseData, error: errorData } = await options.onFetchError({ data: responseData, error: fetchError, response: response.value }));\n        data.value = responseData;\n        error.value = errorData;\n        errorEvent.trigger(fetchError);\n        if (throwOnFailed)\n          return reject(fetchError);\n        return resolve(null);\n      }).finally(() => {\n        loading(false);\n        if (timer)\n          timer.stop();\n        finallyEvent.trigger(null);\n      });\n    });\n  };\n  const refetch = resolveRef(options.refetch);\n  watch([\n    refetch,\n    resolveRef(url)\n  ], ([refetch2]) => refetch2 && execute(), { deep: true });\n  const shell = {\n    isFinished,\n    statusCode,\n    response,\n    error,\n    data,\n    isFetching,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch([\n            refetch,\n            resolveRef(config.payload)\n          ], ([refetch2]) => refetch2 && execute(), { deep: true });\n        }\n        const rawPayload = resolveUnref(config.payload);\n        if (!payloadType && rawPayload && Object.getPrototypeOf(rawPayload) === Object.prototype && !(rawPayload instanceof FormData))\n          config.payloadType = \"json\";\n        return __spreadProps$3(__spreadValues$d({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return __spreadProps$3(__spreadValues$d({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    setTimeout(execute, 0);\n  return __spreadProps$3(__spreadValues$d({}, shell), {\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  });\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\"))\n    return `${start}/${end}`;\n  return `${start}${end}`;\n}\n\nvar __defProp$c = Object.defineProperty;\nvar __getOwnPropSymbols$d = Object.getOwnPropertySymbols;\nvar __hasOwnProp$d = Object.prototype.hasOwnProperty;\nvar __propIsEnum$d = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$c = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$d.call(b, prop))\n      __defNormalProp$c(a, prop, b[prop]);\n  if (__getOwnPropSymbols$d)\n    for (var prop of __getOwnPropSymbols$d(b)) {\n      if (__propIsEnum$d.call(b, prop))\n        __defNormalProp$c(a, prop, b[prop]);\n    }\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\"\n};\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(null);\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n    };\n  }\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = __spreadValues$c(__spreadValues$c(__spreadValues$c({}, DEFAULT_OPTIONS), options), localOptions);\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    input.click();\n  };\n  const reset = () => {\n    files.value = null;\n    if (input)\n      input.value = \"\";\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset\n  };\n}\n\nvar __defProp$b = Object.defineProperty;\nvar __getOwnPropSymbols$c = Object.getOwnPropertySymbols;\nvar __hasOwnProp$c = Object.prototype.hasOwnProperty;\nvar __propIsEnum$c = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$b = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$c.call(b, prop))\n      __defNormalProp$b(a, prop, b[prop]);\n  if (__getOwnPropSymbols$c)\n    for (var prop of __getOwnPropSymbols$c(b)) {\n      if (__propIsEnum$c.call(b, prop))\n        __defNormalProp$b(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = unref(options);\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = ref();\n  const data = ref();\n  const file = ref();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker(__spreadValues$b(__spreadValues$b({}, unref(options)), _options));\n    fileHandle.value = handle;\n    await updateFile();\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$b(__spreadValues$b({}, unref(options)), _options));\n    data.value = void 0;\n    await updateFile();\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$b(__spreadValues$b({}, unref(options)), _options));\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    if (unref(dataType) === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    if (unref(dataType) === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    if (unref(dataType) === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => unref(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false } = options;\n  const innerFocused = ref(false);\n  const targetElement = computed(() => unrefElement(target));\n  useEventListener(targetElement, \"focus\", () => innerFocused.value = true);\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false);\n  const focused = computed({\n    get: () => innerFocused.value,\n    set(value) {\n      var _a, _b;\n      if (!value && innerFocused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      else if (value && !innerFocused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus();\n    }\n  });\n  watch(targetElement, () => {\n    focused.value = initialValue;\n  }, { immediate: true, flush: \"post\" });\n  return { focused };\n}\n\nfunction useFocusWithin(target, options = {}) {\n  const activeElement = useActiveElement(options);\n  const targetElement = computed(() => unrefElement(target));\n  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = ref(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst functionsMap = [\n  [\n    \"requestFullscreen\",\n    \"exitFullscreen\",\n    \"fullscreenElement\",\n    \"fullscreenEnabled\",\n    \"fullscreenchange\",\n    \"fullscreenerror\"\n  ],\n  [\n    \"webkitRequestFullscreen\",\n    \"webkitExitFullscreen\",\n    \"webkitFullscreenElement\",\n    \"webkitFullscreenEnabled\",\n    \"webkitfullscreenchange\",\n    \"webkitfullscreenerror\"\n  ],\n  [\n    \"webkitRequestFullScreen\",\n    \"webkitCancelFullScreen\",\n    \"webkitCurrentFullScreenElement\",\n    \"webkitCancelFullScreen\",\n    \"webkitfullscreenchange\",\n    \"webkitfullscreenerror\"\n  ],\n  [\n    \"mozRequestFullScreen\",\n    \"mozCancelFullScreen\",\n    \"mozFullScreenElement\",\n    \"mozFullScreenEnabled\",\n    \"mozfullscreenchange\",\n    \"mozfullscreenerror\"\n  ],\n  [\n    \"msRequestFullscreen\",\n    \"msExitFullscreen\",\n    \"msFullscreenElement\",\n    \"msFullscreenEnabled\",\n    \"MSFullscreenChange\",\n    \"MSFullscreenError\"\n  ]\n];\nfunction useFullscreen(target, options = {}) {\n  const { document = defaultDocument, autoExit = false } = options;\n  const targetRef = target || (document == null ? void 0 : document.querySelector(\"html\"));\n  const isFullscreen = ref(false);\n  let map = functionsMap[0];\n  const isSupported = useSupported(() => {\n    if (!document) {\n      return false;\n    } else {\n      for (const m of functionsMap) {\n        if (m[1] in document) {\n          map = m;\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  const [REQUEST, EXIT, ELEMENT, , EVENT] = map;\n  async function exit() {\n    if (!isSupported.value)\n      return;\n    if (document == null ? void 0 : document[ELEMENT])\n      await document[EXIT]();\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value)\n      return;\n    await exit();\n    const target2 = unrefElement(targetRef);\n    if (target2) {\n      await target2[REQUEST]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    if (isFullscreen.value)\n      await exit();\n    else\n      await enter();\n  }\n  if (document) {\n    useEventListener(document, EVENT, () => {\n      isFullscreen.value = !!(document == null ? void 0 : document[ELEMENT]);\n    }, false);\n  }\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      hapticActuators,\n      index: gamepad.index,\n      mapping: gamepad.mapping,\n      connected: gamepad.connected,\n      timestamp: gamepad.timestamp,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (let i = 0; i < _gamepads.length; ++i) {\n      const gamepad = _gamepads[i];\n      if (gamepad) {\n        const index = gamepads.value.findIndex(({ index: index2 }) => index2 === gamepad.index);\n        if (index > -1)\n          gamepads.value[index] = stateFromGamepad(gamepad);\n      }\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    if (_gamepads) {\n      for (let i = 0; i < _gamepads.length; ++i) {\n        const gamepad = _gamepads[i];\n        if (gamepad)\n          onGamepadConnected(gamepad);\n      }\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = ref(null);\n  const error = ref(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Infinity,\n    longitude: Infinity,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  function resume() {\n    if (isSupported.value) {\n      watcher = navigator.geolocation.watchPosition(updatePosition, (err) => error.value = err, {\n        enableHighAccuracy,\n        maximumAge,\n        timeout\n      });\n    }\n  }\n  if (immediate)\n    resume();\n  function pause() {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  }\n  tryOnScopeDispose(() => {\n    pause();\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error,\n    resume,\n    pause\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = ref(initialState);\n  const lastActive = ref(timestamp());\n  let timer;\n  const onEvent = createFilterWrapper(eventFilter, () => {\n    idle.value = false;\n    lastActive.value = timestamp();\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  });\n  if (window) {\n    const document = window.document;\n    for (const event of events)\n      useEventListener(window, event, onEvent, { passive: true });\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      });\n    }\n  }\n  timer = setTimeout(() => idle.value = true, timeout);\n  return { idle, lastActive };\n}\n\nvar __defProp$a = Object.defineProperty;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$a = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$a(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$a(a, prop, b[prop]);\n    }\n  return a;\n};\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nconst useImage = (options, asyncStateOptions = {}) => {\n  const state = useAsyncState(() => loadImage(resolveUnref(options)), void 0, __spreadValues$a({\n    resetOnExecute: true\n  }, asyncStateOptions));\n  watch(() => resolveUnref(options), () => state.execute(asyncStateOptions.delay), { deep: true });\n  return state;\n};\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\"\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c;\n    const _element = resolveUnref(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = resolveUnref(_y)) != null ? _a : y.value,\n      left: (_b = resolveUnref(_x)) != null ? _b : x.value,\n      behavior: resolveUnref(behavior)\n    });\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const onScrollHandler = (e) => {\n    const eventTarget = e.target === document ? e.target.documentElement : e.target;\n    const scrollLeft = eventTarget.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalY.value;\n    arrivedState.left = scrollLeft <= 0 + (offset.left || 0);\n    arrivedState.right = scrollLeft + eventTarget.clientWidth >= eventTarget.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    internalX.value = scrollLeft;\n    let scrollTop = eventTarget.scrollTop;\n    if (e.target === document && !scrollTop)\n      scrollTop = document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    arrivedState.top = scrollTop <= 0 + (offset.top || 0);\n    arrivedState.bottom = scrollTop + eventTarget.clientHeight >= eventTarget.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    internalY.value = scrollTop;\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(element, \"scroll\", throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler, eventListenerOptions);\n  useEventListener(element, \"scrollend\", onScrollEnd, eventListenerOptions);\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions\n  };\n}\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a, _b;\n  const direction = (_a = options.direction) != null ? _a : \"bottom\";\n  const state = reactive(useScroll(element, __spreadProps$2(__spreadValues$9({}, options), {\n    offset: __spreadValues$9({\n      [direction]: (_b = options.distance) != null ? _b : 0\n    }, options.offset)\n  })));\n  watch(() => state.arrivedState[direction], async (v) => {\n    var _a2, _b2;\n    if (v) {\n      const elem = resolveUnref(element);\n      const previous = {\n        height: (_a2 = elem == null ? void 0 : elem.scrollHeight) != null ? _a2 : 0,\n        width: (_b2 = elem == null ? void 0 : elem.scrollWidth) != null ? _b2 : 0\n      };\n      await onLoadMore(state);\n      if (options.preserveScrollPosition && elem) {\n        nextTick(() => {\n          elem.scrollTo({\n            top: elem.scrollHeight - previous.height,\n            left: elem.scrollWidth - previous.width\n          });\n        });\n      }\n    }\n  });\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0.1,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  let cleanup = noop;\n  const stopWatch = isSupported.value ? watch(() => ({\n    el: unrefElement(target),\n    root: unrefElement(root)\n  }), ({ el, root: root2 }) => {\n    cleanup();\n    if (!el)\n      return;\n    const observer = new IntersectionObserver(callback, {\n      root: root2,\n      rootMargin,\n      threshold\n    });\n    observer.observe(el);\n    cleanup = () => {\n      observer.disconnect();\n      cleanup = noop;\n    };\n  }, { immediate: true, flush: \"post\" }) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = ref(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(new Set());\n  const obj = {\n    toJSON() {\n      return {};\n    },\n    current\n  };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = new Set();\n  const usedKeys = new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    current.clear();\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive: true });\n  useEventListener(\"focus\", reset, { passive: true });\n  const proxy = new Proxy(refs, {\n    get(target2, prop, rec) {\n      if (typeof prop !== \"string\")\n        return Reflect.get(target2, prop, rec);\n      prop = prop.toLowerCase();\n      if (prop in aliasMap)\n        prop = aliasMap[prop];\n      if (!(prop in refs)) {\n        if (/[+_-]/.test(prop)) {\n          const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n          refs[prop] = computed(() => keys.every((key) => unref(proxy[key])));\n        } else {\n          refs[prop] = ref(false);\n        }\n      }\n      const r = Reflect.get(target2, prop, rec);\n      return useReactive ? unref(r) : r;\n    }\n  });\n  return proxy;\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction usingElRef(source, cb) {\n  if (resolveUnref(source))\n    cb(resolveUnref(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  options = __spreadValues$8(__spreadValues$8({}, defaultOptions), options);\n  const {\n    document = defaultDocument\n  } = options;\n  const currentTime = ref(0);\n  const duration = ref(0);\n  const seeking = ref(false);\n  const volume = ref(1);\n  const waiting = ref(false);\n  const ended = ref(false);\n  const playing = ref(false);\n  const rate = ref(1);\n  const stalled = ref(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = ref(-1);\n  const isPictureInPicture = ref(false);\n  const muted = ref(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = isNumber(track) ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = isNumber(track) ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    const src = resolveUnref(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (isString(src))\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  tryOnScopeDispose(() => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\n  });\n  watch(volume, (vol) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.volume = vol;\n  });\n  watch(muted, (mute) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.muted = mute;\n  });\n  watch(rate, (rate2) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.playbackRate = rate2;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = resolveUnref(options.tracks);\n    const el = resolveUnref(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    isPlaying ? el.play() : el.pause();\n  });\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = resolveUnref(target).currentTime));\n  useEventListener(target, \"durationchange\", () => duration.value = resolveUnref(target).duration);\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(resolveUnref(target).buffered));\n  useEventListener(target, \"seeking\", () => seeking.value = true);\n  useEventListener(target, \"seeked\", () => seeking.value = false);\n  useEventListener(target, \"waiting\", () => waiting.value = true);\n  useEventListener(target, \"playing\", () => {\n    waiting.value = false;\n    ended.value = false;\n  });\n  useEventListener(target, \"ratechange\", () => rate.value = resolveUnref(target).playbackRate);\n  useEventListener(target, \"stalled\", () => stalled.value = true);\n  useEventListener(target, \"ended\", () => ended.value = true);\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\n  useEventListener(target, \"volumechange\", () => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    volume.value = el.volume;\n    muted.value = el.muted;\n  });\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    volume,\n    muted,\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    onSourceError: sourceErrorEvent.on\n  };\n}\n\nconst getMapVue2Compat = () => {\n  const data = reactive({});\n  return {\n    get: (key) => data[key],\n    set: (key, value) => set(data, key, value),\n    has: (key) => hasOwn(data, key),\n    delete: (key) => del(data, key),\n    clear: () => {\n      Object.keys(data).forEach((key) => {\n        del(data, key);\n      });\n    }\n  };\n};\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return reactive(options.cache);\n    if (isVue2)\n      return getMapVue2Compat();\n    return reactive(new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  onMounted(() => {\n    isMounted.value = true;\n  });\n  return isMounted;\n}\n\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    eventFilter\n  } = options;\n  const x = ref(initialValue.x);\n  const y = ref(initialValue.y);\n  const sourceType = ref(null);\n  const mouseHandler = (event) => {\n    if (type === \"page\") {\n      x.value = event.pageX;\n      y.value = event.pageY;\n    } else if (type === \"client\") {\n      x.value = event.clientX;\n      y.value = event.clientY;\n    } else if (type === \"movement\") {\n      x.value = event.movementX;\n      y.value = event.movementY;\n    }\n    sourceType.value = \"mouse\";\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const touch2 = event.touches[0];\n      if (type === \"page\") {\n        x.value = touch2.pageX;\n        y.value = touch2.pageY;\n      } else if (type === \"client\") {\n        x.value = touch2.clientX;\n        y.value = touch2.clientY;\n      }\n      sourceType.value = \"touch\";\n    }\n  };\n  const mouseHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? mouseHandler(event) : eventFilter(() => mouseHandler(event), {});\n  };\n  const touchHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? touchHandler(event) : eventFilter(() => touchHandler(event), {});\n  };\n  if (window) {\n    useEventListener(window, \"mousemove\", mouseHandlerWrapper, { passive: true });\n    useEventListener(window, \"dragover\", mouseHandlerWrapper, { passive: true });\n    if (touch && type !== \"movement\") {\n      useEventListener(window, \"touchstart\", touchHandlerWrapper, { passive: true });\n      useEventListener(window, \"touchmove\", touchHandlerWrapper, { passive: true });\n      if (resetOnTouchEnds)\n        useEventListener(window, \"touchend\", reset, { passive: true });\n    }\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch([targetRef, x, y], () => {\n      const el = unrefElement(targetRef);\n      if (!el)\n        return;\n      const {\n        left,\n        top,\n        width,\n        height\n      } = el.getBoundingClientRect();\n      elementPositionX.value = left + window.pageXOffset;\n      elementPositionY.value = top + window.pageYOffset;\n      elementHeight.value = height;\n      elementWidth.value = width;\n      const elX = x.value - elementPositionX.value;\n      const elY = y.value - elementPositionY.value;\n      isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n      if (handleOutside || !isOutside.value) {\n        elementX.value = elX;\n        elementY.value = elY;\n      }\n    }, { immediate: true });\n    useEventListener(document, \"mouseleave\", () => {\n      isOutside.value = true;\n    });\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true });\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true });\n  useEventListener(window, \"mouseup\", onReleased, { passive: true });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true });\n    useEventListener(window, \"drop\", onReleased, { passive: true });\n    useEventListener(window, \"dragend\", onReleased, { passive: true });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true });\n    useEventListener(window, \"touchend\", onReleased, { passive: true });\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$8.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$8.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useMutationObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, mutationOptions = __objRest$1(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (isSupported.value && window && el) {\n      observer = new MutationObserver(callback);\n      observer.observe(el, mutationOptions);\n    }\n  }, { immediate: true });\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nconst useNavigatorLanguage = (options = {}) => {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = ref(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  });\n  return {\n    isSupported,\n    language\n  };\n};\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = ref(true);\n  const saveData = ref(false);\n  const offlineAt = ref(void 0);\n  const onlineAt = ref(void 0);\n  const downlink = ref(void 0);\n  const downlinkMax = ref(void 0);\n  const rtt = ref(void 0);\n  const effectiveType = ref(void 0);\n  const type = ref(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    });\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    });\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\n  updateNetworkInformation();\n  return {\n    isSupported,\n    isOnline,\n    saveData,\n    offlineAt,\n    onlineAt,\n    downlink,\n    downlinkMax,\n    effectiveType,\n    rtt,\n    type\n  };\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$7.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(b)) {\n      if (__propIsEnum$7.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(new Date());\n  const update = () => now.value = new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return __spreadValues$7({\n      now\n    }, controls);\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = ref();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(() => unref(object), (newObject) => {\n    release();\n    if (newObject)\n      url.value = URL.createObjectURL(newObject);\n  }, { immediate: true });\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  if (isFunction(value) || isReadonly(value))\n    return computed(() => clamp(resolveUnref(value), resolveUnref(min), resolveUnref(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, resolveUnref(min), resolveUnref(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, resolveUnref(min), resolveUnref(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Infinity,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Infinity);\n  const pageCount = computed(() => Math.max(1, Math.ceil(unref(total) / unref(currentPageSize))));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page))\n    syncRef(page, currentPage);\n  if (isRef(pageSize))\n    syncRef(pageSize, currentPageSize);\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = ref(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    useEventListener(window, \"mouseout\", handler, { passive: true });\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\n  }\n  return isLeft;\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))\n      return \"deviceOrientation\";\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = -orientation.beta / 90;\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = orientation.gamma / 90;\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = ref(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    useEventListener(target, \"pointerdown\", handler, { passive: true });\n    useEventListener(target, \"pointermove\", handler, { passive: true });\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, { passive: true });\n  }\n  return __spreadProps$1(__spreadValues$6({}, toRefs(state)), {\n    isInside\n  });\n}\n\nfunction usePointerLock(target, options = {}) {\n  const { document = defaultDocument, pointerLockOptions } = options;\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\n  const element = ref();\n  const triggerElement = ref();\n  let targetElement;\n  if (isSupported.value) {\n    useEventListener(document, \"pointerlockchange\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        element.value = document.pointerLockElement;\n        if (!element.value)\n          targetElement = triggerElement.value = null;\n      }\n    });\n    useEventListener(document, \"pointerlockerror\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\n        throw new Error(`Failed to ${action} pointer lock.`);\n      }\n    });\n  }\n  async function lock(e, options2) {\n    var _a;\n    if (!isSupported.value)\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\n    if (!targetElement)\n      throw new Error(\"Target element undefined.\");\n    targetElement.requestPointerLock(options2 != null ? options2 : pointerLockOptions);\n    return await until(element).toBe(targetElement);\n  }\n  async function unlock() {\n    if (!element.value)\n      return false;\n    document.exitPointerLock();\n    await until(element).toBeNull();\n    return true;\n  }\n  return {\n    isSupported,\n    element,\n    triggerElement,\n    lock,\n    unlock\n  };\n}\n\nvar SwipeDirection;\n(function(SwipeDirection2) {\n  SwipeDirection2[\"UP\"] = \"UP\";\n  SwipeDirection2[\"RIGHT\"] = \"RIGHT\";\n  SwipeDirection2[\"DOWN\"] = \"DOWN\";\n  SwipeDirection2[\"LEFT\"] = \"LEFT\";\n  SwipeDirection2[\"NONE\"] = \"NONE\";\n})(SwipeDirection || (SwipeDirection = {}));\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true,\n    window = defaultWindow\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return SwipeDirection.NONE;\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;\n    } else {\n      return diffY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  let listenerOptions;\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\n  if (!passive)\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\n  else\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (listenerOptions.capture && !listenerOptions.passive)\n        e.preventDefault();\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchend\", onTouchEnd, listenerOptions),\n    useEventListener(target, \"touchcancel\", onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  };\n}\nfunction checkPassiveEventSupport(document) {\n  if (!document)\n    return false;\n  let supportsPassive = false;\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true;\n      return false;\n    }\n  };\n  document.addEventListener(\"x\", noop, optionsBlock);\n  document.removeEventListener(\"x\", noop);\n  return supportsPassive;\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = resolveRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const isPointerDown = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return SwipeDirection.NONE;\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;\n    } else {\n      return distanceY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;\n    }\n  });\n  const eventIsAllowed = (e) => {\n    var _a, _b, _c;\n    const isReleasingButton = e.buttons === 0;\n    const isPrimaryButton = e.buttons === 1;\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\n  };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      var _a, _b;\n      if (!eventIsAllowed(e))\n        return;\n      isPointerDown.value = true;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }),\n    useEventListener(target, \"pointerup\", (e) => {\n      var _a, _b;\n      if (!eventIsAllowed(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"initial\");\n    })\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePrevious(value, initialValue) {\n  const previous = shallowRef(initialValue);\n  watch(resolveRef(value), (_, oldValue) => {\n    previous.value = oldValue;\n  }, { flush: \"sync\" });\n  return readonly(previous);\n}\n\nconst useScreenOrientation = (options = {}) => {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = ref(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    });\n  }\n  const lockOrientation = (type) => {\n    if (!isSupported.value)\n      return Promise.reject(new Error(\"Not supported\"));\n    return screenOrientation.lock(type);\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value)\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n};\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = ref(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${resolveUnref(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = resolveUnref(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    el.addEventListener(\"error\", (event) => reject(event));\n    el.addEventListener(\"abort\", (event) => reject(event));\n    el.addEventListener(\"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    });\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${resolveUnref(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientHeight < ele.scrollHeight || style.overflowY === \"auto\" && ele.clientWidth < ele.scrollWidth) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow;\n  watch(resolveRef(element), (el) => {\n    if (el) {\n      const ele = el;\n      initialOverflow = ele.style.overflow;\n      if (isLocked.value)\n        ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const ele = resolveUnref(element);\n    if (!ele || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(ele, \"touchmove\", (e) => {\n        preventDefault(e);\n      }, { passive: false });\n    }\n    ele.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const ele = resolveUnref(element);\n    if (!ele || !isLocked.value)\n      return;\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\n    ele.style.overflow = initialOverflow;\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else\n        unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = __spreadValues$5(__spreadValues$5({}, resolveUnref(shareOptions)), resolveUnref(overrideOptions));\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\nconst defaultCompare = (a, b) => a - b;\nfunction useSorted(...args) {\n  var _a, _b, _c, _d;\n  const [source] = args;\n  let compareFn = defaultCompare;\n  let options = {};\n  if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      options = args[1];\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\n    } else {\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\n    }\n  } else if (args.length > 2) {\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\n    options = (_d = args[2]) != null ? _d : {};\n  }\n  const {\n    dirty = false,\n    sortFn = defaultSortFn\n  } = options;\n  if (!dirty)\n    return computed(() => sortFn([...unref(source)], compareFn));\n  watchEffect(() => {\n    const result = sortFn(unref(source), compareFn);\n    if (isRef(source))\n      source.value = result;\n    else\n      source.splice(0, source.length, ...result);\n  });\n  return source;\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    window = defaultWindow\n  } = options;\n  const lang = resolveRef(options.lang || \"en-US\");\n  const isListening = ref(false);\n  const isFinal = ref(false);\n  const result = ref(\"\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isListening.value) => {\n    isListening.value = value;\n  };\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  let recognition;\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = unref(lang);\n    recognition.onstart = () => {\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const transcript = Array.from(event.results).map((result2) => {\n        isFinal.value = result2.isFinal;\n        return result2[0];\n      }).map((result2) => result2.transcript).join(\"\");\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = unref(lang);\n    };\n    watch(isListening, () => {\n      if (isListening.value)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isListening.value = false;\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = ref(false);\n  const status = ref(\"init\");\n  const spokenText = resolveRef(text || \"\");\n  const lang = resolveRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = unref(lang);\n    utterance2.voice = unref(options.voice) || null;\n    utterance2.pitch = pitch;\n    utterance2.rate = rate;\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    utterance && synth.speak(utterance.value);\n  };\n  const stop = () => {\n    synth.cancel();\n    isPlaying.value = false;\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    stop,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = resolveUnref(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(initialValue);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else if (mergeDefaults) {\n        const value = await serializer.read(rawValue);\n        if (isFunction(mergeDefaults))\n          data.value = mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          data.value = __spreadValues$4(__spreadValues$4({}, rawInit), value);\n        else\n          data.value = value;\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => setTimeout(() => read(e), 0));\n  if (storage) {\n    watchWithFilter(data, async () => {\n      try {\n        if (data.value == null)\n          await storage.removeItem(key);\n        else\n          await storage.setItem(key, await serializer.write(data.value));\n      } catch (e) {\n        onError(e);\n      }\n    }, {\n      flush,\n      deep,\n      eventFilter\n    });\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = ref(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = ref(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    if (!el.isConnected) {\n      el.type = \"text/css\";\n      el.id = id;\n      if (options.media)\n        el.media = options.media;\n      document.head.appendChild(el);\n    }\n    if (isLoaded.value)\n      return;\n    stop = watch(cssRef, (value) => {\n      el.textContent = value;\n    }, { immediate: true });\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(document.querySelector(selector), () => dir.value = getValue(), { attributes: true });\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  const ranges = new Array(rangeCount);\n  for (let i = 0; i < rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n    ranges[i] = range;\n  }\n  return ranges;\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction useTextareaAutosize(options) {\n  const textarea = ref(options == null ? void 0 : options.element);\n  const input = ref(options == null ? void 0 : options.input);\n  function triggerResize() {\n    var _a, _b;\n    if (!textarea.value)\n      return;\n    textarea.value.style.height = \"1px\";\n    textarea.value.style.height = `${(_a = textarea.value) == null ? void 0 : _a.scrollHeight}px`;\n    (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);\n  }\n  watch([input, textarea], triggerResize, { immediate: true });\n  useResizeObserver(textarea, () => triggerResize());\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, __spreadProps(__spreadValues$3({}, options), { eventFilter: filter }));\n  return __spreadValues$3({}, history);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst DEFAULT_UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Infinity, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\n  invalid: \"\"\n};\nconst DEFAULT_FORMATTER = (date) => date.toISOString().slice(0, 10);\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    updateInterval = 3e4\n  } = options;\n  const _a = useNow({ interval: updateInterval, controls: true }), { now } = _a, controls = __objRest(_a, [\"now\"]);\n  const timeAgo = computed(() => formatTimeAgo(new Date(resolveUnref(time)), options, unref(now.value)));\n  if (exposeControls) {\n    return __spreadValues$2({\n      timeAgo\n    }, controls);\n  } else {\n    return timeAgo;\n  }\n}\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\n  var _a;\n  const {\n    max,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    units = DEFAULT_UNITS,\n    showSecond = false,\n    rounding = \"round\"\n  } = options;\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\n  const diff = +now - +from;\n  const absDiff = Math.abs(diff);\n  function getValue(diff2, unit) {\n    return roundFn(Math.abs(diff2) / unit.value);\n  }\n  function format(diff2, unit) {\n    const val = getValue(diff2, unit);\n    const past = diff2 > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  if (absDiff < 6e4 && !showSecond)\n    return messages.justNow;\n  if (typeof max === \"number\" && absDiff > max)\n    return fullDateFormatter(new Date(from));\n  if (typeof max === \"string\") {\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\n    if (unitMax && absDiff > unitMax)\n      return fullDateFormatter(new Date(from));\n  }\n  for (const [idx, unit] of units.entries()) {\n    const val = getValue(diff, unit);\n    if (val <= 0 && units[idx - 1])\n      return format(diff, units[idx - 1]);\n    if (absDiff < unit.max)\n      return format(diff, unit);\n  }\n  return messages.invalid;\n}\n\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\n  const { start } = useTimeoutFn(loop, interval);\n  const isActive = ref(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = ref(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$1({\n      timestamp: ts\n    }, controls);\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b;\n  const {\n    document = defaultDocument\n  } = options;\n  const title = resolveRef((_a = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _a : null);\n  const isReadonly = newTitle && isFunction(newTitle);\n  function format(t) {\n    if (!(\"titleTemplate\" in options))\n      return t;\n    const template = options.titleTemplate || \"%s\";\n    return isFunction(template) ? template(t) : unref(template).replace(/%s/g, t);\n  }\n  watch(title, (t, o) => {\n    if (t !== o && document)\n      document.title = format(isString(t) ? t : \"\");\n  }, { immediate: true });\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\n    useMutationObserver((_b = document.head) == null ? void 0 : _b.querySelector(\"title\"), () => {\n      if (document && document.title !== title.value)\n        title.value = format(document.title);\n    }, { childList: true });\n  }\n  return title;\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = __spreadValues({\n  linear: identity\n}, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction useTransition(source, options = {}) {\n  const {\n    delay = 0,\n    disabled = false,\n    duration = 1e3,\n    onFinished = noop,\n    onStarted = noop,\n    transition = identity\n  } = options;\n  const currentTransition = computed(() => {\n    const t = unref(transition);\n    return isFunction(t) ? t : createEasingFunction(t);\n  });\n  const sourceValue = computed(() => {\n    const s = unref(source);\n    return isNumber(s) ? s : s.map(unref);\n  });\n  const sourceVector = computed(() => isNumber(sourceValue.value) ? [sourceValue.value] : sourceValue.value);\n  const outputVector = ref(sourceVector.value.slice(0));\n  let currentDuration;\n  let diffVector;\n  let endAt;\n  let startAt;\n  let startVector;\n  const { resume, pause } = useRafFn(() => {\n    const now = Date.now();\n    const progress = clamp(1 - (endAt - now) / currentDuration, 0, 1);\n    outputVector.value = startVector.map((val, i) => {\n      var _a;\n      return val + ((_a = diffVector[i]) != null ? _a : 0) * currentTransition.value(progress);\n    });\n    if (progress >= 1) {\n      pause();\n      onFinished();\n    }\n  }, { immediate: false });\n  const start = () => {\n    pause();\n    currentDuration = unref(duration);\n    diffVector = outputVector.value.map((n, i) => {\n      var _a, _b;\n      return ((_a = sourceVector.value[i]) != null ? _a : 0) - ((_b = outputVector.value[i]) != null ? _b : 0);\n    });\n    startVector = outputVector.value.slice(0);\n    startAt = Date.now();\n    endAt = startAt + currentDuration;\n    resume();\n    onStarted();\n  };\n  const timeout = useTimeoutFn(start, delay, { immediate: false });\n  watch(sourceVector, () => {\n    if (unref(disabled))\n      return;\n    if (unref(delay) <= 0)\n      start();\n    else\n      timeout.start();\n  }, { deep: true });\n  watch(() => unref(disabled), (v) => {\n    if (v) {\n      outputVector.value = sourceVector.value.slice(0);\n      pause();\n    }\n  });\n  return computed(() => {\n    const targetVector = unref(disabled) ? sourceVector : outputVector;\n    return isNumber(sourceValue.value) ? targetVector.value[0] : targetVector.value;\n  });\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(state, () => {\n    const params = new URLSearchParams(\"\");\n    Object.keys(state).forEach((key) => {\n      const mapEntry = state[key];\n      if (Array.isArray(mapEntry))\n        mapEntry.forEach((value) => params.append(key, value));\n      else if (removeNullishValues && mapEntry == null)\n        params.delete(key);\n      else if (removeFalsyValues && !mapEntry)\n        params.delete(key);\n      else\n        params.set(key, mapEntry);\n    });\n    write(params);\n  }, { deep: true });\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    window.history.replaceState(window.history.state, window.document.title, window.location.pathname + constructQuery(params));\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  useEventListener(window, \"popstate\", onChanged, false);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, false);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\n  const videoDeviceId = ref(options.videoDeviceId);\n  const audioDeviceId = ref(options.audioDeviceId);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(device) {\n    if (device.value === \"none\" || device.value === false)\n      return false;\n    if (device.value == null)\n      return true;\n    return {\n      deviceId: device.value\n    };\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(videoDeviceId),\n      audio: getDeviceOptions(audioDeviceId)\n    });\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(enabled, (v) => {\n    if (v)\n      _start();\n    else\n      _stop();\n  }, { immediate: true });\n  watch([videoDeviceId, audioDeviceId], () => {\n    if (autoSwitch.value && stream.value)\n      restart();\n  }, { immediate: true });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    videoDeviceId,\n    audioDeviceId,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c, _d, _e;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    if (isVue2) {\n      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;\n      key = (modelOptions == null ? void 0 : modelOptions.value) || \"value\";\n      if (!eventName)\n        event = (modelOptions == null ? void 0 : modelOptions.event) || \"input\";\n    } else {\n      key = \"modelValue\";\n    }\n  }\n  event = eventName || event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : isFunction(clone) ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    watch(() => props[key], (v) => proxy.value = cloneFn(v));\n    watch(proxy, (v) => {\n      if (v !== props[key] || deep)\n        _emit(event, v);\n    }, { deep });\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        _emit(event, value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props)\n    ret[key] = useVModel(props, key, emit, options);\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = resolveRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(vibrate, interval, {\n      immediate: false,\n      immediateCallback: false\n    });\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\nfunction useVirtualListResources(list) {\n  const containerRef = ref(null);\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  return { state, source, currentList, size, containerRef };\n}\nfunction createGetViewCapacity(state, source, itemSize) {\n  return (containerSize) => {\n    if (typeof itemSize === \"number\")\n      return Math.ceil(containerSize / itemSize);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      capacity = i;\n      if (sum > containerSize)\n        break;\n    }\n    return capacity - start;\n  };\n}\nfunction createGetOffset(source, itemSize) {\n  return (scrollDirection) => {\n    if (typeof itemSize === \"number\")\n      return Math.floor(scrollDirection / itemSize) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      if (sum >= scrollDirection) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n}\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\n  return () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n}\nfunction createGetDistance(itemSize, source) {\n  return (index) => {\n    if (typeof itemSize === \"number\") {\n      const size2 = index * itemSize;\n      return size2;\n    }\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\n    return size;\n  };\n}\nfunction useWatchForSizes(size, list, calculateRange) {\n  watch([size.width, size.height, list], () => {\n    calculateRange();\n  });\n}\nfunction createComputedTotalSize(itemSize, source) {\n  return computed(() => {\n    if (typeof itemSize === \"number\")\n      return source.value.length * itemSize;\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\n  });\n}\nconst scrollToDictionaryForElementScrollKey = {\n  horizontal: \"scrollLeft\",\n  vertical: \"scrollTop\"\n};\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\n  return (index) => {\n    if (containerRef.value) {\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\n      calculateRange();\n    }\n  };\n}\nfunction useHorizontalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowX: \"auto\" };\n  const { itemWidth, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\n  const getOffset = createGetOffset(source, itemWidth);\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceLeft = createGetDistance(itemWidth, source);\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\n  const totalWidth = createComputedTotalSize(itemWidth, source);\n  useWatchForSizes(size, list, calculateRange);\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        height: \"100%\",\n        width: `${totalWidth.value - offsetLeft.value}px`,\n        marginLeft: `${offsetLeft.value}px`,\n        display: \"flex\"\n      }\n    };\n  });\n  return {\n    scrollTo,\n    calculateRange,\n    wrapperProps,\n    containerStyle,\n    currentList,\n    containerRef\n  };\n}\nfunction useVerticalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowY: \"auto\" };\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\n  const getOffset = createGetOffset(source, itemHeight);\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceTop = createGetDistance(itemHeight, source);\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const totalHeight = createComputedTotalSize(itemHeight, source);\n  useWatchForSizes(size, list, calculateRange);\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  return {\n    calculateRange,\n    scrollTo,\n    containerStyle,\n    wrapperProps,\n    currentList,\n    containerRef\n  };\n}\n\nconst useWakeLock = (options = {}) => {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  let wakeLock;\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = ref(false);\n  async function onVisibilityChange() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    if (document && document.visibilityState === \"visible\")\n      wakeLock = await navigator.wakeLock.request(\"screen\");\n    isActive.value = !wakeLock.released;\n  }\n  if (document)\n    useEventListener(document, \"visibilitychange\", onVisibilityChange, { passive: true });\n  async function request(type) {\n    if (!isSupported.value)\n      return;\n    wakeLock = await navigator.wakeLock.request(type);\n    isActive.value = !wakeLock.released;\n  }\n  async function release() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    await wakeLock.release();\n    isActive.value = !wakeLock.released;\n    wakeLock = null;\n  }\n  return {\n    isSupported,\n    isActive,\n    request,\n    release\n  };\n};\n\nconst useWebNotification = (defaultOptions = {}) => {\n  const {\n    window = defaultWindow\n  } = defaultOptions;\n  const isSupported = useSupported(() => !!window && \"Notification\" in window);\n  const notification = ref(null);\n  const requestPermission = async () => {\n    if (!isSupported.value)\n      return;\n    if (\"permission\" in Notification && Notification.permission !== \"denied\")\n      await Notification.requestPermission();\n  };\n  const onClick = createEventHook();\n  const onShow = createEventHook();\n  const onError = createEventHook();\n  const onClose = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value)\n      return;\n    await requestPermission();\n    const options = Object.assign({}, defaultOptions, overrides);\n    notification.value = new Notification(options.title || \"\", options);\n    notification.value.onclick = (event) => onClick.trigger(event);\n    notification.value.onshow = (event) => onShow.trigger(event);\n    notification.value.onerror = (event) => onError.trigger(event);\n    notification.value.onclose = (event) => onClose.trigger(event);\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  tryOnMounted(async () => {\n    if (isSupported.value)\n      await requestPermission();\n  });\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n};\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = ref(\"CLOSED\");\n  const wsRef = ref();\n  const urlRef = resolveRef(url);\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let pongTimeoutWait;\n  const close = (code = 1e3, reason) => {\n    if (!wsRef.value)\n      return;\n    explicitlyClosed = true;\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n  };\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n    pongTimeoutWait = void 0;\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const ws = new WebSocket(urlRef.value, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      wsRef.value = void 0;\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      if (options.heartbeat) {\n        resetHeartbeat();\n        const {\n          message = DEFAULT_PING_MESSAGE\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === message)\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(() => {\n      send(message, false);\n      if (pongTimeoutWait != null)\n        return;\n      pongTimeoutWait = setTimeout(() => {\n        close();\n      }, pongTimeout);\n    }, interval, { immediate: false });\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (autoClose) {\n    useEventListener(window, \"beforeunload\", () => close());\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    watch(urlRef, open, { immediate: true });\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(arg0, workerOptions, options) {\n  const {\n    window = defaultWindow\n  } = options != null ? options : {};\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = function post2(val) {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(val);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    if (isString(arg0))\n      worker.value = new Worker(arg0, workerOptions);\n    else if (isFunction(arg0))\n      worker.value = arg0();\n    else\n      worker.value = arg0;\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nconst jobRunner = (userFunc) => (e) => {\n  const userFuncArgs = e.data[0];\n  return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n    postMessage([\"SUCCESS\", result]);\n  }).catch((error) => {\n    postMessage([\"ERROR\", error]);\n  });\n};\n\nconst depsParser = (deps) => {\n  if (deps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  return `importScripts(${depsString})`;\n};\n\nconst createWorkerBlobUrl = (fn, deps) => {\n  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n};\n\nconst useWebWorkerFn = (fn, options = {}) => {\n  const {\n    dependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = ref(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = ref();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(() => workerTerminate(\"TIMEOUT_EXPIRED\"), timeout);\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    promise.value = {\n      resolve,\n      reject\n    };\n    worker.value && worker.value.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\"[useWebWorkerFn] You can only run one instance of the worker at a time.\");\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n};\n\nfunction useWindowFocus({ window = defaultWindow } = {}) {\n  if (!window)\n    return ref(false);\n  const focused = ref(window.document.hasFocus());\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  });\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  });\n  return focused;\n}\n\nfunction useWindowScroll({ window = defaultWindow } = {}) {\n  if (!window) {\n    return {\n      x: ref(0),\n      y: ref(0)\n    };\n  }\n  const x = ref(window.scrollX);\n  const y = ref(window.scrollY);\n  useEventListener(window, \"scroll\", () => {\n    x.value = window.scrollX;\n    y.value = window.scrollY;\n  }, {\n    capture: false,\n    passive: true\n  });\n  return { x, y };\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Infinity,\n    initialHeight = Infinity,\n    listenOrientation = true,\n    includeScrollbar = true\n  } = options;\n  const width = ref(initialWidth);\n  const height = ref(initialHeight);\n  const update = () => {\n    if (window) {\n      if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  useEventListener(\"resize\", update, { passive: true });\n  if (listenOrientation)\n    useEventListener(\"orientationchange\", update, { passive: true });\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, SwipeDirection, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsMasterCss, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, cloneFnJSON, computedAsync, computedInject, createFetch, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePrevious, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nexport type InterfaceOf<T> = Pick<T, keyof T>;\r\nexport type Keys<T> = keyof T;\r\nexport type Values<T> = T[keyof T];\r\n\r\nexport const BlueprintItemState = {\r\n    None: 'A',\r\n    CannotLinkTarget: 'B',\r\n    CanLinkTarget: 'C',\r\n    CanLinkWithRecipeChange: 'D',\r\n    LinkAlreadyExists: 'E',\r\n} as const;\r\nexport type BlueprintItemStateKeys = Keys<typeof BlueprintItemState>;\r\nexport type BlueprintItemStateValues = Values<typeof BlueprintItemState>;\r\n\r\n\r\nexport const DEFAULT_PRECISION = .001;\r\nexport const MIN_PRECISION = 1e-8;\r\n\r\nexport const DEFAULT_BLUEPRINT_SPLIT = 60;\r\n\r\nexport const Objective = {\r\n    Primary: 7,\r\n    Secondary: 5,\r\n    LowPriority: 3,\r\n} as const;\r\nexport type ObjectiveType = typeof Objective[keyof typeof Objective] | undefined;\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {useLocalStorage} from '@vueuse/core';\r\nimport {type InjectionKey, provide, reactive, inject, watch, watchEffect, unref} from 'vue';\r\nimport type {GameData} from './data';\r\nimport type {PublicFilter} from './filter';\r\nimport type {BlueprintModel} from './model/store';\r\nimport {BlueprintItemState, DEFAULT_BLUEPRINT_SPLIT, type BlueprintItemStateValues} from './types';\r\n\r\ntype BlueprintItemStateColorClass = Record<BlueprintItemStateValues, string>;\r\n\r\nconst SavedKeys = [\r\n    'darkTheme',\r\n    'colorfulLinks',\r\n    'tier',\r\n    'tierEqual',\r\n    'groupTier',\r\n    'autoSolveGraph',\r\n    'solvePrecision',\r\n    'scale',\r\n    'colorfulLinks',\r\n    'dragAndDropEnabled',\r\n    'dragAndScrollEnabled',\r\n    'dragAndScrollOutsideWindow',\r\n    'overflowScrollEnabled',\r\n    'pointAndClickEnabled',\r\n    'scrollScaleEnabled',\r\n    'blueprintCompress',\r\n    'blueprintEncode',\r\n    'blueprintSplit',\r\n    'showSummary',\r\n    'showSummaryCompact',\r\n    'showCountControlsOnWindow',\r\n    'appendFileNameToLink',\r\n] as const;\r\ntype SavedKey = typeof SavedKeys[number];\r\ntype SavedObject = {\r\n    [k in SavedKey]: unknown;\r\n};\r\n\r\nfunction filterSavedKeys(object: SavedObject) {\r\n    const savedObject = SavedKeys.reduce((obj, key) => {\r\n        obj[key] = object[key];\r\n        return obj;\r\n    }, {} as SavedObject);\r\n    return savedObject;\r\n}\r\n\r\nfunction isTouchDevice() {\r\n    try {\r\n        return (('ontouchstart' in window) ||\r\n            (navigator.maxTouchPoints > 0));\r\n    } catch(err) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Settings implements SavedObject {\r\n    private _filter: PublicFilter;\r\n    private _blueprintModel: BlueprintModel;\r\n    private _isTouchDevice;\r\n\r\n    constructor(blueprintModel: BlueprintModel, filter: PublicFilter) {\r\n        this._blueprintModel = blueprintModel;\r\n        this._filter = filter;\r\n\r\n        const touchDevice = isTouchDevice();\r\n        this.dragAndDropEnabled = !touchDevice;\r\n        this.dragAndScrollEnabled = !touchDevice;\r\n        this.overflowScrollEnabled = !touchDevice;\r\n        this.pointAndClickEnabled = touchDevice;\r\n        this.scrollScaleEnabled = !touchDevice;\r\n        this._isTouchDevice = touchDevice;\r\n    }\r\n\r\n    get isTouchDevice() { return this._isTouchDevice; }\r\n\r\n    iconSize = 32;\r\n    itemStateColor: BlueprintItemStateColorClass = {\r\n        [BlueprintItemState.None]: 'bg-window-idle',\r\n        [BlueprintItemState.CannotLinkTarget]: 'bg-error',\r\n        [BlueprintItemState.CanLinkTarget]: 'bg-success',\r\n        [BlueprintItemState.LinkAlreadyExists]: 'bg-warning',\r\n        [BlueprintItemState.CanLinkWithRecipeChange]: 'bg-info',\r\n    };\r\n    scale = 1;\r\n    darkTheme = false;\r\n    colorfulLinks = true;\r\n    dragAndDropEnabled;\r\n    dragAndScrollEnabled;\r\n    dragAndScrollOutsideWindow = true;\r\n    overflowScrollEnabled;\r\n    pointAndClickEnabled;\r\n    scrollScaleEnabled;\r\n\r\n    blueprintCompress = true;\r\n    blueprintEncode = true;\r\n    blueprintSplit = DEFAULT_BLUEPRINT_SPLIT;\r\n\r\n    showSummary = true;\r\n    showSummaryCompact = true;\r\n    showCountControlsOnWindow = true;\r\n\r\n    appendFileNameToLink = true;\r\n\r\n    get tier() { return this._filter.tier; }\r\n    set tier(tier: number | undefined) { this._filter.tier = tier; }\r\n    get tierEqual() { return this._filter.tierEqual; }\r\n    set tierEqual(tierEqual: number) { this._filter.tierEqual = tierEqual; }\r\n    get groupTier() { return this._filter.groupTier; }\r\n    set groupTier(groupTier: boolean) { this._filter.groupTier = groupTier; }\r\n    get autoSolveGraph() { return this._blueprintModel.autoSolveGraph; }\r\n    set autoSolveGraph(autoSolveGraph: boolean) { this._blueprintModel.autoSolveGraph = autoSolveGraph; }\r\n    get solvePrecision() { return this._blueprintModel.solvePrecision; }\r\n    set solvePrecision(solvePrecision: number) { this._blueprintModel.solvePrecision = solvePrecision; }\r\n\r\n    save() {\r\n        return filterSavedKeys(this);\r\n    }\r\n    load(settings: SavedObject) {\r\n        const self = this as SavedObject;\r\n        for(const [key, value] of Object.entries(settings)) {\r\n            const _key = key as SavedKey;\r\n            //prevent unnecessary change events, if corresponding option is not changed\r\n            if((value !== undefined) && (self[_key] !== value)) {\r\n                self[_key] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const SettingsKey = Symbol('Settings') as InjectionKey<Settings>;\r\nexport const provideSettings = (gameData: GameData, blueprintModel: BlueprintModel, filter: PublicFilter) => {\r\n    const settings = reactive(new Settings(blueprintModel, filter));\r\n    const name = gameData.gameDescription.name;\r\n    provide(SettingsKey, settings);\r\n    const savedSettings = useLocalStorage<SavedObject>(`settings-${name}`, settings.save(), {\r\n        mergeDefaults: true,\r\n    });\r\n    settings.load(unref(savedSettings));\r\n    watchEffect(() => Object.assign(savedSettings.value, settings.save()));\r\n    watch(savedSettings, () => settings.load(unref(savedSettings)));\r\n    return settings;\r\n};\r\nexport const injectSettings = () => {\r\n    const settings = inject(SettingsKey);\r\n    if(!settings)\r\n        throw new Error('settings not instantiated');\r\n    return settings;\r\n};\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {Values} from './types';\r\nexport const __DEBUG__ = import.meta.env.DEV;\r\n\r\nexport const LOG = {\r\n    TRACE: 1,\r\n    DEBUG: 2,\r\n    INFO: 3,\r\n    WARN: 4,\r\n    ERROR: 5,\r\n} as const;\r\nexport type LogSeverity = Values<typeof LOG>;\r\n\r\nexport const log = (__DEBUG__ && typeof(console?.log) == 'function') ? (severity: LogSeverity, ...data: unknown[]) => {\r\n    try {\r\n        if(severity <= LOG.INFO) {\r\n            console.log(...data);\r\n        } else if(severity <= LOG.WARN) {\r\n            console.warn(...data);\r\n        } else {\r\n            console.error(...data);\r\n        }\r\n    } catch(err) { /**/ }\r\n} : (severity: LogSeverity, ...data: unknown[]) => { /**/ };\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nexport function freezeMap<K, V>(map: Map<K, V>): ReadonlyMap<K, V> {\r\n    if(map instanceof Map) {\r\n        map.set = (key: K) => {\r\n            throw new Error(`Can't set property ${key}, map is frozen`);\r\n        };\r\n\r\n        map.delete = (key: K) => {\r\n            throw new Error(`Can't delete property ${key}, map is frozen`);\r\n        };\r\n\r\n        map.clear = () => {\r\n            throw new Error(\"Can't clear map, map is frozen\");\r\n        };\r\n    }\r\n\r\n    return Object.freeze(map);\r\n}\r\n\r\nexport function freezeSet<T>(set: Set<T>): ReadonlySet<T> {\r\n    if(set instanceof Set) {\r\n        set.add = (value: T) => {\r\n            throw new Error(`Can't add value ${value}, set is frozen`);\r\n        };\r\n\r\n        set.delete = (value: T) => {\r\n            throw new Error(`Can't delete value ${value}, set is frozen`);\r\n        };\r\n\r\n        set.clear = () => {\r\n            throw new Error(\"Can't clear set, set is frozen\");\r\n        };\r\n    }\r\n\r\n    return Object.freeze(set);\r\n}\r\n\r\nexport function buildTransformStyle(transform: Record<string, string>): string {\r\n    return Object.entries(transform).map(([key, value]) => `${key}(${value})`).join(' ');\r\n}\r\n\r\n/**\r\n * Return 0 <= i <= array.length such that !pred(array[i - 1]) && pred(array[i]).\r\n */\r\nexport function binarySearch<T>(array: T[], pred: (item: T) => boolean): number {\r\n    let lo = -1;\r\n    let hi = array.length;\r\n    while((1 + lo) < hi) {\r\n        const mi = lo + ((hi - lo) >> 1);\r\n        if(pred(array[mi])) {\r\n            hi = mi;\r\n        } else {\r\n            lo = mi;\r\n        }\r\n    }\r\n    return hi;\r\n}\r\n\r\nexport function checkAborted(signal?: AbortSignal) {\r\n    if(signal?.aborted) {\r\n        const err = new Error('aborted');\r\n        err.name = 'AbortError';\r\n        throw err;\r\n    }\r\n}\r\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameImplementation} from '#types/game-implementation';\r\nimport type {\r\n    GameDescription,\r\n    GameDescriptionRaw,\r\n    GameImages,\r\n    GameItem,\r\n    GameItemRaw,\r\n    GameLogistic,\r\n    GameLogisticRaw,\r\n    GameLogisticTransport,\r\n    GameLogisticTransportRaw,\r\n    GameRecipe,\r\n    GameRecipeDictionary,\r\n    GameRecipeDictionaryRaw,\r\n    GameRecipeIO,\r\n    GameRecipeIORaw,\r\n    GameRecipeRaw,\r\n    ParsedItems,\r\n    ParsedRecipes,\r\n} from '#types/game-data';\r\nimport type {\r\n    GameDataSerialized,\r\n    GameDescriptionSerialized,\r\n    GameItemSerialized,\r\n    GameRecipeDictionarySerialized,\r\n    GameRecipeIOSerialized,\r\n    GameRecipeSerialized,\r\n    GameLogisticSerialized,\r\n    GameLogisticTransportSerialized,\r\n} from '#types/game-data-serialized';\r\nimport {inflate} from 'pako';\r\nimport {toUint8Array} from 'js-base64';\r\nimport {freezeMap, freezeSet} from '../util';\r\nimport type {Calculator} from '#types/calculator';\r\nimport {GameRecipeIOFlags, type GameItemType} from '#types/constants';\r\n\r\ntype ParsedItemsImpl = Map<string, Readonly<ItemImpl>>;\r\ntype ParsedRecipesImpl = Map<string, Readonly<RecipeDictionaryImpl>>;\r\n\r\nexport type ParsedGameData = {\r\n    parsedItems: ParsedItems;\r\n    parsedRecipes: ParsedRecipes;\r\n    parsedLogistic: GameLogistic[];\r\n    emptyRecipeDictionary: GameRecipeDictionary;\r\n    images: GameImages;\r\n    description: GameDescription;\r\n};\r\n\r\n//package private item\r\ntype ItemImpl = {\r\n    item: GameItem;\r\n    _postInit: (parsedRecipes: ParsedRecipesImpl) => void;\r\n};\r\nfunction createItemImpl(_item: GameItemSerialized, calculator: Calculator, order: number) {\r\n    const item: GameItemRaw = {\r\n        ..._item,\r\n        lowerLabel: _item.label.toLowerCase(),\r\n        recipeDictionary: undefined,\r\n        order,\r\n\r\n        formatCountPerSecond(count: number) {\r\n            return calculator.formatCountPerSecond(this, count);\r\n        },\r\n    };\r\n    if(!item.exdata)\r\n        item.exdata = {};\r\n\r\n    const itemImpl: ItemImpl = {\r\n        item,\r\n        _postInit(parsedRecipesImpl: ParsedRecipesImpl) {\r\n            if(item.recipe) {\r\n                const recipeDictionaryImpl = parsedRecipesImpl.get(item.recipe.recipeDictionary);\r\n                recipeDictionaryImpl?._postInitItem(this);\r\n                item.recipeDictionary = recipeDictionaryImpl?.recipeDictionary;\r\n            }\r\n            if(item.recipe)\r\n                Object.freeze(item.recipe);\r\n            if(item.cost)\r\n                Object.freeze(item.cost);\r\n            Object.freeze(item);\r\n        },\r\n    };\r\n\r\n    return itemImpl;\r\n}\r\n\r\n//package private io\r\ninterface RecipeIOOptions {\r\n    isInput: boolean;\r\n}\r\ntype RecipeIOImpl = {\r\n    io: GameRecipeIO;\r\n    _postInit: (parsedItems: ParsedItemsImpl) => void;\r\n};\r\nfunction createRecipeIOImpl(recipeImpl: Readonly<RecipeImpl>, _io: GameRecipeIOSerialized, options: RecipeIOOptions) {\r\n    const calculator = recipeImpl.recipeDictionaryImpl.calculator;\r\n    const io: GameRecipeIORaw = {\r\n        ..._io,\r\n        isInput: options.isInput,\r\n        flags: _io.flags || GameRecipeIOFlags.None,\r\n        recipe: recipeImpl.recipe,\r\n        product: {} as GameItem,\r\n        getCountPerSecond(item: GameItem) {\r\n            const count = calculator.getCountPerSecond(item, this);\r\n            return count;\r\n        },\r\n    };\r\n    //init exdata, keep it writable, it could be used as cache\r\n    if(!io.exdata)\r\n        io.exdata = {};\r\n\r\n    const ioImpl: RecipeIOImpl = {\r\n        io,\r\n        _postInit(parsedItemsImpl: ParsedItemsImpl) {\r\n            const itemImpl = parsedItemsImpl.get(io.name);\r\n            if(itemImpl) {\r\n                io.product = itemImpl.item;\r\n            }\r\n            //almost initialized\r\n            const flags = calculator.calculateIoFlags && calculator.calculateIoFlags(io);\r\n            if(flags)\r\n                io.flags |= flags;\r\n            Object.freeze(io);\r\n        },\r\n    };\r\n\r\n    return ioImpl;\r\n}\r\n\r\n//package private recipe\r\ntype RecipeImpl = {\r\n    recipe: GameRecipe;\r\n    recipeDictionaryImpl: Readonly<RecipeDictionaryImpl>;\r\n    _postInit: (parsedItems: ParsedItemsImpl) => void;\r\n};\r\nfunction createRecipeImpl(recipeDictionaryImpl: Readonly<RecipeDictionaryImpl>, _recipe: GameRecipeSerialized) {\r\n    function mapIO(_recipeImpl: RecipeImpl, itemArray: GameRecipeIOSerialized[] | undefined, options: RecipeIOOptions) {\r\n        if(!itemArray)\r\n            return [];\r\n        return itemArray.map((i) => createRecipeIOImpl(_recipeImpl, i, options));\r\n    }\r\n\r\n    let ioImpl: RecipeIOImpl[] = [];\r\n    const recipe: GameRecipeRaw = {\r\n        ..._recipe,\r\n        recipeDictionary: recipeDictionaryImpl.recipeDictionary,\r\n        input: [],\r\n        output: [],\r\n    };\r\n    //init exdata, keep it writable, it could be used as cache\r\n    if(!recipe.exdata)\r\n        recipe.exdata = {};\r\n\r\n    const recipeImpl: RecipeImpl = {\r\n        recipe,\r\n        recipeDictionaryImpl,\r\n        _postInit(parsedItemsImpl: ParsedItemsImpl) {\r\n            for(const io of ioImpl) {\r\n                io._postInit(parsedItemsImpl);\r\n            }\r\n            Object.freeze(recipe.input);\r\n            Object.freeze(recipe.output);\r\n            Object.freeze(recipe);\r\n        },\r\n    };\r\n\r\n    const inputImpl = mapIO(recipeImpl, _recipe.input, {isInput: true});\r\n    const outputImpl = mapIO(recipeImpl, _recipe.output, {isInput: false});\r\n    recipe.input = inputImpl.map(({io}) => io);\r\n    recipe.output = outputImpl.map(({io}) => io);\r\n    ioImpl = [...inputImpl, ...outputImpl];\r\n\r\n    return recipeImpl;\r\n}\r\n\r\n//package private recipe dictionary\r\ntype RecipeDictionaryImpl = {\r\n    recipeDictionary: GameRecipeDictionary;\r\n    calculator: Calculator;\r\n    _postInitItem: (item: Readonly<ItemImpl>) => void;\r\n    _postInit: (parsedItems: ParsedItemsImpl) => void;\r\n};\r\nfunction createRecipeDictionaryImpl(calculator: Calculator, _recipeDictionary: GameRecipeDictionarySerialized) {\r\n    const emptyMap = new Map();\r\n    const emptySet = new Set<GameItemType>();\r\n    let recipesImpl: RecipeImpl[] = [];\r\n    const recipeDictionary: GameRecipeDictionaryRaw = {\r\n        ..._recipeDictionary,\r\n        recipes: [],\r\n        items: [],\r\n\r\n        recipesMap: emptyMap,\r\n        //item name => recipe names\r\n        recipesByInputMap: emptyMap,\r\n        recipesByOutputMap: emptyMap,\r\n        hasInputTypes: emptySet,\r\n        hasOutputTypes: emptySet,\r\n    };\r\n    //init exdata, keep it writable, it could be used as cache\r\n    if(!recipeDictionary.exdata)\r\n        recipeDictionary.exdata = {};\r\n\r\n    const recipeDictionaryImpl: RecipeDictionaryImpl = {\r\n        recipeDictionary,\r\n        calculator,\r\n        _postInitItem(itemImpl: Readonly<ItemImpl>) {\r\n            recipeDictionary.items.push(itemImpl.item);\r\n        },\r\n        _postInit(parsedItemsImpl: ParsedItemsImpl) {\r\n            for(const recipeImpl of recipesImpl) {\r\n                recipeImpl._postInit(parsedItemsImpl);\r\n            }\r\n\r\n            Object.freeze(recipeDictionary.recipes);\r\n            Object.freeze(recipeDictionary.items);\r\n\r\n            recipeDictionary.recipesMap = freezeMap(new Map<string, GameRecipe>(\r\n                recipeDictionary.recipes.map((r) => [r.name, r]),\r\n            ));\r\n\r\n            const recipesByProduct = (type: 'input' | 'output') => {\r\n                const recipesByProductMap = new Map<string, string[]>();\r\n                const hasIoTypes = new Set<GameItemType>();\r\n                for(const recipe of recipeDictionary.recipes) {\r\n                    for(const io of recipe[type]) {\r\n                        let byProduct = recipesByProductMap.get(io.name);\r\n                        if(!byProduct) {\r\n                            byProduct = [];\r\n                            recipesByProductMap.set(io.name, byProduct);\r\n                        }\r\n                        byProduct.push(recipe.name);\r\n                        if(io.product.type) {\r\n                            hasIoTypes.add(io.product.type);\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    recipesByProductMap: freezeMap(recipesByProductMap),\r\n                    hasIoTypes: freezeSet(hasIoTypes),\r\n                };\r\n            };\r\n            const {recipesByProductMap: recipesByInputMap, hasIoTypes: hasInputTypes} = recipesByProduct('input');\r\n            recipeDictionary.recipesByInputMap = recipesByInputMap;\r\n            recipeDictionary.hasInputTypes = hasInputTypes;\r\n\r\n            const {recipesByProductMap: recipesByOutputMap, hasIoTypes: hasOutputTypes} = recipesByProduct('output');\r\n            recipeDictionary.recipesByOutputMap = recipesByOutputMap;\r\n            recipeDictionary.hasOutputTypes = hasOutputTypes;\r\n            Object.freeze(recipeDictionary);\r\n        },\r\n    };\r\n\r\n    recipesImpl = _recipeDictionary.recipes.map((r) => createRecipeImpl(recipeDictionaryImpl, r));\r\n    recipeDictionary.recipes = recipesImpl.map(({recipe}) => recipe);\r\n\r\n    return recipeDictionaryImpl;\r\n}\r\n\r\nfunction createLogisticTransportImpl(logisticImpl: Readonly<GameLogisticImpl>, _transport: GameLogisticTransportSerialized, item: GameItem) {\r\n    const {logistic} = logisticImpl;\r\n    const transport: GameLogisticTransportRaw = {\r\n        ..._transport,\r\n        logistic,\r\n        item,\r\n        countPerSecond: _transport.count / logistic.time,\r\n    };\r\n    Object.freeze(transport);\r\n    const transportResult: GameLogisticTransport = transport;\r\n    return transportResult;\r\n}\r\n\r\n//package private recipe dictionary\r\ntype GameLogisticImpl = {\r\n    logistic: GameLogistic;\r\n};\r\nfunction createLogisticImpl(_logistic: GameLogisticSerialized, parsedItems: ParsedItems) {\r\n    const logistic: GameLogisticRaw = {\r\n        ..._logistic,\r\n        transport: [],\r\n    };\r\n    const logisticImpl: GameLogisticImpl = {\r\n        logistic,\r\n    };\r\n\r\n    for(const transport of _logistic.transport) {\r\n        const item = parsedItems.get(transport.name);\r\n        if(!item)\r\n            continue;\r\n        const transportImpl = createLogisticTransportImpl(logisticImpl, transport, item);\r\n        logistic.transport.push(transportImpl);\r\n    }\r\n\r\n    logistic.transport.sort((a, b) => (a.countPerSecond - b.countPerSecond));\r\n\r\n    Object.freeze(logistic);\r\n    Object.freeze(logistic.transport);\r\n    Object.freeze(logistic.items);\r\n    const logisticResult: GameLogistic = logistic;\r\n    return logisticResult;\r\n}\r\n\r\ntype DescriptionData = {\r\n    minTier: number;\r\n    maxTier: number;\r\n};\r\nfunction createDescriptionImpl(_description: GameDescriptionSerialized, data: DescriptionData) {\r\n    const description: GameDescriptionRaw = {\r\n        ..._description,\r\n        ...data,\r\n    };\r\n\r\n    //sanitize header\r\n    description.shortName = (description.shortName + 'XX').substring(0, 2);\r\n    Object.freeze(description.compatibleSaveVersions);\r\n    Object.freeze(description);\r\n\r\n    return description;\r\n}\r\n\r\nexport function useGameDataParser(gameImplementation: GameImplementation): ParsedGameData {\r\n    const calculator = gameImplementation.useCalculator();\r\n    const _gameData = gameImplementation.useGameData();\r\n    let gameData: GameDataSerialized;\r\n    if(typeof(_gameData) == 'string') {\r\n        const compressed = toUint8Array(_gameData);\r\n        gameData = JSON.parse(inflate(compressed, {to: 'string'}));\r\n    } else {\r\n        gameData = _gameData;\r\n    }\r\n\r\n    const parsedItemsImpl = new Map<string, ItemImpl>();\r\n    const parsedRecipesImpl = new Map<string, RecipeDictionaryImpl>();\r\n    const parsedItems = new Map<string, GameItem>();\r\n    const parsedRecipes = new Map<string, GameRecipeDictionary>();\r\n\r\n    //calculate in advance, below classes will need it\r\n    //we'll ignore negative tiers\r\n    let minTier: undefined | number = undefined;\r\n    let maxTier: undefined | number = undefined;\r\n    for(const item of gameData.items) {\r\n        const tier1 = item.recipe?.tier;\r\n        if((tier1 !== undefined) && (tier1 >= 0)) {\r\n            if((minTier === undefined) || (tier1 < minTier))\r\n                minTier = tier1;\r\n            if((maxTier === undefined) || (tier1 > maxTier))\r\n                maxTier = tier1;\r\n        }\r\n    }\r\n    minTier = minTier ?? 0;\r\n    maxTier = maxTier ?? 0;\r\n\r\n    gameData.items.forEach((value, index) => {\r\n        const itemImpl = createItemImpl(value, calculator, index);\r\n        parsedItemsImpl.set(value.name, itemImpl);\r\n        parsedItems.set(value.name, itemImpl.item);\r\n    });\r\n    for(const value of gameData.recipeDictionaries) {\r\n        const recipeDictionaryImpl = createRecipeDictionaryImpl(calculator, value);\r\n        parsedRecipesImpl.set(value.name, recipeDictionaryImpl);\r\n        parsedRecipes.set(value.name, recipeDictionaryImpl.recipeDictionary);\r\n    }\r\n    for(const itemImpl of parsedItemsImpl.values()) {\r\n        itemImpl._postInit(parsedRecipesImpl);\r\n    }\r\n    for(const recipeDictionaryImpl of parsedRecipesImpl.values()) {\r\n        recipeDictionaryImpl._postInit(parsedItemsImpl);\r\n    }\r\n\r\n    const parsedLogistic = gameData.logistic?.map((logistic) => createLogisticImpl(logistic, parsedItems)) || [];\r\n    Object.freeze(parsedLogistic);\r\n\r\n    const description = createDescriptionImpl(gameData.description, {minTier, maxTier});\r\n    const images = gameData.images;\r\n    Object.freeze(images);\r\n\r\n    const {recipeDictionary: emptyRecipeDictionary} = createRecipeDictionaryImpl(calculator, {\r\n        name: '',\r\n        recipes: [],\r\n    });\r\n    Object.freeze(emptyRecipeDictionary);\r\n\r\n    return {\r\n        parsedItems: freezeMap(parsedItems),\r\n        parsedRecipes: freezeMap(parsedRecipes),\r\n        parsedLogistic,\r\n        emptyRecipeDictionary,\r\n        images,\r\n        description,\r\n    };\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {GameItemType} from '#types/constants';\r\nimport type {GameItem, GameLogistic} from '#types/game-data';\r\nimport type {GameImplementation} from '#types/game-implementation';\r\nimport {LOG, log} from '../debug';\r\nimport {freezeMap} from '../util';\r\nimport {useGameDataParser} from './game-data-parser';\r\n\r\nexport function useGameDataHolder(gameImplementation: GameImplementation) {\r\n    const parsedGameData = useGameDataParser(gameImplementation);\r\n\r\n    const gameItemsMap = parsedGameData.parsedItems;\r\n    const gameItemsArray = [...gameItemsMap.values()];\r\n    Object.freeze(gameItemsArray);\r\n\r\n    const gameAbstractItems = gameItemsArray.reduce((map, item) => {\r\n        if(item.isAbstractClassItem && item.type) {\r\n            if(map.has(item.type)) {\r\n                log(LOG.ERROR, `Duplicate abstract item type ${item.type}`);\r\n            } else {\r\n                map.set(item.type, item);\r\n            }\r\n        }\r\n        return map;\r\n    }, new Map<GameItemType, GameItem>());\r\n\r\n    const gameItemsByType = gameItemsArray.reduce((map, item) => {\r\n        const type = item.type || GameItemType.Unknown;\r\n        const items = map.get(type);\r\n        if(!items) {\r\n            map.set(type, [item]);\r\n        } else {\r\n            items.push(item);\r\n        }\r\n        return map;\r\n    }, new Map<GameItemType, GameItem[]>());\r\n\r\n    const gameFactoriesArray = gameItemsArray.filter((item) => item.recipeDictionary);\r\n    Object.freeze(gameFactoriesArray);\r\n\r\n    const gameLogisticByItemMap = new Map<string, GameLogistic[]>();\r\n    const gameLogisticByTypeMap = new Map<GameItemType, GameLogistic[]>();\r\n    for(const logistic of parsedGameData.parsedLogistic) {\r\n        for(const {name} of logistic.items) {\r\n            const item = gameItemsMap.get(name);\r\n            if(item) {\r\n                let logisticArray: GameLogistic[];\r\n                if(item.isAbstractClassItem && item.type) {\r\n                    let array = gameLogisticByTypeMap.get(item.type);\r\n                    if(!array) {\r\n                        array = [];\r\n                        gameLogisticByTypeMap.set(item.type, array);\r\n                    }\r\n                    logisticArray = array;\r\n                } else {\r\n                    let array = gameLogisticByItemMap.get(name);\r\n                    if(!array) {\r\n                        array = [];\r\n                        gameLogisticByItemMap.set(name, array);\r\n                    }\r\n                    logisticArray = array;\r\n                }\r\n                logisticArray.push(logistic);\r\n            }\r\n        }\r\n    }\r\n\r\n    const emptyRecipeDictionary = parsedGameData.emptyRecipeDictionary;\r\n\r\n    let preloadBlueprint: {\r\n        name: string;\r\n        data: string;\r\n    } | undefined = undefined;\r\n\r\n    const gameData = {\r\n        gameItemsArray,\r\n        gameAbstractItems: freezeMap(gameAbstractItems),\r\n        gameItemsByType: freezeMap(gameItemsByType),\r\n        getGameItem: (name: string) => gameItemsMap.get(name),\r\n        gameFactoriesArray,\r\n        getItemRecipeDictionary: (item?: GameItem) => (item?.recipeDictionary || emptyRecipeDictionary),\r\n        getLogistic: (item: GameItem) => [\r\n            ...(gameLogisticByItemMap.get(item.name) || []),\r\n            ...((item.type && gameLogisticByTypeMap.get(item.type)) || []),\r\n        ],\r\n        gameImages: parsedGameData.images,\r\n        getImage: (name: string) => parsedGameData.images[name],\r\n        gameDescription: parsedGameData.description,\r\n        get preloadBlueprint() { return preloadBlueprint; },\r\n        initPreloadBlueprint: (_preloadBlueprint: typeof preloadBlueprint) => {\r\n            preloadBlueprint = _preloadBlueprint;\r\n        },\r\n    };\r\n    Object.freeze(gameData);\r\n    return gameData;\r\n}\r\n\r\nexport type GameData = ReturnType<typeof useGameDataHolder>;\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {useEventListener} from '@vueuse/core';\r\n\r\nexport type LoadScriptOptionsPartial = {\r\n    timeout?: number;\r\n    attributes?: {[key: string]: string};\r\n};\r\nexport type LoadScriptOptions1 = LoadScriptOptionsPartial & {\r\n    globalVariable: string;\r\n};\r\nexport type LoadScriptOptions2<T> = Partial<LoadScriptOptions1> & {\r\n    validationCallback: (globalVariable?: unknown) => T | undefined;\r\n};\r\ntype LoadScriptOptions3 = Partial<LoadScriptOptions2<unknown>>;\r\n\r\nexport function loadScript(src: string, options: LoadScriptOptions1): Promise<unknown>;\r\nexport function loadScript<T>(src: string, options: LoadScriptOptions2<T>): Promise<T>;\r\nexport function loadScript(src: string, options?: LoadScriptOptionsPartial): Promise<true>;\r\nexport function loadScript(src: string, options?: LoadScriptOptions3): Promise<unknown> {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.setAttribute('async', 'async');\r\n        script.setAttribute('src', src);\r\n        for(const [key, value] of Object.entries(options?.attributes || {})) {\r\n            script.setAttribute(key, value);\r\n        }\r\n\r\n        const cleanupArray: (() => void)[] = [];\r\n        function cleanup() {\r\n            cleanupArray.forEach((c) => c());\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            cleanup();\r\n            reject(new Error(`Timeout loading script: ${src}`));\r\n        }, options?.timeout || 60000);\r\n        cleanupArray.push(() => clearTimeout(timeout));\r\n\r\n        function validateObject() {\r\n            if(!options?.globalVariable && !options?.validationCallback)\r\n                return true;\r\n            let globalVariable: unknown = undefined;\r\n            if(options.globalVariable) {\r\n                try {\r\n                    globalVariable = (window as unknown as {[key: string]: unknown})[options.globalVariable];\r\n                } catch(err) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            if(options.validationCallback) {\r\n                return options.validationCallback(globalVariable);\r\n            }\r\n            return globalVariable;\r\n        }\r\n        function pollResolved() {\r\n            const valid = validateObject();\r\n            if(valid === undefined)\r\n                return;\r\n            cleanup();\r\n            resolve(valid);\r\n        }\r\n\r\n        cleanupArray.push(useEventListener(script, ['error', 'abort'], () => {\r\n            cleanup();\r\n            reject(new Error(`Failed to load script: ${src}`));\r\n        }));\r\n\r\n        cleanupArray.push(useEventListener(script, 'load', () => {\r\n            pollResolved();\r\n        }));\r\n\r\n        document.head.appendChild(script);\r\n\r\n        const interval = setInterval(() => {\r\n            pollResolved();\r\n        }, 100);\r\n        cleanupArray.push(() => clearInterval(interval));\r\n    });\r\n}\r\n\r\nexport function createCss(css: string): void {\r\n    const style = document.createElement('style');\r\n    style.setAttribute('type', 'text/css');\r\n    style.innerText = css;\r\n    document.head.appendChild(style);\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {inject, ref, shallowRef, unref, watch, type InjectionKey, type Ref, type ShallowRef} from 'vue';\r\nimport {useGameDataHolder, type GameData} from './game-data-holder';\r\nexport type {GameData};\r\nimport gameList from '#types/game-list.json';\r\nimport {createCss, loadScript} from '../load-script-css';\r\nimport type {GameImplementation} from '#types/game-implementation';\r\nimport {useDebounceFn} from '@vueuse/core';\r\n\r\nconst __VERSION__ = 'v=' + encodeURIComponent(import.meta.env.VITE_VERSION);\r\n\r\nfunction initializeCss(gameId: string) {\r\n    const cssContent = `.icon-component {background-image: url(games/${encodeURIComponent(gameId)}/images.png?${__VERSION__});}`;\r\n    createCss(cssContent);\r\n}\r\n\r\nexport const GameDataKey = Symbol('GameData') as InjectionKey<ShallowRef<GameData>>;\r\n\r\nexport function useGameDataProvider(gameId: Ref<string>, onError?: (e: unknown) => void) {\r\n    const isLoading = ref(false);\r\n    const isReady = ref(false);\r\n    const isFailed = ref(false);\r\n    const isAutomatic = ref(false);\r\n    const gameDataRef = shallowRef<GameData | undefined>();\r\n\r\n    function loadGameData() {\r\n        const _gameId = unref(gameId);\r\n        Promise.resolve()\r\n            .then(() => new Promise((resolve) => { setTimeout(resolve, 1); }))\r\n            .then(() => {\r\n                if(!(_gameId in gameList))\r\n                    throw new Error(`Invalid game id: ${_gameId}`);\r\n                return loadScript(`games/${encodeURIComponent(_gameId)}/game.js?${__VERSION__}`, {\r\n                    globalVariable: 'gameImplementation',\r\n                });\r\n            })\r\n            .then((_gameImplementation) => {\r\n                const gameImplementation = _gameImplementation as GameImplementation;\r\n                const gameData = useGameDataHolder(gameImplementation);\r\n\r\n                initializeCss(_gameId);\r\n\r\n                gameDataRef.value = gameData;\r\n                isLoading.value = false;\r\n                isReady.value = true;\r\n            })\r\n            .catch((err) => {\r\n                isLoading.value = false;\r\n                isFailed.value = true;\r\n                onError?.(err);\r\n            });\r\n    }\r\n    const loadGameDataDebounce = useDebounceFn(loadGameData, 250);\r\n\r\n    watch(gameId, () => {\r\n        if(!unref(gameId)) {\r\n            return;\r\n        }\r\n        gameDataRef.value = undefined;\r\n        isLoading.value = true;\r\n        isReady.value = false;\r\n        isFailed.value = false;\r\n        unref(isAutomatic) ? loadGameData() : loadGameDataDebounce();\r\n    }, {immediate: true});\r\n\r\n    return {\r\n        isLoading,\r\n        isReady,\r\n        isFailed,\r\n        isAutomatic,\r\n        gameDataRef,\r\n        gameList,\r\n    };\r\n}\r\n\r\nexport function injectGameData(): GameData {\r\n    const gameData = unref(inject(GameDataKey));\r\n    if(!gameData)\r\n        throw new Error('gameData not instantiated');\r\n    return gameData;\r\n}\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {computed} from 'vue';\r\nimport {mdiAlert} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {injectGameData} from '@/scripts/data';\r\n\r\nconst props = defineProps<{\r\n    image: string;\r\n}>();\r\n\r\nconst gameData = injectGameData();\r\nconst settings = injectSettings();\r\n\r\nconst styleObject = computed(() => {\r\n    const location = gameData.getImage(props.image);\r\n    if(!location)\r\n        return undefined;\r\n    return {\r\n        width: `${settings.iconSize}px`,\r\n        height: `${settings.iconSize}px`,\r\n        'background-position': `${(-location[0] * settings.iconSize).toFixed(0)}px ${(-location[1] * settings.iconSize).toFixed(0)}px`,\r\n    };\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <slot />\r\n        <div\r\n            v-if=\"styleObject\"\r\n            class=\"icon-component\"\r\n            :style=\"styleObject\"\r\n        />\r\n        <v-icon\r\n            v-if=\"!styleObject\"\r\n            class=\"icon-warning\"\r\n            :icon=\"mdiAlert\"\r\n            :size=\"settings.iconSize\"\r\n            color=\"warning\"\r\n            role=\"img\"\r\n            aria-hidden=\"false\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.icon-warning {\r\n    display: block;\r\n}\r\n</style>\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem} from '#types/game-data';\r\nimport {type InjectionKey, provide, reactive, inject} from 'vue';\r\nimport type {GameData} from './data';\r\nimport type {InterfaceOf} from './types';\r\n\r\nclass Filter {\r\n    private readonly _gameData: GameData;\r\n    private _tier?: number;\r\n    private _tierEqual = 0;\r\n    private _groupTier;\r\n    private _key?: string;\r\n    private _direction = 0;\r\n    private _filtered?: GameItem[][];\r\n\r\n    constructor(_gameData: GameData) {\r\n        this._gameData = _gameData;\r\n        this._groupTier = _gameData.gameDescription.groupTier || false;\r\n    }\r\n\r\n    //suddenly may be null\r\n    get tier() { return this._tier; }\r\n    set tier(tier: number | undefined) { this._tier = tier ?? undefined; this._filtered = undefined; }\r\n\r\n    get tierEqual() { return this._tierEqual; }\r\n    set tierEqual(tierEqual: number) { this._tierEqual = tierEqual; this._filtered = undefined; }\r\n\r\n    get groupTier() { return this._groupTier; }\r\n    set groupTier(groupTier: boolean) { this._groupTier = groupTier; this._filtered = undefined; }\r\n\r\n    get key() { return this._key; }\r\n    set key(key: string | undefined) { this._key = key ?? undefined; this._filtered = undefined; }\r\n\r\n    get direction() { return this._direction; }\r\n    set direction(direction: number) { this._direction = direction; this._filtered = undefined; }\r\n\r\n    buildFilter(): GameItem[][] {\r\n        if(this._filtered)\r\n            return this._filtered;\r\n        let filteredItems = this._gameData.gameFactoriesArray;\r\n\r\n        //key takes precedence before label\r\n        //support filtering by abstract item class\r\n        const key = this._key;\r\n        const filterItem = key ? this._gameData.getGameItem(key) : undefined;\r\n        if(key && filterItem) {\r\n            const abstractFilterItemType = filterItem.isAbstractClassItem ? filterItem.type : undefined;\r\n            const relativeAbsractItem = filterItem.type ? this._gameData.gameAbstractItems.get(filterItem.type) : undefined;\r\n            filteredItems = filteredItems.filter((item) => {\r\n                if(item.name == key)\r\n                    return true;\r\n                const recipeDictionary = item.recipeDictionary;\r\n                if((this._direction <= 0) && recipeDictionary?.recipesByInputMap?.has(key))\r\n                    return true;\r\n                if(abstractFilterItemType && (this._direction <= 0) && recipeDictionary?.hasInputTypes?.has(abstractFilterItemType))\r\n                    return true;\r\n                if(relativeAbsractItem && (this._direction <= 0) && recipeDictionary?.recipesByInputMap?.has(relativeAbsractItem.name))\r\n                    return true;\r\n                if((this._direction >= 0) && recipeDictionary?.recipesByOutputMap?.has(key))\r\n                    return true;\r\n                if(abstractFilterItemType && (this._direction >= 0) && recipeDictionary?.hasOutputTypes?.has(abstractFilterItemType))\r\n                    return true;\r\n                if(relativeAbsractItem && (this._direction >= 0) && recipeDictionary?.recipesByOutputMap?.has(relativeAbsractItem.name))\r\n                    return true;\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if(this._tier !== undefined) {\r\n            const tier = this._tier;\r\n            filteredItems = filteredItems.filter((item) => {\r\n                const itemTier = item.recipe?.tier || 0;\r\n                if(this._tierEqual > 0)\r\n                    return itemTier >= tier;\r\n                if(this._tierEqual < 0)\r\n                    return itemTier <= tier;\r\n                return itemTier == tier;\r\n            });\r\n        }\r\n\r\n        const minTier = this._gameData.gameDescription.minTier;\r\n        let filteredGroup: GameItem[][];\r\n        if(this._groupTier) {\r\n            filteredGroup = [];\r\n            for(const item of filteredItems) {\r\n                const itemTier = item.recipe?.tier || 0;\r\n                let array = filteredGroup[itemTier - minTier];\r\n                if(!array) {\r\n                    array = [];\r\n                    filteredGroup[itemTier - minTier] = array;\r\n                }\r\n                array.push(item);\r\n            }\r\n        } else {\r\n            filteredGroup = [filteredItems];\r\n        }\r\n        this._filtered = filteredGroup;\r\n        return this._filtered;\r\n    }\r\n}\r\nexport type PublicFilter = InterfaceOf<Filter>;\r\n\r\nexport const FilterKey = Symbol('Filter') as InjectionKey<Filter>;\r\nexport const provideFilter = (gameData: GameData): PublicFilter => {\r\n    const filter = reactive(new Filter(gameData));\r\n    provide(FilterKey, filter);\r\n    return filter;\r\n};\r\nexport const injectFilter = (): Filter => {\r\n    const filter = inject(FilterKey);\r\n    if(!filter)\r\n        throw new Error('filter not instantiated');\r\n    return filter;\r\n};\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport {formatItem} from '@/scripts/format';\r\nimport type {SummaryItem} from '@/scripts/model/store';\r\nimport {computed} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    item: SummaryItem;\r\n    compact?: boolean;\r\n    format?: boolean;\r\n}>();\r\n\r\nconst filter = injectFilter();\r\nconst totalCountPerSecond = computed(() => (props.format\r\n    ? formatItem(props.item.totalCountPerSecond, props.item.item)\r\n    : props.item.totalCountPerSecond)\r\n    || '');\r\nconst border = computed(() => {\r\n    if(filter.key == props.item.item.name)\r\n        return 'highlight-border';\r\n    return '';\r\n});\r\nfunction filterForSummary() {\r\n    if(filter.key != props.item.item.name) {\r\n        filter.key = props.item.item.name;\r\n    } else {\r\n        filter.key = undefined;\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <v-list-item :class=\"props.compact ? 'pl-0' : ''\">\r\n        <template #prepend>\r\n            <div class=\"d-flex flex-column align-start\">\r\n                <icon-component :image=\"props.item.item.image\" class=\"hover-border\" :class=\"border\" @click.stop=\"filterForSummary()\" />\r\n                <div v-if=\"props.compact\" class=\"text-caption\">\r\n                    {{ totalCountPerSecond }}\r\n                </div>\r\n            </div>\r\n        </template>\r\n        <template #title>\r\n            <div v-if=\"!props.compact\" class=\"pl-2 text-body-2 details\">\r\n                {{ totalCountPerSecond }}\r\n                {{ ' ' }}\r\n                {{ props.item.item.label }}\r\n            </div>\r\n        </template>\r\n    </v-list-item>\r\n</template>\r\n\r\n<style scoped>\r\n.details {\r\n    white-space: normal;\r\n}\r\n</style>\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {InterfaceOf} from './types';\r\n\r\nexport type PointType = {x: number; y: number};\r\nexport type ReadonlyPointType = Readonly<PointType>;\r\nexport type PartialPointType = Partial<ReadonlyPointType>;\r\nexport type SizeType = {width: number; height: number};\r\nexport type ReadonlySizeType = Readonly<SizeType>;\r\nexport type PartialSizeType = Partial<ReadonlySizeType>;\r\nexport type RectType = PointType & SizeType;\r\nexport type ReadonlyRectType = Readonly<RectType>;\r\nexport type PartialRectType = Partial<RectType>;\r\n\r\ntype AssignablePoinFunction<T> = (point?: PartialPointType, assign?: PartialPointType) => T;\r\n\r\nclass PointBase<T> implements ReadonlyPointType {\r\n    private readonly _baseAssign;\r\n    readonly x;\r\n    readonly y;\r\n\r\n    protected constructor(_baseAssign: AssignablePoinFunction<T>, base?: PartialPointType, assign?: PartialPointType) {\r\n        this._baseAssign = _baseAssign;\r\n        this.x = assign?.x ?? base?.x ?? 0;\r\n        this.y = assign?.y ?? base?.y ?? 0;\r\n    }\r\n\r\n    assignPoint(assign?: PartialPointType) {\r\n        //filter only valid ones, for not unexpectedly dragging rect instead of point\r\n        return this._baseAssign(this, {x: assign?.x, y: assign?.y});\r\n    }\r\n    offsetBy(point: ReadonlyPointType, sign?: number) {\r\n        return this.assignPoint({\r\n            x: this.x + (sign || 1) * (point.x),\r\n            y: this.y + (sign || 1) * (point.y),\r\n        });\r\n    }\r\n    limit(rect: PublicRect) {\r\n        let x = this.x;\r\n        if(x < rect.x)\r\n            x = rect.x;\r\n        if(x > rect.x1)\r\n            x = rect.x1;\r\n\r\n        let y = this.y;\r\n        if(y < rect.y)\r\n            y = rect.y;\r\n        if(y > rect.y1)\r\n            y = rect.y1;\r\n        if((x == this.x) && (y == this.y))\r\n            return this;\r\n\r\n        return this.assignPoint({\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n    middlePoint(point: ReadonlyPointType) {\r\n        const middleX = (this.x + point.x) / 2;\r\n        const middleY = (this.y + point.y) / 2;\r\n        return this.assignPoint({x: middleX, y: middleY});\r\n    }\r\n    distanceTo(point: ReadonlyPointType) {\r\n        return this.assignPoint({\r\n            x: (this.x - point.x),\r\n            y: (this.y - point.y),\r\n        });\r\n    }\r\n    scalePoint(scale: number) {\r\n        return this.assignPoint({\r\n            x: (this.x * scale),\r\n            y: (this.y * scale),\r\n        });\r\n    }\r\n    isEqual(point: ReadonlyPointType) {\r\n        return (this.x === point.x) && (this.y === point.y);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.x}:${this.y}`;\r\n    }\r\n}\r\n\r\n//object is immutable\r\nexport class Point extends PointBase<Point> implements ReadonlyPointType {\r\n    protected constructor(base?: PartialPointType, assign?: PartialPointType) {\r\n        super(Point.assign, base, assign);\r\n        Object.freeze(this);\r\n    }\r\n\r\n    static assign(base?: PartialPointType, assign?: PartialPointType): Point {\r\n        return new Point(base, assign);\r\n    }\r\n\r\n    assign(assign?: PartialPointType) {\r\n        return Point.assign(this, assign);\r\n    }\r\n}\r\n\r\n//object is immutable\r\n//aligned to upper-left, as in html\r\nexport class Rect extends PointBase<Rect> implements ReadonlyRectType {\r\n    readonly width;\r\n    readonly height;\r\n    protected constructor(base?: PartialRectType, assign?: PartialRectType) {\r\n        super(Rect.assign, base, assign);\r\n        this.width = assign?.width ?? base?.width ?? 0;\r\n        this.height = assign?.height ?? base?.height ?? 0;\r\n        Object.freeze(this);\r\n    }\r\n\r\n    get x1() { return this.x + this.width; }\r\n    get y1() { return this.y + this.height; }\r\n\r\n    static assign(base?: PartialRectType, assign?: PartialRectType): Rect {\r\n        return new Rect(base, assign);\r\n    }\r\n\r\n    assign(assign?: PartialRectType): Rect {\r\n        return Rect.assign(this, assign);\r\n    }\r\n    assignSize(assign?: PartialSizeType): Rect {\r\n        //filter only valid ones\r\n        return Rect.assign(this, {width: assign?.width, height: assign?.height});\r\n    }\r\n\r\n    scaleSize(scale: number) {\r\n        return this.assignSize({\r\n            width: (this.width * scale),\r\n            height: (this.height * scale),\r\n        });\r\n    }\r\n    limit(rect: PublicRect) {\r\n        let x = this.x;\r\n        if(x < rect.x)\r\n            x = rect.x;\r\n        if(this.x1 > rect.x1)\r\n            x = rect.x1 - this.width;\r\n\r\n        let y = this.y;\r\n        if(y < rect.y)\r\n            y = rect.y;\r\n        if(this.y1 > rect.y1)\r\n            y = rect.y1 - this.height;\r\n        if((x == this.x) && (y == this.y))\r\n            return this;\r\n\r\n        return this.assignPoint({\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n    middleRectPoint() {\r\n        return this.middlePoint({x: this.x1, y: this.y1});\r\n    }\r\n\r\n    isEqual(rect: ReadonlyRectType) {\r\n        return super.isEqual(rect) && (this.width === rect.width) && (this.height === rect.height);\r\n    }\r\n\r\n    isPointInRect(point: ReadonlyPointType) {\r\n        return (point.x >= this.x) && (point.y >= this.y)\r\n            && (point.x <= this.x1) && (point.y <= this.y1);\r\n    }\r\n    isRectInRect(rect: ReadonlyRectType) {\r\n        return (rect.x >= this.x) && (rect.y >= this.y)\r\n            && ((rect.x + rect.width) <= this.x1) && ((rect.y + rect.height) <= this.y1);\r\n    }\r\n\r\n    toString() {\r\n        return `${super.toString()}|${this.width}:${this.height}`;\r\n    }\r\n}\r\n\r\nexport type PublicPoint = InterfaceOf<Point>;\r\nexport type PublicRect = InterfaceOf<Rect>;\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nlet currentKey = 0;\r\n\r\nconst colorClasses = [\r\n    'link-stroke-red',\r\n    'link-stroke-pink',\r\n    'link-stroke-purple',\r\n    'link-stroke-indigo',\r\n    'link-stroke-blue',\r\n    'link-stroke-light-blue',\r\n    'link-stroke-cyan',\r\n    'link-stroke-teal',\r\n    'link-stroke-green',\r\n    'link-stroke-light-green',\r\n    'link-stroke-lime',\r\n    'link-stroke-yellow',\r\n    'link-stroke-amber',\r\n    'link-stroke-orange',\r\n    'link-stroke-deep-orange',\r\n    'link-stroke-brown',\r\n];\r\nlet currentColorClass = 0;\r\n\r\nexport function newKey(key?: string) {\r\n    return key || ('k' + currentKey++);\r\n}\r\nexport function newColorClass() {\r\n    const colorClass = colorClasses[currentColorClass] || colorClasses[0];\r\n    currentColorClass = (currentColorClass + 1) % colorClasses.length;\r\n    return colorClass;\r\n}\r\nexport function resetKeyStore() {\r\n    currentKey = 0;\r\n    currentColorClass = 0;\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem} from '#types/game-data';\r\nimport {newKey} from './key-store';\r\nimport type {BlueprintModel} from './store';\r\n\r\nexport class ItemModelImpl {\r\n    private readonly _owner;\r\n    private readonly _key;\r\n    protected readonly _item;\r\n\r\n    constructor(owner?: BlueprintModel, item?: GameItem, key?: string) {\r\n        this._owner = owner;\r\n        this._item = item;\r\n        this._key = newKey(key);\r\n    }\r\n\r\n    _$getItem() { return this._item; }\r\n    get key() { return this._key; }\r\n    get name() { return this._item?.name; }\r\n    get label() { return this._item?.label; }\r\n    get image() { return this._item?.image || ''; }\r\n    get type() { return this._item?.type; }\r\n    get owner() { return this._owner; }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {GameRecipeIOFlags} from '#types/constants';\r\nimport type {GameItem, GameRecipeIO} from '#types/game-data';\r\nimport {Rect, type PublicRect} from '../geometry';\r\nimport {ItemModelImpl} from './item';\r\nimport type {\r\n    BlueprintItemModel,\r\n    BlueprintModel,\r\n    LinkModel,\r\n    RecipeIOModel,\r\n} from './store';\r\n\r\ntype RecipeIOOptions = {\r\n    owner?: BlueprintModel;\r\n    ownerItem?: BlueprintItemModel;\r\n    isReverce?: boolean;\r\n};\r\n\r\nexport class RecipeIOModelImpl extends ItemModelImpl {\r\n    private _rect: PublicRect = Rect.assign();\r\n    private readonly _io;\r\n    private readonly _ownerItem;\r\n    private readonly _isInput;\r\n    private readonly _links;\r\n    private readonly _cpsMax;\r\n    private _isFlipped = false;\r\n    private _matherializeAbstractItem: GameItem | undefined;\r\n    //1 - upper border, -1 - lower border\r\n    private _highlightBorder: -1 | 0 | 1 = 0;\r\n    private _causesSolvingError = false;\r\n\r\n    constructor(\r\n        io: GameRecipeIO,\r\n        {owner, ownerItem, isReverce}: RecipeIOOptions,\r\n    ) {\r\n        super(owner || ownerItem?.owner, io.product);\r\n        this._io = io;\r\n        this._ownerItem = ownerItem;\r\n        this._isInput = isReverce ? !io.isInput : io.isInput;\r\n        this._links = new Map<string, LinkModel>();\r\n\r\n        const ownerGameItem = ownerItem?._$getItem();\r\n        if(ownerGameItem !== undefined) {\r\n            this._cpsMax = this._io.getCountPerSecond(ownerGameItem);\r\n        } else {\r\n            //temp link\r\n            this._cpsMax = 0;\r\n        }\r\n    }\r\n\r\n    //in client coordinates related to blueprint panel\r\n    get rect(): PublicRect { return this._rect; }\r\n    setRect(rect: PublicRect) { this._rect = rect; }\r\n    get isInput() { return this._isInput; }\r\n    get ownerItem() { return this._ownerItem; }\r\n    get links() { return this._links.values(); }\r\n    get linksCount() { return this._links.size; }\r\n    get isFlipped() { return this._ownerItem?.isFlipped || this._isFlipped; }\r\n\r\n    get isAbstractClassItem() { return this._item?.isAbstractClassItem || false; }\r\n    get isMatherialized() { return !!this._matherializeAbstractItem; }\r\n    get rawName() { return this._item?.name; }\r\n\r\n    get name() { return this._matherializeAbstractItem?.name || this._item?.name; }\r\n    get label() { return this._matherializeAbstractItem?.label || this._item?.label; }\r\n    get image() { return this._matherializeAbstractItem?.image || this._item?.image || ''; }\r\n\r\n    get hasProbability() { return (this._io.flags & GameRecipeIOFlags.HasProbability); }\r\n    get isHidden() { return (this._io.flags & GameRecipeIOFlags.HideOnWindow) && !this.linksCount; }\r\n\r\n    get highlightBorder() { return this._highlightBorder; }\r\n    get causesSolvingError() { return this._causesSolvingError; }\r\n\r\n    setFlipped(isFlipped: boolean) {\r\n        if(this._ownerItem)\r\n            throw new Error('Cannot set flipped');\r\n        this._isFlipped = isFlipped;\r\n    }\r\n    setHighlightBorder(border: -1 | 0 | 1) {\r\n        this._highlightBorder = border;\r\n    }\r\n    setCausesSolvingError(causesSolvingError: boolean) {\r\n        this._causesSolvingError = causesSolvingError;\r\n    }\r\n\r\n    _$matherializeAbstractItem(item: GameItem | undefined) {\r\n        if(this.isAbstractClassItem)\r\n            this._matherializeAbstractItem = item;\r\n    }\r\n\r\n    _$linkAdded(value: LinkModel) {\r\n        this._links.set(value.key, value);\r\n        if(this.isAbstractClassItem && (this._links.size === 1)) {\r\n            const item = value.getOtherSide(this)?._$getItem();\r\n            //dual io abstract items support\r\n            this._ownerItem?.selectedRecipe?._$matherializeAllAbstractItems(item);\r\n        }\r\n        this._ownerItem?._$linkAdded(value);\r\n    }\r\n    _$linkDeleted(value: LinkModel) {\r\n        this._links.delete(value.key);\r\n        if(!this._links.size) {\r\n            //dual io abstract items support\r\n            this._ownerItem?.selectedRecipe?._$matherializeAllAbstractItems(undefined);\r\n        }\r\n        this._ownerItem?._$linkDeleted(value);\r\n    }\r\n    _$copySimilarLinksTo(targetItem: RecipeIOModel) {\r\n        for(const link of this._links.values()) {\r\n            const otherSide = link.getOtherSide(this);\r\n            if(!otherSide)\r\n                continue;\r\n            const newLink = this.owner?._$addLink(targetItem, otherSide);\r\n            newLink?._$copyColorClass(link);\r\n        }\r\n    }\r\n    _$deleteAllLinks() {\r\n        const linksCopy = [...this._links.values()];\r\n        for(const link of linksCopy) {\r\n            this.owner?._$deleteLink(link);\r\n        }\r\n        this._matherializeAbstractItem = undefined;\r\n    }\r\n\r\n    isAlreadyLinked(targetItem: RecipeIOModel) {\r\n        for(const link of this._links.values()) {\r\n            //may get proxy, so need to compare keys, not objects\r\n            if(link.getOtherSide(this)?.key === targetItem.key)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    createTempLink() {\r\n        const clone = new RecipeIOModelImpl(this._io, {owner: this.owner, isReverce: true});\r\n        clone.setRect(this._rect);\r\n        clone._$matherializeAbstractItem(this._matherializeAbstractItem);\r\n        const link = this.owner?._$createTempLink(this, clone);\r\n        return {\r\n            link,\r\n            target: clone,\r\n        };\r\n    }\r\n    get cpsMax() { return this._cpsMax; }\r\n    get cpsMaxTotal() {\r\n        let count = (this._ownerItem?.count || 1);\r\n        if(this._io.flags & GameRecipeIOFlags.RoundToCeil)\r\n            count = Math.ceil(count);\r\n        return this._cpsMax * count;\r\n    }\r\n    get cpsSolvedTotal() {\r\n        let count = this._ownerItem?.solvedCount;\r\n        if(count === undefined) {\r\n            return undefined;\r\n        }\r\n        if(this._io.flags & GameRecipeIOFlags.RoundToCeil) {\r\n            count = Math.ceil(count);\r\n        }\r\n        return this._cpsMax * count;\r\n    }\r\n    formatCountPerSecond(count: number) { return this._io.product.formatCountPerSecond(count); }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem, GameRecipe} from '#types/game-data';\r\nimport {RecipeIOModelImpl} from './recipe-io';\r\nimport type {SavedItem} from './saved-blueprint';\r\nimport type {BlueprintItemModel, RecipeIOModel, RecipeModel} from './store';\r\n\r\nexport class RecipeModelImpl {\r\n    private readonly _recipe;\r\n    private readonly _input: RecipeIOModel[];\r\n    private readonly _output: RecipeIOModel[];\r\n    private readonly _itemsByKey;\r\n\r\n    constructor(ownerItem: BlueprintItemModel, recipe: GameRecipe) {\r\n        this._recipe = recipe;\r\n        this._input = recipe.input.map((io) => new RecipeIOModelImpl(io, {ownerItem}));\r\n        this._output = recipe.output.map((io) => new RecipeIOModelImpl(io, {ownerItem}));\r\n\r\n        const items = [...this._input, ...this._output];\r\n        this._itemsByKey = new Map(items.map((io) => [io.key, io]));\r\n    }\r\n\r\n    _$findSimilarIo(sourceIo: RecipeIOModel, reverce: boolean) {\r\n        const isInput = reverce ? !sourceIo.isInput : sourceIo.isInput;\r\n        const targetArray = isInput ? this._input : this._output;\r\n        return targetArray.find((io) => RecipeModelImpl._$isSimilarIo(sourceIo, io));\r\n    }\r\n    static _$isSimilarIo(sourceIo: RecipeIOModel, targetIo: RecipeIOModel) {\r\n        if(targetIo.isAbstractClassItem && sourceIo.isAbstractClassItem)\r\n            return false;\r\n        return (targetIo.name === sourceIo.name)\r\n        || (\r\n            (targetIo.isAbstractClassItem !== sourceIo.isAbstractClassItem)\r\n            && !targetIo.isMatherialized\r\n            && !sourceIo.isMatherialized\r\n            && (targetIo.type === sourceIo.type)\r\n        );\r\n    }\r\n    _$copySimilarLinksTo(targetRecipe: RecipeModel) {\r\n        for(const targetItem of targetRecipe.items) {\r\n            const similarItem = this._$findSimilarIo(targetItem, false);\r\n            if(!similarItem)\r\n                continue;\r\n            similarItem._$copySimilarLinksTo(targetItem);\r\n        }\r\n    }\r\n    _$deleteAllLinks() {\r\n        for(const item of this.items) {\r\n            item._$deleteAllLinks();\r\n        }\r\n    }\r\n    _$matherializeAllAbstractItems(item: GameItem | undefined) {\r\n        const items = [...this._input, ...this._output];\r\n        if(item) {\r\n            //link is added, materialize all io\r\n            for(const io of items) {\r\n                io._$matherializeAbstractItem(item);\r\n            }\r\n        } else {\r\n            //link is removed, if no links are left - dematerialize all io\r\n            const haveLinks = items.some((io) => io.linksCount);\r\n            if(!haveLinks) {\r\n                for(const io of items) {\r\n                    io._$matherializeAbstractItem(undefined);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get name() { return this._recipe.name; }\r\n    get input() { return this._input[Symbol.iterator](); }\r\n    get output() { return this._output[Symbol.iterator](); }\r\n    itemByKey(key: string) { return this._itemsByKey.get(key); }\r\n    get items() { return this._itemsByKey.values(); }\r\n\r\n    visibleInput() {\r\n        return this._input.filter(item => !item.isHidden);\r\n    }\r\n    invisibleInput() {\r\n        return this._input.filter(item => item.isHidden);\r\n    }\r\n    visibleOutput() {\r\n        return this._output.filter(item => !item.isHidden);\r\n    }\r\n    invisibleOutput() {\r\n        return this._output.filter(item => item.isHidden);\r\n    }\r\n\r\n    swapIo(sourceIoKey: string, betweenIndex: [number | undefined, number | undefined]) {\r\n        const sourceIo = this._itemsByKey.get(sourceIoKey);\r\n        if(!sourceIo) {\r\n            return;\r\n        }\r\n        const sourceArray = sourceIo.isInput ? this._input : this._output;\r\n        let inserted = false;\r\n        const newArray = sourceArray.reduce((array, io, index) => {\r\n            if(io.key === sourceIo.key)\r\n                return array;\r\n            if(!inserted) {\r\n                if(((betweenIndex[0] !== undefined) && (index > betweenIndex[0]))\r\n                    || ((betweenIndex[1] !== undefined) && (index === betweenIndex[1]))) {\r\n                    array.push(sourceIo);\r\n                    array.push(io);\r\n                    inserted = true;\r\n                    return array;\r\n                }\r\n                if(index === (sourceArray.length - 1)) {\r\n                    array.push(io);\r\n                    array.push(sourceIo);\r\n                    inserted = true;\r\n                    return array;\r\n                }\r\n            }\r\n            array.push(io);\r\n            return array;\r\n        }, [] as RecipeIOModel[]);\r\n\r\n        //apply updates in place\r\n        newArray.forEach((io, index) => { if(sourceArray[index] !== io) sourceArray[index] = io; });\r\n        sourceIo.ownerItem?._$ioSwapped();\r\n    }\r\n    batchSwapIo(visibleKeyOrder: string[]) {\r\n        const orderMap = new Map<string, number>(visibleKeyOrder.map((key, index) => [key, index]));\r\n        for(const array of [this._input, this._output]) {\r\n            //invisible items at the end\r\n            array.sort((a, b) => (orderMap.get(a.key) ?? array.length) - (orderMap.get(b.key) ?? array.length));\r\n        }\r\n    }\r\n\r\n    _$saveIoOrder() {\r\n        const order = {\r\n            input: {\r\n                original: this._recipe.input,\r\n                user: this._input,\r\n            },\r\n            output: {\r\n                original: this._recipe.output,\r\n                user: this._output,\r\n            },\r\n        };\r\n        const savedOrder: Partial<SavedItem> = {};\r\n        for(const [key, value] of Object.entries(order)) {\r\n            const hasOriginalOrder = value.original.every((io, index) => (value.user[index].rawName === io.name));\r\n            if(!hasOriginalOrder) {\r\n                const originalIndexes = new Map<string, number>(\r\n                    value.original.map((io, index) => [io.name, index]),\r\n                );\r\n                const customOrder = value.user.map((io, index) => {\r\n                    const originalIndex = originalIndexes.get(io.rawName || '');\r\n                    if(originalIndex !== undefined)\r\n                        return originalIndex;\r\n                    return index;\r\n                });\r\n                if(key == 'input') {\r\n                    savedOrder.o1 = customOrder;\r\n                } else {\r\n                    savedOrder.o2 = customOrder;\r\n                }\r\n            }\r\n        }\r\n        return savedOrder;\r\n    }\r\n    _$loadIoOrder(savedOrder: SavedItem) {\r\n        const order = [{\r\n            original: this._recipe.input,\r\n            user: this._input,\r\n            order: savedOrder.o1,\r\n        }, {\r\n            original: this._recipe.output,\r\n            user: this._output,\r\n            order: savedOrder.o2,\r\n        },\r\n        ];\r\n        for(const value of order) {\r\n            if(!value.order)\r\n                continue;\r\n            const customOrder = new Map<string, number>(\r\n                value.order.map((originalIndex, customIndex) => [value.original[originalIndex]?.name || '', customIndex]),\r\n            );\r\n            [...value.user].forEach((io) => {\r\n                value.user[customOrder.get(io.rawName || '') || 0] = io;\r\n            });\r\n        }\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {RecipeModelImpl} from './recipe';\r\nimport {ItemModelImpl} from './item';\r\nimport type {\r\n    BlueprintItemModel,\r\n    BlueprintModel,\r\n    LinkModel,\r\n    RecipeIOModel,\r\n    RecipeModel,\r\n} from './store';\r\nimport {BlueprintItemState, type BlueprintItemStateValues, type ObjectiveType} from '../types';\r\nimport type {SavedItem, SavedLink} from './saved-blueprint';\r\nimport {Rect, type PublicRect, type ReadonlyPointType} from '../geometry';\r\nimport type {ErrorCollector} from '../error-collector';\r\n\r\nexport class BlueprintItemModelImpl extends ItemModelImpl {\r\n    private _rect: PublicRect = Rect.assign();\r\n    private readonly _recipesDictionary;\r\n    private readonly _recipes;\r\n    private _selectedRecipe?: RecipeModel;\r\n    private _count = 1;\r\n    private _solvedCount: number | undefined = undefined;\r\n    private _state: BlueprintItemStateValues = BlueprintItemState.None;\r\n    public partOfCycle = false;\r\n    public chainContainsError = false;\r\n    public isFlipped = false;\r\n    private _isLocked = false;\r\n    private _objective: ObjectiveType;\r\n    private _initializationCompleted = false;\r\n    private _linksGenerationNumber = 0;\r\n\r\n    constructor(owner: BlueprintModel, name: string) {\r\n        super(owner, owner.gameData.getGameItem(name));\r\n        this._recipesDictionary = owner.gameData.getItemRecipeDictionary(this._item);\r\n        this._recipes = this._recipesDictionary.recipesMap;\r\n        if(this._recipes.size) {\r\n            this._selectedRecipe = new RecipeModelImpl(this, this._recipes.values().next().value);\r\n        }\r\n    }\r\n\r\n    get cost() { return this._item?.cost?.[Symbol.iterator](); }\r\n    get rect(): PublicRect { return this._rect; }\r\n    setRect(rect: PublicRect) {\r\n        if(!this._rect.isEqual(rect)) {\r\n            this._rect = rect;\r\n        }\r\n    }\r\n    get selectedRecipe() { return this._selectedRecipe; }\r\n    get recipes() { return this._recipes.values(); }\r\n    get recipesCount() { return this._recipes.size; }\r\n    get state() { return this._state; }\r\n    get count() { return this._count; }\r\n    get solvedCount() { return this._solvedCount; }\r\n    get isLocked() { return this._isLocked; }\r\n    setLocked(isLocked: boolean) { this._isLocked = isLocked; this.owner?._$graphChanged(false, this); }\r\n    get objective() { return this._objective; }\r\n    setObjective(objective: ObjectiveType) { this._objective = objective; this.owner?._$graphChanged(false, this); }\r\n\r\n    initializationCompleted() {\r\n        if(!this._initializationCompleted) {\r\n            this._initializationCompleted = true;\r\n            this.owner?._$itemInitializationCompleted(this);\r\n        }\r\n    }\r\n    get linksGenerationNumber() { return this._linksGenerationNumber; }\r\n\r\n    calculateLinkState(sourceIo?: RecipeIOModel | null): BlueprintItemStateValues {\r\n        if(!sourceIo) {\r\n            return BlueprintItemState.None;\r\n        }\r\n        const maybeTarget = this._selectedRecipe?._$findSimilarIo(sourceIo, true);\r\n        if(maybeTarget) {\r\n            if(maybeTarget.isAlreadyLinked(sourceIo)) {\r\n                return BlueprintItemState.LinkAlreadyExists;\r\n            }\r\n            return BlueprintItemState.CanLinkTarget;\r\n        }\r\n        if(this.possibleRecipeForIo(sourceIo)) {\r\n            return BlueprintItemState.CanLinkWithRecipeChange;\r\n        }\r\n        return BlueprintItemState.CannotLinkTarget;\r\n    }\r\n    updateLinkState(sourceIo?: RecipeIOModel | null) {\r\n        this._state = this.calculateLinkState(sourceIo);\r\n    }\r\n    createLink(sourceIo: RecipeIOModel) {\r\n        const maybeTarget = this._selectedRecipe?._$findSimilarIo(sourceIo, true);\r\n        if(!maybeTarget)\r\n            return;\r\n        this.owner?._$addLink(sourceIo, maybeTarget);\r\n    }\r\n    selectRecipe(name: string) {\r\n        const recipe = this._recipes.get(name);\r\n        if(!recipe)\r\n            return false;\r\n        const oldRecipe = this._selectedRecipe;\r\n        const newRecipe = new RecipeModelImpl(this, recipe);\r\n        if(oldRecipe?.name == newRecipe.name)\r\n            return true;\r\n        //try to persist similar links from old recipe to new one\r\n        oldRecipe?._$copySimilarLinksTo(newRecipe);\r\n        oldRecipe?._$deleteAllLinks();\r\n        this._selectedRecipe = newRecipe;\r\n        this.owner?._$graphChanged(false, this);\r\n        return true;\r\n    }\r\n    possibleRecipeForIo(sourceIo?: RecipeIOModel | null): string | undefined {\r\n        if(!sourceIo || (sourceIo.isAbstractClassItem && !sourceIo.isMatherialized))\r\n            return undefined;\r\n        return this.possibleRecipeForItem(sourceIo.name || '', sourceIo.isInput ? 1 : -1);\r\n    }\r\n    possibleRecipeForItem(name: string, direction: number): string | undefined {\r\n        let possibleRecipesArray: string[] = [];\r\n        if(direction <= 0) {\r\n            const possibleRecipes = this._recipesDictionary.recipesByInputMap.get(name);\r\n            if(possibleRecipes)\r\n                possibleRecipesArray = possibleRecipesArray.concat(possibleRecipes);\r\n        }\r\n        if(direction >= 0) {\r\n            const possibleRecipes = this._recipesDictionary.recipesByOutputMap.get(name);\r\n            if(possibleRecipes)\r\n                possibleRecipesArray = possibleRecipesArray.concat(possibleRecipes);\r\n        }\r\n        if(!possibleRecipesArray.length)\r\n            return undefined;\r\n        return possibleRecipesArray[0];\r\n    }\r\n    setCount(count: number) {\r\n        this._count = count;\r\n        this.owner?._$graphChanged(false, this);\r\n    }\r\n    setSolvedCount(solvedCount?: number) {\r\n        this._solvedCount = solvedCount;\r\n    }\r\n    resetSolutionStatus() {\r\n        if(this.chainContainsError)\r\n            this.chainContainsError = false;\r\n        for(const io of this._selectedRecipe?.output || []) {\r\n            if(io.causesSolvingError) {\r\n                io.setCausesSolvingError(false);\r\n            }\r\n            for(const link of io.links) {\r\n                //input will reset automatically, because each link has two connected io\r\n                link.setFlow(undefined);\r\n            }\r\n        }\r\n    }\r\n    deleteAllLinks() {\r\n        this._selectedRecipe?._$deleteAllLinks();\r\n    }\r\n    deleteThis() {\r\n        //if it is not linked to anything, it will not change graph\r\n        //if it linked - _$deleteLink will cause graph update\r\n        this._selectedRecipe?._$deleteAllLinks();\r\n        this.owner?._$deleteItem(this);\r\n    }\r\n    _$save(offsetBy?: ReadonlyPointType): SavedItem {\r\n        let rect = this.rect;\r\n        if(offsetBy) {\r\n            rect = rect.offsetBy(offsetBy);\r\n        }\r\n        return {\r\n            n: this._item?.name || '',\r\n            p: [Math.round(rect.x), Math.round(rect.y)],\r\n            r: this._selectedRecipe?.name || '',\r\n            c: (this._count == 1) ? undefined : this._count,\r\n            f: this.isFlipped ? 1 : undefined,\r\n            l: this._isLocked ? 1 : undefined,\r\n            o: this._objective,\r\n            ...this._selectedRecipe?._$saveIoOrder(),\r\n        };\r\n    }\r\n    _$loadItem(i: SavedItem, errorCollector: ErrorCollector) {\r\n        if(!this.selectRecipe(i.r)) {\r\n            errorCollector.collectError(`Cannot select recipe ${i.r} for item ${this.label}`);\r\n        }\r\n        this._rect = this._rect.assign({\r\n            x: i.p[0],\r\n            y: i.p[1],\r\n        });\r\n        this.setCount(i.c || 1);\r\n        this.isFlipped = i.f ? true : false;\r\n        this._isLocked = i.l ? true : false;\r\n        this._objective = i.o;\r\n        this._selectedRecipe?._$loadIoOrder(i);\r\n    }\r\n    _$loadLink(l: SavedLink, outputItem: BlueprintItemModel, errorCollector: ErrorCollector) {\r\n        let inputIoArray = [...this._selectedRecipe?.input || []];\r\n        let outputIoArray = [...outputItem.selectedRecipe?.output || []];\r\n        if(!inputIoArray.length || !outputIoArray.length)\r\n            return undefined;\r\n        //if we can link by multiple paths for same item - then link is ambiguous\r\n        //we should restore saved name\r\n        if(l.n) {\r\n            inputIoArray = inputIoArray.filter((io) => ((io.name == l.n) || io.isAbstractClassItem));\r\n            outputIoArray = outputIoArray.filter((io) => ((io.name == l.n) || io.isAbstractClassItem));\r\n        }\r\n        let link: LinkModel | undefined;\r\n        for(const inputIo of inputIoArray) {\r\n            const maybeTarget = outputIoArray.find((io) => RecipeModelImpl._$isSimilarIo(inputIo, io));\r\n            if(maybeTarget) {\r\n                link = this.owner?._$addLink(inputIo, maybeTarget);\r\n                break;\r\n            }\r\n        }\r\n        if(!link) {\r\n            errorCollector.collectError(`Cannot load link \"${outputItem.label}\" => \"${this.label}\"`);\r\n        }\r\n        return link;\r\n    }\r\n\r\n    _$linkAdded(value: LinkModel) {\r\n        if(this._initializationCompleted) {\r\n            this._linksGenerationNumber++;\r\n        }\r\n    }\r\n    _$linkDeleted(value: LinkModel) {\r\n        if(this._initializationCompleted) {\r\n            this._linksGenerationNumber++;\r\n        }\r\n    }\r\n    _$ioSwapped() {\r\n        if(this._initializationCompleted) {\r\n            this._linksGenerationNumber++;\r\n        }\r\n    }\r\n\r\n    isUpgradable(direction?: -1 | 1): boolean {\r\n        if(!this._item?.nextTier && !this._item?.prevTier)\r\n            return false;\r\n        if(direction === undefined)\r\n            return true;\r\n        if((direction < 0) && this._item?.prevTier)\r\n            return true;\r\n        if((direction > 0) && this._item?.nextTier)\r\n            return true;\r\n        return false;\r\n    }\r\n    upgrade(direction: -1 | 1) {\r\n        //tricky. will recreate new item, and place it instead of old one\r\n        const nextTier = ((direction > 0) && this._item?.nextTier)\r\n            || ((direction < 0) && this._item?.prevTier);\r\n        if(!nextTier) {\r\n            return;\r\n        }\r\n        const newItem = this.owner?.addItem(nextTier);\r\n        if(!newItem) {\r\n            return;\r\n        }\r\n\r\n        newItem.setRect(this._rect);\r\n        newItem.setCount(this._count);\r\n        newItem.isFlipped = this.isFlipped;\r\n        newItem.setLocked(this._isLocked);\r\n        newItem.setObjective(this._objective);\r\n\r\n        if(this._selectedRecipe) {\r\n            newItem._$selectSimilarRecipe(this._selectedRecipe);\r\n        }\r\n\r\n        this.deleteThis();\r\n    }\r\n\r\n    _$selectSimilarRecipe(otherRecipe: RecipeModel) {\r\n        //try to select similar recipe\r\n        //next tier may not have same recipe, we must just check all io, and select most appropriate\r\n        const recipeWeight = new Map<string, number>();\r\n        const calcWeight = (ioArray: IterableIterator<RecipeIOModel> | undefined, recipeMap: ReadonlyMap<string, string[]>) => {\r\n            if(!ioArray) {\r\n                return;\r\n            }\r\n            for(const io of ioArray) {\r\n                const recipe = recipeMap.get(io.name || '') || [];\r\n                for(const recipeItem of recipe) {\r\n                    let weight = recipeWeight.get(recipeItem);\r\n                    if(!weight) {\r\n                        weight = 0;\r\n                    }\r\n                    recipeWeight.set(recipeItem, weight + 1);\r\n                }\r\n            }\r\n        };\r\n        calcWeight(otherRecipe.input, this._recipesDictionary.recipesByInputMap);\r\n        calcWeight(otherRecipe.output, this._recipesDictionary.recipesByOutputMap);\r\n        const selectedRecipe = [...recipeWeight.entries()].sort((a, b) => b[1] - a[1])?.[0]?.[0];\r\n\r\n        if(selectedRecipe) {\r\n            this.selectRecipe(selectedRecipe);\r\n            if(this._selectedRecipe) {\r\n                otherRecipe._$copySimilarLinksTo(this._selectedRecipe);\r\n            }\r\n        }\r\n    }\r\n}\r\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import pointRadial from \"../pointRadial.js\";\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point === 0) {\n      this._point = 1;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\n\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\n\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}\n","import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {Point, Rect} from '../geometry';\r\nimport type {PublicPoint, PublicRect} from '../geometry';\r\nimport {link, curveBumpX, line, curveBasis} from 'd3-shape';\r\n\r\nconst svgLinkBuilderStraight = link(curveBumpX);\r\nconst svgLinkBuilderCurved = line().curve(curveBasis);\r\n\r\nexport class LinkShape {\r\n    public readonly svgLink;\r\n    public readonly middlePoint;\r\n\r\n    constructor(svgLink: string, middlePoint: PublicPoint) {\r\n        this.svgLink = svgLink;\r\n        this.middlePoint = middlePoint;\r\n    }\r\n}\r\n\r\nexport class LinkShapeDescriptor {\r\n    public readonly input;\r\n    public readonly output;\r\n    public readonly inputFlipped;\r\n    public readonly outputFlipped;\r\n\r\n    constructor(input?: PublicRect, output?: PublicRect, inputFlipped?: boolean, outputFlipped?: boolean) {\r\n        this.input = input || Rect.assign();\r\n        this.output = output || Rect.assign();\r\n        this.inputFlipped = inputFlipped || false;\r\n        this.outputFlipped = outputFlipped || false;\r\n    }\r\n\r\n    isEqual(shape: LinkShapeDescriptor) {\r\n        return this.input.isEqual(shape.input)\r\n            && this.output.isEqual(shape.output)\r\n            && (this.inputFlipped === shape.inputFlipped)\r\n            && (this.outputFlipped === shape.outputFlipped);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.input.toString()}=>${this.output.toString()}`;\r\n    }\r\n}\r\n\r\nexport class LinkShapeModel {\r\n    public readonly shape;\r\n    public readonly descriptor;\r\n\r\n    constructor(shape: LinkShape, descriptor: LinkShapeDescriptor) {\r\n        this.shape = shape;\r\n        this.descriptor = descriptor;\r\n    }\r\n}\r\n\r\nexport class LinkShapeModelBuilder {\r\n    private readonly descriptor;\r\n\r\n    constructor(descriptor: LinkShapeDescriptor) {\r\n        this.descriptor = descriptor;\r\n    }\r\n\r\n    buildShape() {\r\n        return new LinkShapeModel(this._buildShape(), this.descriptor);\r\n    }\r\n\r\n    _buildShape(): LinkShape {\r\n        const {\r\n            input,\r\n            output,\r\n            inputFlipped,\r\n            outputFlipped,\r\n        } = this.descriptor;\r\n\r\n        const inputPoint = LinkShapeModelBuilder.calculateLinkOrigin(input, !inputFlipped);\r\n        const outputPoint = LinkShapeModelBuilder.calculateLinkOrigin(output, outputFlipped);\r\n\r\n        if(inputFlipped == outputFlipped) {\r\n            return this._buildShapeSameDirection(inputPoint, outputPoint, inputFlipped);\r\n        }\r\n        return this._buildShapeMultiDirection(inputPoint, outputPoint, outputFlipped);\r\n    }\r\n\r\n    private _buildShapeSameDirection(inputPoint: PublicPoint, outputPoint: PublicPoint, isFlipped: boolean) {\r\n        const breakingWidth = this.curveBreakingWidth();\r\n        const sourcePoint = isFlipped ? inputPoint : outputPoint;\r\n        const targetPoint = isFlipped ? outputPoint : inputPoint;\r\n        const distance = targetPoint.distanceTo(sourcePoint);\r\n\r\n        //important, that link will run through middle point, even if curved\r\n        //so link connector will use the same algorithm for both\r\n        const middlePoint = sourcePoint.middlePoint(targetPoint);\r\n\r\n        if((distance.x > breakingWidth) || (Math.abs(distance.y) < breakingWidth)) {\r\n            const svgLink = svgLinkBuilderStraight({\r\n                source: [sourcePoint?.x || 0, sourcePoint?.y || 0],\r\n                target: [targetPoint?.x || 0, targetPoint?.y || 0],\r\n            });\r\n            return new LinkShape(svgLink || '', middlePoint);\r\n        }\r\n\r\n        const sourcePoint2 = sourcePoint.offsetBy({x: breakingWidth, y: 0});\r\n        const targetPoint2 = targetPoint.offsetBy({x: -breakingWidth, y: 0});\r\n\r\n        //build a square path then make curve for two segments\r\n        const svgLink1 = svgLinkBuilderCurved([\r\n            [sourcePoint.x, sourcePoint.y],\r\n            [sourcePoint2.x, sourcePoint2.y],\r\n            [sourcePoint2.x, middlePoint.y],\r\n            [middlePoint.x, middlePoint.y],\r\n        ]);\r\n        const svgLink2 = svgLinkBuilderCurved([\r\n            [middlePoint.x, middlePoint.y],\r\n            [targetPoint2.x, middlePoint.y],\r\n            [targetPoint2.x, targetPoint2.y],\r\n            [targetPoint.x, targetPoint.y],\r\n        ]);\r\n        return new LinkShape((svgLink1 || '') + (svgLink2 || ''), middlePoint);\r\n    }\r\n\r\n    private _buildShapeMultiDirection(inputPoint: PublicPoint, outputPoint: PublicPoint, leftSide: boolean) {\r\n        const breakingWidth = this.curveBreakingWidth();\r\n        const offsetMultiplier = leftSide ? -1 : 1;\r\n\r\n        const inputPoint2 = inputPoint.offsetBy({x: offsetMultiplier * breakingWidth, y: 0});\r\n        const outputPoint2 = outputPoint.offsetBy({x: offsetMultiplier * breakingWidth, y: 0});\r\n        const offsetMax = leftSide ? Math.min(inputPoint2.x, outputPoint2.x) : Math.max(inputPoint2.x, outputPoint2.x);\r\n        const middlePoint = inputPoint2.middlePoint(outputPoint2).assignPoint({x: offsetMax});\r\n\r\n        //build a square path then make curve for two segments\r\n        const svgLink1 = svgLinkBuilderCurved([\r\n            [inputPoint.x, inputPoint.y],\r\n            [offsetMax, inputPoint2.y],\r\n            [offsetMax, middlePoint.y],\r\n            [middlePoint.x, middlePoint.y],\r\n        ]);\r\n        const svgLink2 = svgLinkBuilderCurved([\r\n            [middlePoint.x, middlePoint.y],\r\n            [offsetMax, middlePoint.y],\r\n            [offsetMax, outputPoint2.y],\r\n            [outputPoint.x, outputPoint.y],\r\n        ]);\r\n        return new LinkShape((svgLink1 || '') + (svgLink2 || ''), middlePoint);\r\n    }\r\n\r\n    private static calculateLinkOrigin(rect: PublicRect, isLeftSide: boolean): PublicPoint {\r\n        if(isLeftSide) {\r\n            return Point.assign({\r\n                x: rect.x,\r\n                y: rect.y + (rect.height / 2),\r\n            });\r\n        }\r\n        return Point.assign({\r\n            x: rect.x + rect.width,\r\n            y: rect.y + (rect.height / 2),\r\n        });\r\n    }\r\n    private curveBreakingWidth() {\r\n        const {\r\n            input,\r\n            output,\r\n        } = this.descriptor;\r\n\r\n        const maxHeight = Math.max(input.height, output.height);\r\n        return maxHeight * 1.2;\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport type {GameLogistic, GameLogisticTransport} from '#types/game-data';\r\nimport {binarySearch} from '../util';\r\nimport type {BlueprintModel, LinkModel, LogisticModel, LogisticSetModel, TransportModel} from './store';\r\n\r\n\r\nexport class TransportModelImpl {\r\n    private readonly _transport: GameLogisticTransport;\r\n    private readonly _index: number;\r\n    private readonly _link: LinkModel;\r\n\r\n    constructor(_transport: GameLogisticTransport, _index: number, _link: LinkModel) {\r\n        this._transport = _transport;\r\n        this._index = _index;\r\n        this._link = _link;\r\n    }\r\n\r\n    get name() { return this._transport.name; }\r\n    get index() { return this._index; }\r\n    get countPerSecond() { return this._transport.countPerSecond; }\r\n    get count() {\r\n        const flow = this._link.flow;\r\n        return Math.ceil((flow || 0) / this._transport.countPerSecond);\r\n    }\r\n    get item() { return this._transport.item; }\r\n    get label() { return this._transport.label || this._transport.item.label; }\r\n    formatCountPerSecond(count: number) { return this._transport.item.formatCountPerSecond(count); }\r\n}\r\n\r\n\r\nexport class LogisticModelImpl {\r\n    private readonly _logistic: GameLogistic;\r\n    private readonly _link: LinkModel;\r\n    private readonly _globals: BlueprintModel;\r\n\r\n    private _selectedTransport?: TransportModel;\r\n\r\n    constructor(_logistic: GameLogistic, _link: LinkModel, _globals: BlueprintModel) {\r\n        this._logistic = _logistic;\r\n        this._link = _link;\r\n        this._globals = _globals;\r\n    }\r\n\r\n    get isLocked() {\r\n        const selectedTransport = this.selectedTransport;\r\n        if(!selectedTransport)\r\n            return false;\r\n        const lockedTransportName = this._globals.getLockedTransport(this._logistic.name);\r\n        return lockedTransportName == selectedTransport.name;\r\n    }\r\n    toggleLockSelected() {\r\n        const selectedTransport = this.selectedTransport;\r\n        if(!selectedTransport)\r\n            return;\r\n        const isLocked = this.isLocked;\r\n        this._globals.lockTransport(\r\n            this._logistic.name,\r\n            isLocked ? undefined : selectedTransport.name,\r\n        );\r\n    }\r\n    get name() { return this._logistic.name; }\r\n    get label() { return this._logistic.label; }\r\n    get selectedTransport() {\r\n        if(!this._selectedTransport) {\r\n            this.resetSelectedTransport();\r\n        }\r\n        return this._selectedTransport;\r\n    }\r\n\r\n    resetSelectedTransport() {\r\n        const _link = this._link;\r\n        const flow = _link.flow;\r\n        if(!flow)\r\n            return undefined;\r\n\r\n        const transport = this._logistic.transport;\r\n        let selectedIndex = -1;\r\n        const lockedTransportName = this._globals.getLockedTransport(this._logistic.name);\r\n        if(lockedTransportName) {\r\n            selectedIndex = transport.findIndex((t) => (t.name == lockedTransportName));\r\n        }\r\n        if(selectedIndex < 0) {\r\n            let effectiveCount = 1;\r\n            if(this._logistic.stackable\r\n                && (_link.input?.linksCount === 1)\r\n                && (_link.output?.linksCount === 1)) {\r\n                //only one link and multiple factories\r\n                const inputCount = _link.input?.ownerItem?.solvedCount || 0;\r\n                const outputCount = _link.output?.ownerItem?.solvedCount || 0;\r\n                const count = Math.min(inputCount, outputCount);\r\n                if(count > 1) {\r\n                    effectiveCount = Math.ceil(count);\r\n                }\r\n            }\r\n            const index = binarySearch(transport, (t) => ((effectiveCount * t.countPerSecond) >= flow));\r\n            selectedIndex = (index < transport.length) ? index : transport.length - 1;\r\n        }\r\n        const selectedGameTransport = transport[selectedIndex];\r\n        this._selectedTransport = new TransportModelImpl(\r\n            selectedGameTransport,\r\n            selectedIndex,\r\n            _link,\r\n        );\r\n        return this._selectedTransport;\r\n    }\r\n    switchSelectedTransport(offset: number) {\r\n        const selectedTransport = this.selectedTransport;\r\n        if(!selectedTransport)\r\n            return;\r\n        const transport = this._logistic.transport;\r\n        let selectedIndex = selectedTransport.index + offset;\r\n        if(selectedIndex < 0)\r\n            selectedIndex = 0;\r\n        if(selectedIndex >= transport.length)\r\n            selectedIndex = transport.length - 1;\r\n        const selectedGameTransport = transport[selectedIndex];\r\n        this._selectedTransport = new TransportModelImpl(\r\n            selectedGameTransport,\r\n            selectedIndex,\r\n            this._link,\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class LogisticSetModelImpl {\r\n    private readonly _logisticMap = new Map<string, LogisticModel>();\r\n\r\n    constructor(link?: LinkModel, logistic?: GameLogistic[]) {\r\n        if(link && link.input?.owner && logistic) {\r\n            for(const logisticItem of logistic) {\r\n                const logisticModel = new LogisticModelImpl(logisticItem, link, link.input?.owner);\r\n                this._logisticMap.set(logisticItem.name, logisticModel);\r\n            }\r\n        }\r\n    }\r\n\r\n    get logistic() { return this._logisticMap.values(); }\r\n    get logisticCount() { return this._logisticMap.size; }\r\n    logisticByName(name: string) { return this._logisticMap.get(name); }\r\n    resetSelectedTransport() {\r\n        for(const logisticModel of this.logistic) {\r\n            logisticModel.resetSelectedTransport();\r\n        }\r\n    }\r\n\r\n    private static _emptyLogisticSet = new LogisticSetModelImpl();\r\n\r\n    static createLogisticSet(link: LinkModel, isTemporary?: boolean): LogisticSetModel {\r\n        if(!link || isTemporary) {\r\n            return this._emptyLogisticSet;\r\n        }\r\n        const gameData = link.input?.owner?.gameData;\r\n        //should be the same input = output\r\n        const io = gameData?.getGameItem(link.input?.name || link.output?.name || '');\r\n        if(!gameData || !io) {\r\n            return this._emptyLogisticSet;\r\n        }\r\n        const logistic = gameData.getLogistic(io);\r\n        if(!logistic.length) {\r\n            return this._emptyLogisticSet;\r\n        }\r\n\r\n        const logisticSet = new LogisticSetModelImpl(link, logistic);\r\n        return logisticSet;\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {ErrorCollector} from '../error-collector';\r\nimport {newColorClass, newKey} from './key-store';\r\nimport type {LinkShapeModel} from './link-shape';\r\nimport {LinkShapeDescriptor, LinkShapeModelBuilder} from './link-shape';\r\nimport {LogisticSetModelImpl} from './logistic';\r\nimport type {SavedLink} from './saved-blueprint';\r\nimport type {LinkModel, LogisticSetModel, RecipeIOModel} from './store';\r\n\r\n\r\nexport class LinkModelImpl {\r\n    private readonly _key;\r\n    public readonly input?: RecipeIOModel;\r\n    public readonly output?: RecipeIOModel;\r\n    private _linkShape?: LinkShapeModel;\r\n    private _colorClass;\r\n    private _flow: number | undefined;\r\n    private readonly _logistic: LogisticSetModel;\r\n\r\n    constructor(input?: RecipeIOModel, output?: RecipeIOModel, isTemporary?: boolean) {\r\n        this.input = input;\r\n        this.output = output;\r\n        this._key = newKey();\r\n        this._colorClass = newColorClass();\r\n        this._logistic = LogisticSetModelImpl.createLogisticSet(this, isTemporary);\r\n    }\r\n\r\n    get key() { return this._key; }\r\n    get colorClass() { return this._colorClass; }\r\n    get flow() { return this._flow; }\r\n    get logistic() { return this._logistic; }\r\n    buildShape() {\r\n        const descriptor = new LinkShapeDescriptor(\r\n            this.input?.rect,\r\n            this.output?.rect,\r\n            this.input?.isFlipped,\r\n            this.output?.isFlipped,\r\n        );\r\n        if(!this._linkShape?.descriptor?.isEqual(descriptor)) {\r\n            this._linkShape = new LinkShapeModelBuilder(descriptor).buildShape();\r\n        }\r\n        return this._linkShape.shape;\r\n    }\r\n    deleteThis() {\r\n        const owner = (this.input || this.output)?.owner;\r\n        if(owner)\r\n            owner._$deleteLink(this);\r\n    }\r\n\r\n    _$copyColorClass(link: LinkModel) {\r\n        this._colorClass = link.colorClass;\r\n    }\r\n    _$applyPersistentLink() {\r\n        if(this.input)\r\n            this.input._$linkAdded(this);\r\n        if(this.output)\r\n            this.output._$linkAdded(this);\r\n    }\r\n    _$deletePersistentLink() {\r\n        if(this.input)\r\n            this.input._$linkDeleted(this);\r\n        if(this.output)\r\n            this.output._$linkDeleted(this);\r\n    }\r\n    getOtherSide(item: RecipeIOModel) {\r\n        //may get proxy, so need to compare keys, not objects\r\n        if(item.key === this.input?.key)\r\n            return this.output;\r\n        if(item.key === this.output?.key)\r\n            return this.input;\r\n        return undefined;\r\n    }\r\n    _$save(input?: number, output?: number): SavedLink {\r\n        //if we can link by multiple paths for same item - then link is ambiguous\r\n        //we should store name as well in this case\r\n        let isAmbiguous = false;\r\n        if(this.input?.isAbstractClassItem || this.output?.isAbstractClassItem) {\r\n            isAmbiguous = true;\r\n        } else {\r\n            const allInputs = this.input?.ownerItem?.selectedRecipe?.input;\r\n            const allOutputs = this.output?.ownerItem?.selectedRecipe?.output;\r\n            const allInputsNames = new Set([...allInputs || []].map((i) => i.name || ''));\r\n            const similarIo = [...allOutputs || []].reduce((sum, i) => {\r\n                if(allInputsNames.has(i.name || ''))\r\n                    sum++;\r\n                return sum;\r\n            }, 0);\r\n            isAmbiguous = similarIo > 1;\r\n        }\r\n        return {\r\n            l: [\r\n                input || 0,\r\n                output || 0,\r\n            ],\r\n            n: isAmbiguous ? this.input?.name : undefined,\r\n        };\r\n    }\r\n    _$load(l: SavedLink, errorCollector: ErrorCollector) {\r\n        //was used to load transport, now empty\r\n    }\r\n\r\n    setFlow(_flow?: number) {\r\n        this._flow = _flow;\r\n    }\r\n}\r\n","/*global module*/\n\nfunction Solution(tableau, evaluation, feasible, bounded) {\n    this.feasible = feasible;\n    this.evaluation = evaluation;\n    this.bounded = bounded;\n    this._tableau = tableau;\n}\nexport default Solution;\n\nSolution.prototype.generateSolutionSet = function () {\n    var solutionSet = {};\n\n    var tableau = this._tableau;\n    var varIndexByRow = tableau.varIndexByRow;\n    var variablesPerIndex = tableau.variablesPerIndex;\n    var matrix = tableau.matrix;\n    var rhsColumn = tableau.rhsColumn;\n    var lastRow = tableau.height - 1;\n    var roundingCoeff = Math.round(1 / tableau.precision);\n\n    for (var r = 1; r <= lastRow; r += 1) {\n        var varIndex = varIndexByRow[r];\n        var variable = variablesPerIndex[varIndex];\n        if (variable === undefined || variable.isSlack === true) {\n            continue;\n        }\n\n        var varValue = matrix[r][rhsColumn];\n        solutionSet[variable.id] =\n            Math.round((Number.EPSILON + varValue) * roundingCoeff) / roundingCoeff;\n    }\n\n    return solutionSet;\n};\n","/*global module*/\n/*global require*/\nimport Solution from \"./Solution.js\";\n\nfunction MilpSolution(tableau, evaluation, feasible, bounded, branchAndCutIterations) {\n    Solution.call(this, tableau, evaluation, feasible, bounded);\n    this.iter = branchAndCutIterations;\n}\nexport default MilpSolution;\nMilpSolution.prototype = Object.create(Solution.prototype);\nMilpSolution.constructor = MilpSolution;\n","/*global describe*/\n/*global require*/\n/*global module*/\n/*global it*/\n/*global console*/\n/*global process*/\nimport Solution from \"./Solution.js\";\nimport MilpSolution from \"./MilpSolution.js\";\n\n/*************************************************************\n * Class: Tableau\n * Description: Simplex tableau, holding a the tableau matrix\n *              and all the information necessary to perform\n *              the simplex algorithm\n * Agruments:\n *        precision: If we're solving a MILP, how tight\n *                   do we want to define an integer, given\n *                   that 20.000000000000001 is not an integer.\n *                   (defaults to 1e-8)\n **************************************************************/\nfunction Tableau(precision) {\n    this.model = null;\n\n    this.matrix = null;\n    this.width = 0;\n    this.height = 0;\n\n    this.costRowIndex = 0;\n    this.rhsColumn = 0;\n\n    this.variablesPerIndex = [];\n    this.unrestrictedVars = null;\n\n    // Solution attributes\n    this.feasible = true; // until proven guilty\n    this.evaluation = 0;\n    this.simplexIters = 0;\n\n    this.varIndexByRow = null;\n    this.varIndexByCol = null;\n\n    this.rowByVarIndex = null;\n    this.colByVarIndex = null;\n\n    this.precision = precision || 1e-8;\n\n    this.optionalObjectives = [];\n    this.objectivesByPriority = {};\n\n    this.savedState = null;\n\n    this.availableIndexes = [];\n    this.lastElementIndex = 0;\n\n    this.variables = null;\n    this.nVars = 0;\n\n    this.bounded = true;\n    this.unboundedVarIndex = null;\n\n    this.branchAndCutIterations = 0;\n}\nexport default Tableau;\n\nTableau.prototype.solve = function () {\n    if (this.model.getNumberOfIntegerVariables() > 0) {\n        this.branchAndCut();\n    } else {\n        this.simplex();\n    }\n    this.updateVariableValues();\n    return this.getSolution();\n};\n\nfunction OptionalObjective(priority, nColumns) {\n    this.priority = priority;\n    this.reducedCosts = new Array(nColumns);\n    for (var c = 0; c < nColumns; c += 1) {\n        this.reducedCosts[c] = 0;\n    }\n}\n\nOptionalObjective.prototype.copy = function () {\n    var copy = new OptionalObjective(this.priority, this.reducedCosts.length);\n    copy.reducedCosts = this.reducedCosts.slice();\n    return copy;\n};\n\nTableau.prototype.setOptionalObjective = function (priority, column, cost) {\n    var objectiveForPriority = this.objectivesByPriority[priority];\n    if (objectiveForPriority === undefined) {\n        var nColumns = Math.max(this.width, column + 1);\n        objectiveForPriority = new OptionalObjective(priority, nColumns);\n        this.objectivesByPriority[priority] = objectiveForPriority;\n        this.optionalObjectives.push(objectiveForPriority);\n        this.optionalObjectives.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n    }\n\n    objectiveForPriority.reducedCosts[column] = cost;\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.initialize = function (width, height, variables, unrestrictedVars) {\n    this.variables = variables;\n    this.unrestrictedVars = unrestrictedVars;\n\n    this.width = width;\n    this.height = height;\n\n\n// console.time(\"tableau_build\");\n    // BUILD AN EMPTY ARRAY OF THAT WIDTH\n    var tmpRow = new Array(width);\n    for (var i = 0; i < width; i++) {\n        tmpRow[i] = 0;\n    }\n\n    // BUILD AN EMPTY TABLEAU\n    this.matrix = new Array(height);\n    for (var j = 0; j < height; j++) {\n        this.matrix[j] = tmpRow.slice();\n    }\n\n//\n// TODO: Benchmark This\n//this.matrix = new Array(height).fill(0).map(() => new Array(width).fill(0));\n\n// console.timeEnd(\"tableau_build\");\n// console.log(\"height\",height);\n// console.log(\"width\",width);\n// console.log(\"------\");\n// console.log(\"\");\n\n\n    this.varIndexByRow = new Array(this.height);\n    this.varIndexByCol = new Array(this.width);\n\n    this.varIndexByRow[0] = -1;\n    this.varIndexByCol[0] = -1;\n\n    this.nVars = width + height - 2;\n    this.rowByVarIndex = new Array(this.nVars);\n    this.colByVarIndex = new Array(this.nVars);\n\n    this.lastElementIndex = this.nVars;\n};\n\nTableau.prototype._resetMatrix = function () {\n    var variables = this.model.variables;\n    var constraints = this.model.constraints;\n\n    var nVars = variables.length;\n    var nConstraints = constraints.length;\n\n    var v, varIndex;\n    var costRow = this.matrix[0];\n    var coeff = (this.model.isMinimization === true) ? -1 : 1;\n    for (v = 0; v < nVars; v += 1) {\n        var variable = variables[v];\n        var priority = variable.priority;\n        var cost = coeff * variable.cost;\n        if (priority === 0) {\n            costRow[v + 1] = cost;\n        } else {\n            this.setOptionalObjective(priority, v + 1, cost);\n        }\n\n        varIndex = variables[v].index;\n        this.rowByVarIndex[varIndex] = -1;\n        this.colByVarIndex[varIndex] = v + 1;\n        this.varIndexByCol[v + 1] = varIndex;\n    }\n\n    var rowIndex = 1;\n    for (var c = 0; c < nConstraints; c += 1) {\n        var constraint = constraints[c];\n\n        var constraintIndex = constraint.index;\n        this.rowByVarIndex[constraintIndex] = rowIndex;\n        this.colByVarIndex[constraintIndex] = -1;\n        this.varIndexByRow[rowIndex] = constraintIndex;\n\n        var t, term, column;\n        var terms = constraint.terms;\n        var nTerms = terms.length;\n        var row = this.matrix[rowIndex++];\n        if (constraint.isUpperBound) {\n            for (t = 0; t < nTerms; t += 1) {\n                term = terms[t];\n                column = this.colByVarIndex[term.variable.index];\n                row[column] = term.coefficient;\n            }\n\n            row[0] = constraint.rhs;\n        } else {\n            for (t = 0; t < nTerms; t += 1) {\n                term = terms[t];\n                column = this.colByVarIndex[term.variable.index];\n                row[column] = -term.coefficient;\n            }\n\n            row[0] = -constraint.rhs;\n        }\n    }\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.setModel = function (model) {\n    this.model = model;\n\n    var width = model.nVariables + 1;\n    var height = model.nConstraints + 1;\n\n\n    this.initialize(width, height, model.variables, model.unrestrictedVariables);\n    this._resetMatrix();\n    return this;\n};\n\nTableau.prototype.getNewElementIndex = function () {\n    if (this.availableIndexes.length > 0) {\n        return this.availableIndexes.pop();\n    }\n\n    var index = this.lastElementIndex;\n    this.lastElementIndex += 1;\n    return index;\n};\n\nTableau.prototype.density = function () {\n    var density = 0;\n\n    var matrix = this.matrix;\n    for (var r = 0; r < this.height; r++) {\n        var row = matrix[r];\n        for (var c = 0; c < this.width; c++) {\n            if (row[c] !== 0) {\n                density += 1;\n            }\n        }\n    }\n\n    return density / (this.height * this.width);\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.setEvaluation = function () {\n    // Rounding objective value\n    var roundingCoeff = Math.round(1 / this.precision);\n    var evaluation = this.matrix[this.costRowIndex][this.rhsColumn];\n    var roundedEvaluation =\n        Math.round((Number.EPSILON + evaluation) * roundingCoeff) / roundingCoeff;\n\n    this.evaluation = roundedEvaluation;\n    if (this.simplexIters === 0) {\n        this.bestPossibleEval = roundedEvaluation;\n    }\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.getSolution = function () {\n    var evaluation = (this.model.isMinimization === true) ?\n        this.evaluation : -this.evaluation;\n\n    if (this.model.getNumberOfIntegerVariables() > 0) {\n        return new MilpSolution(this, evaluation, this.feasible, this.bounded, this.branchAndCutIterations);\n    } else {\n        return new Solution(this, evaluation, this.feasible, this.bounded);\n    }\n};\n","/*global describe*/\n/*global require*/\n/*global module*/\n/*global it*/\n/*global console*/\n/*global process*/\n\nimport Tableau from \"./Tableau.js\";\n\n//-------------------------------------------------------------------\n// Function: solve\n// Detail: Main function, linear programming solver\n//-------------------------------------------------------------------\nTableau.prototype.simplex = function () {\n    // Bounded until proven otherwise\n    this.bounded = true;\n\n    // Execute Phase 1 to obtain a Basic Feasible Solution (BFS)\n    this.phase1();\n\n    // Execute Phase 2\n    if (this.feasible === true) {\n        // Running simplex on Initial Basic Feasible Solution (BFS)\n        // N.B current solution is feasible\n        this.phase2();\n    }\n\n    return this;\n};\n\n//-------------------------------------------------------------------\n// Description: Convert a non standard form tableau\n//              to a standard form tableau by eliminating\n//              all negative values in the Right Hand Side (RHS)\n//              This results in a Basic Feasible Solution (BFS)\n//\n//-------------------------------------------------------------------\nTableau.prototype.phase1 = function () {\n    var debugCheckForCycles = this.model.checkForCycles;\n    var varIndexesCycle = [];\n\n    var matrix = this.matrix;\n    var rhsColumn = this.rhsColumn;\n    var lastColumn = this.width - 1;\n    var lastRow = this.height - 1;\n\n    var unrestricted;\n    var iterations = 0;\n\n    while (true) {\n        // ******************************************\n        // ** PHASE 1 - STEP  1 : FIND PIVOT ROW **\n        //\n        // Selecting leaving variable (feasibility condition):\n        // Basic variable with most negative value\n        //\n        // ******************************************\n        var leavingRowIndex = 0;\n        var rhsValue = -this.precision;\n        for (var r = 1; r <= lastRow; r++) {\n            unrestricted = this.unrestrictedVars[this.varIndexByRow[r]] === true;\n            \n            //\n            // *Don't think this does anything...\n            //\n            //if (unrestricted) {\n            //    continue;\n            //}\n\n            var value = matrix[r][rhsColumn];\n            if (value < rhsValue) {\n                rhsValue = value;\n                leavingRowIndex = r;\n            }\n        }\n\n        // If nothing is strictly smaller than 0; we're done with phase 1.\n        if (leavingRowIndex === 0) {\n            // Feasible, champagne!\n            this.feasible = true;\n            return iterations;\n        }\n\n\n        // ******************************************\n        // ** PHASE 1 - STEP  2 : FIND PIVOT COLUMN **\n        //\n        //\n        // ******************************************\n        // Selecting entering variable\n        var enteringColumn = 0;\n        var maxQuotient = -Infinity;\n        var costRow = matrix[0];\n        var leavingRow = matrix[leavingRowIndex];\n        for (var c = 1; c <= lastColumn; c++) {\n            var coefficient = leavingRow[c];\n            //\n            // *Don't think this does anything...\n            //\n            //if (-this.precision < coefficient && coefficient < this.precision) {\n            //    continue;\n            //}\n            //\n\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\n            if (unrestricted || coefficient < -this.precision) {\n                var quotient = -costRow[c] / coefficient;\n                if (maxQuotient < quotient) {\n                    maxQuotient = quotient;\n                    enteringColumn = c;\n                }\n            }\n        }\n\n        if (enteringColumn === 0) {\n            // Not feasible\n            this.feasible = false;\n            return iterations;\n        }\n\n        if(debugCheckForCycles){\n            varIndexesCycle.push([this.varIndexByRow[leavingRowIndex], this.varIndexByCol[enteringColumn]]);\n\n            var cycleData = this.checkForCycles(varIndexesCycle);\n            if(cycleData.length > 0){\n\n                this.model.messages.push(\"Cycle in phase 1\");\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\n\n                this.feasible = false;\n                return iterations;\n                \n            }\n        }\n\n        this.pivot(leavingRowIndex, enteringColumn);\n        iterations += 1;\n    }\n};\n\n//-------------------------------------------------------------------\n// Description: Apply simplex to obtain optimal solution\n//              used as phase2 of the simplex\n//\n//-------------------------------------------------------------------\nTableau.prototype.phase2 = function () {\n    var debugCheckForCycles = this.model.checkForCycles;\n    var varIndexesCycle = [];\n\n    var matrix = this.matrix;\n    var rhsColumn = this.rhsColumn;\n    var lastColumn = this.width - 1;\n    var lastRow = this.height - 1;\n\n    var precision = this.precision;\n    var nOptionalObjectives = this.optionalObjectives.length;\n    var optionalCostsColumns = null;\n\n    var iterations = 0;\n    var reducedCost, unrestricted;\n\n    while (true) {\n        var costRow = matrix[this.costRowIndex];\n\n        // Selecting entering variable (optimality condition)\n        if (nOptionalObjectives > 0) {\n            optionalCostsColumns = [];\n        }\n\n        var enteringColumn = 0;\n        var enteringValue = precision;\n        var isReducedCostNegative = false;\n        for (var c = 1; c <= lastColumn; c++) {\n            reducedCost = costRow[c];\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\n\n            if (nOptionalObjectives > 0 && -precision < reducedCost && reducedCost < precision) {\n                optionalCostsColumns.push(c);\n                continue;\n            }\n\n            if (unrestricted && reducedCost < 0) {\n                if (-reducedCost > enteringValue) {\n                    enteringValue = -reducedCost;\n                    enteringColumn = c;\n                    isReducedCostNegative = true;\n                }\n                continue;\n            }\n\n            if (reducedCost > enteringValue) {\n                enteringValue = reducedCost;\n                enteringColumn = c;\n                isReducedCostNegative = false;\n            }\n        }\n\n        if (nOptionalObjectives > 0) {\n            // There exist optional improvable objectives\n            var o = 0;\n            while (enteringColumn === 0 && optionalCostsColumns.length > 0 && o < nOptionalObjectives) {\n                var optionalCostsColumns2 = [];\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\n\n                enteringValue = precision;\n\n                for (var i = 0; i < optionalCostsColumns.length; i++) {\n                    c = optionalCostsColumns[i];\n\n                    reducedCost = reducedCosts[c];\n                    unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\n\n                    if (-precision < reducedCost && reducedCost < precision) {\n                        optionalCostsColumns2.push(c);\n                        continue;\n                    }\n\n                    if (unrestricted && reducedCost < 0) {\n                        if (-reducedCost > enteringValue) {\n                            enteringValue = -reducedCost;\n                            enteringColumn = c;\n                            isReducedCostNegative = true;\n                        }\n                        continue;\n                    }\n\n                    if (reducedCost > enteringValue) {\n                        enteringValue = reducedCost;\n                        enteringColumn = c;\n                        isReducedCostNegative = false;\n                    }\n                }\n                optionalCostsColumns = optionalCostsColumns2;\n                o += 1;\n            }\n        }\n\n\n        // If no entering column could be found we're done with phase 2.\n        if (enteringColumn === 0) {\n            this.setEvaluation();\n            this.simplexIters += 1;\n            return iterations;\n        }\n\n        // Selecting leaving variable\n        var leavingRow = 0;\n        var minQuotient = Infinity;\n\n        var varIndexByRow = this.varIndexByRow;\n\n        for (var r = 1; r <= lastRow; r++) {\n            var row = matrix[r];\n            var rhsValue = row[rhsColumn];\n            var colValue = row[enteringColumn];\n\n            if (-precision < colValue && colValue < precision) {\n                continue;\n            }\n\n            if (colValue > 0 && precision > rhsValue && rhsValue > -precision) {\n                minQuotient = 0;\n                leavingRow = r;\n                break;\n            }\n\n            var quotient = isReducedCostNegative ? -rhsValue / colValue : rhsValue / colValue;\n            if (quotient > precision && minQuotient > quotient) {\n                minQuotient = quotient;\n                leavingRow = r;\n            }\n        }\n\n        if (minQuotient === Infinity) {\n            // optimal value is -Infinity\n            this.evaluation = -Infinity;\n            this.bounded = false;\n            this.unboundedVarIndex = this.varIndexByCol[enteringColumn];\n            return iterations;\n        }\n\n        if(debugCheckForCycles){\n            varIndexesCycle.push([this.varIndexByRow[leavingRow], this.varIndexByCol[enteringColumn]]);\n\n            var cycleData = this.checkForCycles(varIndexesCycle);\n            if(cycleData.length > 0){\n\n                this.model.messages.push(\"Cycle in phase 2\");\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\n\n                this.feasible = false;\n                return iterations;\n            }\n        }\n\n        this.pivot(leavingRow, enteringColumn, true);\n        iterations += 1;\n    }\n};\n\n// Array holding the column indexes for which the value is not null\n// on the pivot row\n// Shared by all tableaux for smaller overhead and lower memory usage\nvar nonZeroColumns = [];\n\n\n//-------------------------------------------------------------------\n// Description: Execute pivot operations over a 2d array,\n//          on a given row, and column\n//\n//-------------------------------------------------------------------\nTableau.prototype.pivot = function (pivotRowIndex, pivotColumnIndex) {\n    var matrix = this.matrix;\n\n    var quotient = matrix[pivotRowIndex][pivotColumnIndex];\n\n    var lastRow = this.height - 1;\n    var lastColumn = this.width - 1;\n\n    var leavingBasicIndex = this.varIndexByRow[pivotRowIndex];\n    var enteringBasicIndex = this.varIndexByCol[pivotColumnIndex];\n\n    this.varIndexByRow[pivotRowIndex] = enteringBasicIndex;\n    this.varIndexByCol[pivotColumnIndex] = leavingBasicIndex;\n\n    this.rowByVarIndex[enteringBasicIndex] = pivotRowIndex;\n    this.rowByVarIndex[leavingBasicIndex] = -1;\n\n    this.colByVarIndex[enteringBasicIndex] = -1;\n    this.colByVarIndex[leavingBasicIndex] = pivotColumnIndex;\n\n    // Divide everything in the target row by the element @\n    // the target column\n    var pivotRow = matrix[pivotRowIndex];\n    var nNonZeroColumns = 0;\n    for (var c = 0; c <= lastColumn; c++) {\n        if (!(pivotRow[c] >= -1e-16 && pivotRow[c] <= 1e-16)) {\n            pivotRow[c] /= quotient;\n            nonZeroColumns[nNonZeroColumns] = c;\n            nNonZeroColumns += 1;\n        } else {\n            pivotRow[c] = 0;\n        }\n    }\n    pivotRow[pivotColumnIndex] = 1 / quotient;\n\n    // for every row EXCEPT the pivot row,\n    // set the value in the pivot column = 0 by\n    // multiplying the value of all elements in the objective\n    // row by ... yuck... just look below; better explanation later\n    var coefficient, i, v0;\n    var precision = this.precision;\n    \n    // //////////////////////////////////////\n    //\n    // This is step 2 of the pivot function.\n    // It is, by far, the most expensive piece of\n    // this whole process where the code can be optimized (faster code)\n    // without changing the whole algorithm (fewer cycles)\n    //\n    // 1.) For every row but the pivot row\n    // 2.) Update each column to \n    //    a.) itself\n    //        less\n    //    b.) active-row's pivot column\n    //        times\n    //    c.) whatever-the-hell this is: nonZeroColumns[i]\n    // \n    // //////////////////////////////////////\n    // console.time(\"step-2\");\n    for (var r = 0; r <= lastRow; r++) {\n        if (r !== pivotRowIndex) {\n            //if(1 === 1){\n            if(!(matrix[r][pivotColumnIndex] >= -1e-16 && matrix[r][pivotColumnIndex] <= 1e-16)){\n            //if((matrix[r][pivotColumnIndex] !== 0)){\n                // Set reference to the row we're working on\n                //\n                var row = matrix[r];\n\n                // Catch the coefficient that we're going to end up dividing everything by\n                coefficient = row[pivotColumnIndex];\n                \n                // No point Burning Cycles if\n                // Zero to the thing\n                if (!(coefficient >= -1e-16 && coefficient <= 1e-16)) {\n                    for (i = 0; i < nNonZeroColumns; i++) {\n                        c = nonZeroColumns[i];\n                        // No point in doing math if you're just adding\n                        // Zero to the thing\n                        v0 = pivotRow[c];\n                        if (!(v0 >= -1e-16 && v0 <= 1e-16)) {\n                            row[c] = row[c] - coefficient * v0;\n                        } else {\n                            if(v0 !== 0){\n                                pivotRow[c] = 0;\n                            }\n                        }\n                    }\n\n                    row[pivotColumnIndex] = -coefficient / quotient;\n                } else {\n                    if(coefficient !== 0){\n                        row[pivotColumnIndex] = 0;\n                    }\n                }\n            }\n        }\n    }\n    // console.timeEnd(\"step-2\");\n\n    var nOptionalObjectives = this.optionalObjectives.length;\n    if (nOptionalObjectives > 0) {\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\n            coefficient = reducedCosts[pivotColumnIndex];\n            if (coefficient !== 0) {\n                for (i = 0; i < nNonZeroColumns; i++) {\n                    c = nonZeroColumns[i];\n                    v0 = pivotRow[c];\n                    if (v0 !== 0) {\n                        reducedCosts[c] = reducedCosts[c] - coefficient * v0;\n                    }\n                }\n\n                reducedCosts[pivotColumnIndex] = -coefficient / quotient;\n            }\n        }\n    }\n};\n\n\n\nTableau.prototype.checkForCycles = function (varIndexes) {\n    for (var e1 = 0; e1 < varIndexes.length - 1; e1++) {\n        for (var e2 = e1 + 1; e2 < varIndexes.length; e2++) {\n            var elt1 = varIndexes[e1];\n            var elt2 = varIndexes[e2];\n            if (elt1[0] === elt2[0] && elt1[1] === elt2[1]) {\n                if (e2 - e1 > varIndexes.length - e2) {\n                    break;\n                }\n                var cycleFound = true;\n                for (var i = 1; i < e2 - e1; i++) {\n                    var tmp1 = varIndexes[e1+i];\n                    var tmp2 = varIndexes[e2+i];\n                    if(tmp1[0] !== tmp2[0] || tmp1[1] !== tmp2[1]) {\n                        cycleFound = false;\n                        break;\n                    }\n                }\n                if (cycleFound) {\n                    return [e1, e2 - e1];\n                }\n            }\n        }\n    }\n    return [];\n};\n","/*global describe*/\n/*global require*/\n/*global module*/\n/*global it*/\n/*global console*/\n/*global process*/\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nfunction Variable(id, cost, index, priority) {\n    this.id = id;\n    this.cost = cost;\n    this.index = index;\n    this.value = 0;\n    this.priority = priority;\n}\n\nfunction IntegerVariable(id, cost, index, priority) {\n    Variable.call(this, id, cost, index, priority);\n}\nIntegerVariable.prototype.isInteger = true;\n\nfunction SlackVariable(id, index) {\n    Variable.call(this, id, 0, index, 0);\n}\nSlackVariable.prototype.isSlack = true;\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nfunction Term(variable, coefficient) {\n    this.variable = variable;\n    this.coefficient = coefficient;\n}\n\nfunction createRelaxationVariable(model, weight, priority) {\n    if (priority === 0 || priority === \"required\") {\n        return null;\n    }\n\n    weight = weight || 1;\n    priority = priority || 1;\n\n    if (model.isMinimization === false) {\n        weight = -weight;\n    }\n\n    return model.addVariable(weight, \"r\" + (model.relaxationIndex++), false, false, priority);\n}\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nfunction Constraint(rhs, isUpperBound, index, model) {\n    this.slack = new SlackVariable(\"s\" + index, index);\n    this.index = index;\n    this.model = model;\n    this.rhs = rhs;\n    this.isUpperBound = isUpperBound;\n\n    this.terms = [];\n    this.termsByVarIndex = {};\n\n    // Error variable in case the constraint is relaxed\n    this.relaxation = null;\n}\n\nConstraint.prototype.addTerm = function (coefficient, variable) {\n    var varIndex = variable.index;\n    var term = this.termsByVarIndex[varIndex];\n    if (term === undefined) {\n        // No term for given variable\n        term = new Term(variable, coefficient);\n        this.termsByVarIndex[varIndex] = term;\n        this.terms.push(term);\n        if (this.isUpperBound === true) {\n            coefficient = -coefficient;\n        }\n        this.model.updateConstraintCoefficient(this, variable, coefficient);\n    } else {\n        // Term for given variable already exists\n        // updating its coefficient\n        var newCoefficient = term.coefficient + coefficient;\n        this.setVariableCoefficient(newCoefficient, variable);\n    }\n\n    return this;\n};\n\nConstraint.prototype.removeTerm = function (term) {\n    // TODO\n    return this;\n};\n\nConstraint.prototype.setRightHandSide = function (newRhs) {\n    if (newRhs !== this.rhs) {\n        var difference = newRhs - this.rhs;\n        if (this.isUpperBound === true) {\n            difference = -difference;\n        }\n\n        this.rhs = newRhs;\n        this.model.updateRightHandSide(this, difference);\n    }\n\n    return this;\n};\n\nConstraint.prototype.setVariableCoefficient = function (newCoefficient, variable) {\n    var varIndex = variable.index;\n    if (varIndex === -1) {\n        console.warn(\"[Constraint.setVariableCoefficient] Trying to change coefficient of inexistant variable.\");\n        return;\n    }\n\n    var term = this.termsByVarIndex[varIndex];\n    if (term === undefined) {\n        // No term for given variable\n        this.addTerm(newCoefficient, variable);\n    } else {\n        // Term for given variable already exists\n        // updating its coefficient if changed\n        if (newCoefficient !== term.coefficient) {\n            var difference = newCoefficient - term.coefficient;\n            if (this.isUpperBound === true) {\n                difference = -difference;\n            }\n\n            term.coefficient = newCoefficient;\n            this.model.updateConstraintCoefficient(this, variable, difference);\n        }\n    }\n\n    return this;\n};\n\nConstraint.prototype.relax = function (weight, priority) {\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\n    this._relax(this.relaxation);\n};\n\nConstraint.prototype._relax = function (relaxationVariable) {\n    if (relaxationVariable === null) {\n        // Relaxation variable not created, priority was probably \"required\"\n        return;\n    }\n\n    if (this.isUpperBound) {\n        this.setVariableCoefficient(-1, relaxationVariable);\n    } else {\n        this.setVariableCoefficient(1, relaxationVariable);\n    }\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nfunction Equality(constraintUpper, constraintLower) {\n    this.upperBound = constraintUpper;\n    this.lowerBound = constraintLower;\n    this.model = constraintUpper.model;\n    this.rhs = constraintUpper.rhs;\n    this.relaxation = null;\n}\n\nEquality.prototype.isEquality = true;\n\nEquality.prototype.addTerm = function (coefficient, variable) {\n    this.upperBound.addTerm(coefficient, variable);\n    this.lowerBound.addTerm(coefficient, variable);\n    return this;\n};\n\nEquality.prototype.removeTerm = function (term) {\n    this.upperBound.removeTerm(term);\n    this.lowerBound.removeTerm(term);\n    return this;\n};\n\nEquality.prototype.setRightHandSide = function (rhs) {\n    this.upperBound.setRightHandSide(rhs);\n    this.lowerBound.setRightHandSide(rhs);\n    this.rhs = rhs;\n};\n\nEquality.prototype.relax = function (weight, priority) {\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\n    this.upperBound.relaxation = this.relaxation;\n    this.upperBound._relax(this.relaxation);\n    this.lowerBound.relaxation = this.relaxation;\n    this.lowerBound._relax(this.relaxation);\n};\n\nexport {\n    Constraint,\n    Variable,\n    IntegerVariable,\n    SlackVariable,\n    Equality,\n    Term\n};\n","/*global require*/\nimport Tableau from \"./Tableau.js\";\nimport { SlackVariable } from \"../expressions.js\";\n\nTableau.prototype.addCutConstraints = function (cutConstraints) {\n    var nCutConstraints = cutConstraints.length;\n\n    var height = this.height;\n    var heightWithCuts = height + nCutConstraints;\n\n    // Adding rows to hold cut constraints\n    for (var h = height; h < heightWithCuts; h += 1) {\n        if (this.matrix[h] === undefined) {\n            this.matrix[h] = this.matrix[h - 1].slice();\n        }\n    }\n\n    // Adding cut constraints\n    this.height = heightWithCuts;\n    this.nVars = this.width + this.height - 2;\n\n    var c;\n    var lastColumn = this.width - 1;\n    for (var i = 0; i < nCutConstraints; i += 1) {\n        var cut = cutConstraints[i];\n\n        // Constraint row index\n        var r = height + i;\n\n        var sign = (cut.type === \"min\") ? -1 : 1;\n\n        // Variable on which the cut is applied\n        var varIndex = cut.varIndex;\n        var varRowIndex = this.rowByVarIndex[varIndex];\n        var constraintRow = this.matrix[r];\n        if (varRowIndex === -1) {\n            // Variable is non basic\n            constraintRow[this.rhsColumn] = sign * cut.value;\n            for (c = 1; c <= lastColumn; c += 1) {\n                constraintRow[c] = 0;\n            }\n            constraintRow[this.colByVarIndex[varIndex]] = sign;\n        } else {\n            // Variable is basic\n            var varRow = this.matrix[varRowIndex];\n            var varValue = varRow[this.rhsColumn];\n            constraintRow[this.rhsColumn] = sign * (cut.value - varValue);\n            for (c = 1; c <= lastColumn; c += 1) {\n                constraintRow[c] = -sign * varRow[c];\n            }\n        }\n\n        // Creating slack variable\n        var slackVarIndex = this.getNewElementIndex();\n        this.varIndexByRow[r] = slackVarIndex;\n        this.rowByVarIndex[slackVarIndex] = r;\n        this.colByVarIndex[slackVarIndex] = -1;\n        this.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\n        this.nVars += 1;\n    }\n};\n\nTableau.prototype._addLowerBoundMIRCut = function(rowIndex) {\n\n\tif(rowIndex === this.costRowIndex) {\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\n\t\treturn false;\n\t}\n\n\tvar model = this.model;\n\tvar matrix = this.matrix;\n\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\n\tif (!intVar.isInteger) {\n\t\treturn false;\n    }\n\n\tvar d = matrix[rowIndex][this.rhsColumn];\n\tvar frac_d = d - Math.floor(d);\n\n\tif (frac_d < this.precision || 1 - this.precision < frac_d) {\n\t\treturn false;\n    }\n\n\t//Adding a row\n\tvar r = this.height;\n\tmatrix[r] = matrix[r - 1].slice();\n\tthis.height += 1;\n\n\t// Creating slack variable\n\tthis.nVars += 1;\n\tvar slackVarIndex = this.getNewElementIndex();\n\tthis.varIndexByRow[r] = slackVarIndex;\n\tthis.rowByVarIndex[slackVarIndex] = r;\n\tthis.colByVarIndex[slackVarIndex] = -1;\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\n\n\tmatrix[r][this.rhsColumn] = Math.floor(d);\n\n\tfor (var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\n\n\t\tif (!variable.isInteger) {\n\t\t\tmatrix[r][colIndex] = Math.min(0, matrix[rowIndex][colIndex] / (1 - frac_d));\n\t\t} else {\n\t\t\tvar coef = matrix[rowIndex][colIndex];\n\t\t\tvar termCoeff = Math.floor(coef)+Math.max(0, coef - Math.floor(coef) - frac_d) / (1 - frac_d);\n\t\t\tmatrix[r][colIndex] = termCoeff;\n\t\t}\n\t}\n\n\tfor(var c = 0; c < this.width; c += 1) {\n\t\tmatrix[r][c] -= matrix[rowIndex][c];\n\t}\n\n\treturn true;\n};\n\nTableau.prototype._addUpperBoundMIRCut = function(rowIndex) {\n\n\tif (rowIndex === this.costRowIndex) {\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\n\t\treturn false;\n\t}\n\n\tvar model = this.model;\n\tvar matrix = this.matrix;\n\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\n\tif (!intVar.isInteger) {\n\t\treturn false;\n    }\n\n\tvar b = matrix[rowIndex][this.rhsColumn];\n\tvar f = b - Math.floor(b);\n\n\tif (f < this.precision || 1 - this.precision < f) {\n\t\treturn false;\n    }\n\n\t//Adding a row\n\tvar r = this.height;\n\tmatrix[r] = matrix[r - 1].slice();\n\tthis.height += 1;\n\n\t// Creating slack variable\n    \n\tthis.nVars += 1;\n\tvar slackVarIndex = this.getNewElementIndex();\n\tthis.varIndexByRow[r] = slackVarIndex;\n\tthis.rowByVarIndex[slackVarIndex] = r;\n\tthis.colByVarIndex[slackVarIndex] = -1;\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\n\n\tmatrix[r][this.rhsColumn] = -f;\n\n\n\tfor(var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\n\n\t\tvar aj = matrix[rowIndex][colIndex];\n\t\tvar fj = aj - Math.floor(aj);\n\n\t\tif(variable.isInteger) {\n\t\t\tif(fj <= f) {\n\t\t\t\tmatrix[r][colIndex] = -fj;\n            } else {\n\t\t\t\tmatrix[r][colIndex] = -(1 - fj) * f / fj;\n            }\n\t\t} else {\n\t\t\tif (aj >= 0) {\n\t\t\t\tmatrix[r][colIndex] = -aj;\n            } else {\n\t\t\t\tmatrix[r][colIndex] = aj * f / (1 - f);\n            }\n\t\t}\n\t}\n\n\treturn true;\n};\n\n\n//\n// THIS MAKES SOME MILP PROBLEMS PROVIDE INCORRECT\n// ANSWERS...\n//\n// QUICK FIX: MAKE THE FUNCTION EMPTY...\n//\nTableau.prototype.applyMIRCuts = function () {\n    \n    // var nRows = this.height;\n    // for (var cst = 0; cst < nRows; cst += 1) {\n    //    this._addUpperBoundMIRCut(cst);\n    // }\n\n\n    // // nRows = tableau.height;\n    // for (cst = 0; cst < nRows; cst += 1) {\n    //    this._addLowerBoundMIRCut(cst);\n    // }\n    \n};\n","/*global require*/\n/*global console*/\nimport Tableau from \"./Tableau.js\";\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype._putInBase = function (varIndex) {\n    // Is varIndex in the base?\n    var r = this.rowByVarIndex[varIndex];\n    if (r === -1) {\n        // Outside the base\n        // pivoting to take it out\n        var c = this.colByVarIndex[varIndex];\n\n        // Selecting pivot row\n        // (Any row with coefficient different from 0)\n        for (var r1 = 1; r1 < this.height; r1 += 1) {\n            var coefficient = this.matrix[r1][c];\n            if (coefficient < -this.precision || this.precision < coefficient) {\n                r = r1;\n                break;\n            }\n        }\n\n        this.pivot(r, c);\n    }\n\n    return r;\n};\n\nTableau.prototype._takeOutOfBase = function (varIndex) {\n    // Is varIndex in the base?\n    var c = this.colByVarIndex[varIndex];\n    if (c === -1) {\n        // Inside the base\n        // pivoting to take it out\n        var r = this.rowByVarIndex[varIndex];\n\n        // Selecting pivot column\n        // (Any column with coefficient different from 0)\n        var pivotRow = this.matrix[r];\n        for (var c1 = 1; c1 < this.height; c1 += 1) {\n            var coefficient = pivotRow[c1];\n            if (coefficient < -this.precision || this.precision < coefficient) {\n                c = c1;\n                break;\n            }\n        }\n\n        this.pivot(r, c);\n    }\n\n    return c;\n};\n\nTableau.prototype.updateVariableValues = function () {\n    var nVars = this.variables.length;\n    var roundingCoeff = Math.round(1 / this.precision);\n    for (var v = 0; v < nVars; v += 1) {\n        var variable = this.variables[v];\n        var varIndex = variable.index;\n\n        var r = this.rowByVarIndex[varIndex];\n        if (r === -1) {\n            // Variable is non basic\n            variable.value = 0;\n        } else {\n            // Variable is basic\n            var varValue = this.matrix[r][this.rhsColumn];\n            variable.value = Math.round((varValue + Number.EPSILON) * roundingCoeff) / roundingCoeff;\n        }\n    }\n};\n\nTableau.prototype.updateRightHandSide = function (constraint, difference) {\n    // Updates RHS of given constraint\n    var lastRow = this.height - 1;\n    var constraintRow = this.rowByVarIndex[constraint.index];\n    if (constraintRow === -1) {\n        // Slack is not in base\n        var slackColumn = this.colByVarIndex[constraint.index];\n\n        // Upading all the RHS values\n        for (var r = 0; r <= lastRow; r += 1) {\n            var row = this.matrix[r];\n            row[this.rhsColumn] -= difference * row[slackColumn];\n        }\n\n        var nOptionalObjectives = this.optionalObjectives.length;\n        if (nOptionalObjectives > 0) {\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\n                reducedCosts[this.rhsColumn] -= difference * reducedCosts[slackColumn];\n            }\n        }\n    } else {\n        // Slack variable of constraint is in base\n        // Updating RHS with the difference between the old and the new one\n        this.matrix[constraintRow][this.rhsColumn] -= difference;\n    }\n};\n\nTableau.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\n    // Updates variable coefficient within a constraint\n    if (constraint.index === variable.index) {\n        throw new Error(\"[Tableau.updateConstraintCoefficient] constraint index should not be equal to variable index !\");\n    }\n\n    var r = this._putInBase(constraint.index);\n\n    var colVar = this.colByVarIndex[variable.index];\n    if (colVar === -1) {\n        var rowVar = this.rowByVarIndex[variable.index];\n        for (var c = 0; c < this.width; c += 1){\n            this.matrix[r][c] += difference * this.matrix[rowVar][c];\n        }\n    } else {\n        this.matrix[r][colVar] -= difference;\n    }\n};\n\nTableau.prototype.updateCost = function (variable, difference) {\n    // Updates variable coefficient within the objective function\n    var varIndex = variable.index;\n    var lastColumn = this.width - 1;\n    var varColumn = this.colByVarIndex[varIndex];\n    if (varColumn === -1) {\n        // Variable is in base\n        var variableRow = this.matrix[this.rowByVarIndex[varIndex]];\n\n        var c;\n        if (variable.priority === 0) {\n            var costRow = this.matrix[0];\n\n            // Upading all the reduced costs\n            for (c = 0; c <= lastColumn; c += 1) {\n                costRow[c] += difference * variableRow[c];\n            }\n        } else {\n            var reducedCosts = this.objectivesByPriority[variable.priority].reducedCosts;\n            for (c = 0; c <= lastColumn; c += 1) {\n                reducedCosts[c] += difference * variableRow[c];\n            }\n        }\n    } else {\n        // Variable is not in the base\n        // Updating coefficient with difference\n        this.matrix[0][varColumn] -= difference;\n    }\n};\n\nTableau.prototype.addConstraint = function (constraint) {\n    // Adds a constraint to the tableau\n    var sign = constraint.isUpperBound ? 1 : -1;\n    var lastRow = this.height;\n\n    var constraintRow = this.matrix[lastRow];\n    if (constraintRow === undefined) {\n        constraintRow = this.matrix[0].slice();\n        this.matrix[lastRow] = constraintRow;\n    }\n\n    // Setting all row cells to 0\n    var lastColumn = this.width - 1;\n    for (var c = 0; c <= lastColumn; c += 1) {\n        constraintRow[c] = 0;\n    }\n\n    // Initializing RHS\n    constraintRow[this.rhsColumn] = sign * constraint.rhs;\n\n    var terms = constraint.terms;\n    var nTerms = terms.length;\n    for (var t = 0; t < nTerms; t += 1) {\n        var term = terms[t];\n        var coefficient = term.coefficient;\n        var varIndex = term.variable.index;\n\n        var varRowIndex = this.rowByVarIndex[varIndex];\n        if (varRowIndex === -1) {\n            // Variable is non basic\n            constraintRow[this.colByVarIndex[varIndex]] += sign * coefficient;\n        } else {\n            // Variable is basic\n            var varRow = this.matrix[varRowIndex];\n            var varValue = varRow[this.rhsColumn];\n            for (c = 0; c <= lastColumn; c += 1) {\n                constraintRow[c] -= sign * coefficient * varRow[c];\n            }\n        }\n    }\n    // Creating slack variable\n    var slackIndex = constraint.index;\n    this.varIndexByRow[lastRow] = slackIndex;\n    this.rowByVarIndex[slackIndex] = lastRow;\n    this.colByVarIndex[slackIndex] = -1;\n\n    this.height += 1;\n};\n\nTableau.prototype.removeConstraint = function (constraint) {\n    var slackIndex = constraint.index;\n    var lastRow = this.height - 1;\n\n    // Putting the constraint's slack in the base\n    var r = this._putInBase(slackIndex);\n\n    // Removing constraint\n    // by putting the corresponding row at the bottom of the matrix\n    // and virtually reducing the height of the matrix by 1\n    var tmpRow = this.matrix[lastRow];\n    this.matrix[lastRow] = this.matrix[r];\n    this.matrix[r] = tmpRow;\n\n    // Removing associated slack variable from basic variables\n    this.varIndexByRow[r] = this.varIndexByRow[lastRow];\n    this.varIndexByRow[lastRow] = -1;\n    this.rowByVarIndex[slackIndex] = -1;\n\n    // Putting associated slack variable index in index manager\n    this.availableIndexes[this.availableIndexes.length] = slackIndex;\n\n    constraint.slack.index = -1;\n\n    this.height -= 1;\n};\n\nTableau.prototype.addVariable = function (variable) {\n    // Adds a variable to the tableau\n    // var sign = constraint.isUpperBound ? 1 : -1;\n\n    var lastRow = this.height - 1;\n    var lastColumn = this.width;\n    var cost = this.model.isMinimization === true ? -variable.cost : variable.cost;\n    var priority = variable.priority;\n\n    // Setting reduced costs\n    var nOptionalObjectives = this.optionalObjectives.length;\n    if (nOptionalObjectives > 0) {\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\n            this.optionalObjectives[o].reducedCosts[lastColumn] = 0;\n        }\n    }\n\n    if (priority === 0) {\n        this.matrix[0][lastColumn] = cost;\n    } else {\n        this.setOptionalObjective(priority, lastColumn, cost);\n        this.matrix[0][lastColumn] = 0;\n    }\n\n    // Setting all other column cells to 0\n    for (var r = 1; r <= lastRow; r += 1) {\n        this.matrix[r][lastColumn] = 0;\n    }\n\n    // Adding variable to trackers\n    var varIndex = variable.index;\n    this.varIndexByCol[lastColumn] = varIndex;\n\n    this.rowByVarIndex[varIndex] = -1;\n    this.colByVarIndex[varIndex] = lastColumn;\n\n    this.width += 1;\n};\n\n\nTableau.prototype.removeVariable = function (variable) {\n    var varIndex = variable.index;\n\n    // Putting the variable out of the base\n    var c = this._takeOutOfBase(varIndex);\n    var lastColumn = this.width - 1;\n    if (c !== lastColumn) {\n        var lastRow = this.height - 1;\n        for (var r = 0; r <= lastRow; r += 1) {\n            var row = this.matrix[r];\n            row[c] = row[lastColumn];\n        }\n\n        var nOptionalObjectives = this.optionalObjectives.length;\n        if (nOptionalObjectives > 0) {\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\n                reducedCosts[c] = reducedCosts[lastColumn];\n            }\n        }\n\n        var switchVarIndex = this.varIndexByCol[lastColumn];\n        this.varIndexByCol[c] = switchVarIndex;\n        this.colByVarIndex[switchVarIndex] = c;\n    }\n\n    // Removing variable from non basic variables\n    this.varIndexByCol[lastColumn] = -1;\n    this.colByVarIndex[varIndex] = -1;\n\n    // Adding index into index manager\n    this.availableIndexes[this.availableIndexes.length] = varIndex;\n\n    variable.index = -1;\n\n    this.width -= 1;\n};\n","/*global require*/\n/*global console*/\nimport Tableau from \"./Tableau.js\";\n\n//-------------------------------------------------------------------\n// Description: Display a tableau matrix\n//              and additional tableau information\n//\n//-------------------------------------------------------------------\nTableau.prototype.log = function (message, force) {\n    if (false && !force) {\n        return;\n    }\n\n    console.log(\"****\", message, \"****\");\n    console.log(\"Nb Variables\", this.width - 1);\n    console.log(\"Nb Constraints\", this.height - 1);\n    // console.log(\"Variable Ids\", this.variablesPerIndex);\n    console.log(\"Basic Indexes\", this.varIndexByRow);\n    console.log(\"Non Basic Indexes\", this.varIndexByCol);\n    console.log(\"Rows\", this.rowByVarIndex);\n    console.log(\"Cols\", this.colByVarIndex);\n\n    var digitPrecision = 5;\n\n    // Variable declaration\n    var varNameRowString = \"\",\n        spacePerColumn = [\" \"],\n        j,\n        c,\n        s,\n        r,\n        variable,\n        varIndex,\n        varName,\n        varNameLength,\n        nSpaces,\n        valueSpace,\n        nameSpace;\n\n    var row,\n        rowString;\n\n    for (c = 1; c < this.width; c += 1) {\n        varIndex = this.varIndexByCol[c];\n        variable = this.variablesPerIndex[varIndex];\n        if (variable === undefined) {\n            varName = \"c\" + varIndex;\n        } else {\n            varName = variable.id;\n        }\n\n        varNameLength = varName.length;\n        nSpaces = Math.abs(varNameLength - 5);\n        valueSpace = \" \";\n        nameSpace = \"\\t\";\n\n        ///////////\n        /*valueSpace = \" \";\n        nameSpace = \" \";\n\n        for (s = 0; s < nSpaces; s += 1) {\n            if (varNameLength > 5) {\n                valueSpace += \" \";\n            } else {\n                nameSpace += \" \";\n            }\n        }*/\n\n        ///////////\n        if (varNameLength > 5) {\n            valueSpace += \" \";\n        } else {\n            nameSpace += \"\\t\";\n        }\n\n        spacePerColumn[c] = valueSpace;\n\n        varNameRowString += nameSpace + varName;\n    }\n    console.log(varNameRowString);\n\n    var signSpace;\n\n    // Displaying reduced costs\n    var firstRow = this.matrix[this.costRowIndex];\n    var firstRowString = \"\\t\";\n\n    ///////////\n    /*for (j = 1; j < this.width; j += 1) {\n        signSpace = firstRow[j] < 0 ? \"\" : \" \";\n        firstRowString += signSpace;\n        firstRowString += spacePerColumn[j];\n        firstRowString += firstRow[j].toFixed(2);\n    }\n    signSpace = firstRow[0] < 0 ? \"\" : \" \";\n    firstRowString += signSpace + spacePerColumn[0] +\n        firstRow[0].toFixed(2);\n    console.log(firstRowString + \" Z\");*/\n\n    ///////////\n    for (j = 1; j < this.width; j += 1) {\n        signSpace = \"\\t\";\n        firstRowString += signSpace;\n        firstRowString += spacePerColumn[j];\n        firstRowString += firstRow[j].toFixed(digitPrecision);\n    }\n    signSpace = \"\\t\";\n    firstRowString += signSpace + spacePerColumn[0] +\n        firstRow[0].toFixed(digitPrecision);\n    console.log(firstRowString + \"\\tZ\");\n\n\n    // Then the basic variable rowByVarIndex\n    for (r = 1; r < this.height; r += 1) {\n        row = this.matrix[r];\n        rowString = \"\\t\";\n\n        ///////////\n        /*for (c = 1; c < this.width; c += 1) {\n            signSpace = row[c] < 0 ? \"\" : \" \";\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(2);\n        }\n        signSpace = row[0] < 0 ? \"\" : \" \";\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(2);*/\n\n        ///////////\n        for (c = 1; c < this.width; c += 1) {\n            signSpace = \"\\t\";\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(digitPrecision);\n        }\n        signSpace = \"\\t\";\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(digitPrecision);\n\n\n        varIndex = this.varIndexByRow[r];\n        variable = this.variablesPerIndex[varIndex];\n        if (variable === undefined) {\n            varName = \"c\" + varIndex;\n        } else {\n            varName = variable.id;\n        }\n        console.log(rowString + \"\\t\" + varName);\n    }\n    console.log(\"\");\n\n    // Then reduced costs for optional objectives\n    var nOptionalObjectives = this.optionalObjectives.length;\n    if (nOptionalObjectives > 0) {\n        console.log(\"    Optional objectives:\");\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\n            var reducedCostsString = \"\";\n            for (j = 1; j < this.width; j += 1) {\n                signSpace = reducedCosts[j] < 0 ? \"\" : \" \";\n                reducedCostsString += signSpace;\n                reducedCostsString += spacePerColumn[j];\n                reducedCostsString += reducedCosts[j].toFixed(digitPrecision);\n            }\n            signSpace = reducedCosts[0] < 0 ? \"\" : \" \";\n            reducedCostsString += signSpace + spacePerColumn[0] +\n                reducedCosts[0].toFixed(digitPrecision);\n            console.log(reducedCostsString + \" z\" + o);\n        }\n    }\n    console.log(\"Feasible?\", this.feasible);\n    console.log(\"evaluation\", this.evaluation);\n\n    return this;\n};\n","/*global require*/\nimport Tableau from \"./Tableau.js\";\n\nTableau.prototype.copy = function () {\n    var copy = new Tableau(this.precision);\n\n    copy.width = this.width;\n    copy.height = this.height;\n\n    copy.nVars = this.nVars;\n    copy.model = this.model;\n\n    // Making a shallow copy of integer variable indexes\n    // and variable ids\n    copy.variables = this.variables;\n    copy.variablesPerIndex = this.variablesPerIndex;\n    copy.unrestrictedVars = this.unrestrictedVars;\n    copy.lastElementIndex = this.lastElementIndex;\n\n    // All the other arrays are deep copied\n    copy.varIndexByRow = this.varIndexByRow.slice();\n    copy.varIndexByCol = this.varIndexByCol.slice();\n\n    copy.rowByVarIndex = this.rowByVarIndex.slice();\n    copy.colByVarIndex = this.colByVarIndex.slice();\n\n    copy.availableIndexes = this.availableIndexes.slice();\n\n    var optionalObjectivesCopy = [];\n    for(var o = 0; o < this.optionalObjectives.length; o++){\n        optionalObjectivesCopy[o] = this.optionalObjectives[o].copy();\n    }\n    copy.optionalObjectives = optionalObjectivesCopy;\n\n\n    var matrix = this.matrix;\n    var matrixCopy = new Array(this.height);\n    for (var r = 0; r < this.height; r++) {\n        matrixCopy[r] = matrix[r].slice();\n    }\n\n    copy.matrix = matrixCopy;\n\n    return copy;\n};\n\nTableau.prototype.save = function () {\n    this.savedState = this.copy();\n};\n\nTableau.prototype.restore = function () {\n    if (this.savedState === null) {\n        return;\n    }\n\n    var save = this.savedState;\n    var savedMatrix = save.matrix;\n    this.nVars = save.nVars;\n    this.model = save.model;\n\n    // Shallow restore\n    this.variables = save.variables;\n    this.variablesPerIndex = save.variablesPerIndex;\n    this.unrestrictedVars = save.unrestrictedVars;\n    this.lastElementIndex = save.lastElementIndex;\n\n    this.width = save.width;\n    this.height = save.height;\n\n    // Restoring matrix\n    var r, c;\n    for (r = 0; r < this.height; r += 1) {\n        var savedRow = savedMatrix[r];\n        var row = this.matrix[r];\n        for (c = 0; c < this.width; c += 1) {\n            row[c] = savedRow[c];\n        }\n    }\n\n    // Restoring all the other structures\n    var savedBasicIndexes = save.varIndexByRow;\n    for (c = 0; c < this.height; c += 1) {\n        this.varIndexByRow[c] = savedBasicIndexes[c];\n    }\n\n    while (this.varIndexByRow.length > this.height) {\n        this.varIndexByRow.pop();\n    }\n\n    var savedNonBasicIndexes = save.varIndexByCol;\n    for (r = 0; r < this.width; r += 1) {\n        this.varIndexByCol[r] = savedNonBasicIndexes[r];\n    }\n\n    while (this.varIndexByCol.length > this.width) {\n        this.varIndexByCol.pop();\n    }\n\n    var savedRows = save.rowByVarIndex;\n    var savedCols = save.colByVarIndex;\n    for (var v = 0; v < this.nVars; v += 1) {\n        this.rowByVarIndex[v] = savedRows[v];\n        this.colByVarIndex[v] = savedCols[v];\n    }\n\n\n    if (save.optionalObjectives.length > 0 && this.optionalObjectives.length > 0) {\n        this.optionalObjectives = [];\n        this.optionalObjectivePerPriority = {};\n        for(var o = 0; o < save.optionalObjectives.length; o++){\n            var optionalObjectiveCopy = save.optionalObjectives[o].copy();\n            this.optionalObjectives[o] = optionalObjectiveCopy;\n            this.optionalObjectivePerPriority[optionalObjectiveCopy.priority] = optionalObjectiveCopy;\n        }\n    }\n};\n","/*global require*/\nimport Tableau from \"./Tableau.js\";\n\nfunction VariableData(index, value) {\n    this.index = index;\n    this.value = value;\n}\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.getMostFractionalVar = function () {\n    var biggestFraction = 0;\n    var selectedVarIndex = null;\n    var selectedVarValue = null;\n    var mid = 0.5;\n\n    var integerVariables = this.model.integerVariables;\n    var nIntegerVars = integerVariables.length;\n    for (var v = 0; v < nIntegerVars; v++) {\n        var varIndex = integerVariables[v].index;\n        var varRow = this.rowByVarIndex[varIndex];\n        if (varRow === -1) {\n            continue;\n        }\n\n        var varValue = this.matrix[varRow][this.rhsColumn];\n        var fraction = Math.abs(varValue - Math.round(varValue));\n        if (biggestFraction < fraction) {\n            biggestFraction = fraction;\n            selectedVarIndex = varIndex;\n            selectedVarValue = varValue;\n        }\n    }\n\n    return new VariableData(selectedVarIndex, selectedVarValue);\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.getFractionalVarWithLowestCost = function () {\n    var highestCost = Infinity;\n    var selectedVarIndex = null;\n    var selectedVarValue = null;\n\n    var integerVariables = this.model.integerVariables;\n    var nIntegerVars = integerVariables.length;\n    for (var v = 0; v < nIntegerVars; v++) {\n        var variable = integerVariables[v];\n        var varIndex = variable.index;\n        var varRow = this.rowByVarIndex[varIndex];\n        if (varRow === -1) {\n            // Variable value is non basic\n            // its value is 0\n            continue;\n        }\n\n        var varValue = this.matrix[varRow][this.rhsColumn];\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\n            var cost = variable.cost;\n            if (highestCost > cost) {\n                highestCost = cost;\n                selectedVarIndex = varIndex;\n                selectedVarValue = varValue;\n            }\n        }\n    }\n\n    return new VariableData(selectedVarIndex, selectedVarValue);\n};\n","/*global require*/\nimport Tableau from \"./Tableau.js\";\n\nTableau.prototype.countIntegerValues = function(){\n    var count = 0;\n    for (var r = 1; r < this.height; r += 1) {\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\n            var decimalPart = this.matrix[r][this.rhsColumn];\n            decimalPart = decimalPart - Math.floor(decimalPart);\n            if (decimalPart < this.precision && -decimalPart < this.precision) {\n                count += 1;\n            }\n        }\n    }\n\n    return count;\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nTableau.prototype.isIntegral = function () {\n    var integerVariables = this.model.integerVariables;\n    var nIntegerVars = integerVariables.length;\n    for (var v = 0; v < nIntegerVars; v++) {\n        var varRow = this.rowByVarIndex[integerVariables[v].index];\n        if (varRow === -1) {\n            continue;\n        }\n\n        var varValue = this.matrix[varRow][this.rhsColumn];\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\n            return false;\n        }\n    }\n    return true;\n};\n\n// Multiply all the fractional parts of variables supposed to be integer\nTableau.prototype.computeFractionalVolume = function(ignoreIntegerValues) {\n    var volume = -1;\n    // var integerVariables = this.model.integerVariables;\n    // var nIntegerVars = integerVariables.length;\n    // for (var v = 0; v < nIntegerVars; v++) {\n    //     var r = this.rowByVarIndex[integerVariables[v].index];\n    //     if (r === -1) {\n    //         continue;\n    //     }\n    //     var rhs = this.matrix[r][this.rhsColumn];\n    //     rhs = Math.abs(rhs);\n    //     var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\n    //     if (decimalPart < this.precision) {\n    //         if (!ignoreIntegerValues) {\n    //             return 0;\n    //         }\n    //     } else {\n    //         if (volume === -1) {\n    //             volume = rhs;\n    //         } else {\n    //             volume *= rhs;\n    //         }\n    //     }\n    // }\n\n    for (var r = 1; r < this.height; r += 1) {\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\n            var rhs = this.matrix[r][this.rhsColumn];\n            rhs = Math.abs(rhs);\n            var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\n            if (decimalPart < this.precision) {\n                if (!ignoreIntegerValues) {\n                    return 0;\n                }\n            } else {\n                if (volume === -1) {\n                    volume = rhs;\n                } else {\n                    volume *= rhs;\n                }\n            }\n        }\n    }\n\n    if (volume === -1){\n        return 0;\n    }\n    return volume;\n};\n","/*global describe*/\n/*global require*/\n/*global module*/\n/*global it*/\n/*global console*/\n/*global process*/\n\nimport Tableau from \"./Tableau/Tableau.js\";\nimport { Constraint, Equality, Variable, IntegerVariable } from \"./expressions.js\";\n\n/*************************************************************\n * Class: Model\n * Description: Holds the model of a linear optimisation problem\n **************************************************************/\nfunction Model(precision, name) {\n    this.tableau = new Tableau(precision);\n\n    this.name = name;\n\n    this.variables = [];\n\n    this.integerVariables = [];\n\n    this.unrestrictedVariables = {};\n\n    this.constraints = [];\n\n    this.nConstraints = 0;\n\n    this.nVariables = 0;\n\n    this.isMinimization = true;\n\n    this.tableauInitialized = false;\n    \n    this.relaxationIndex = 1;\n\n    this.useMIRCuts = false;\n\n    this.checkForCycles = true;\n    \n    //\n    // Quick and dirty way to leave useful information\n    // for the end user without hitting the console\n    // or modifying the primary return object...\n    //\n    this.messages = [];\n}\nexport default Model;\n\nModel.prototype.minimize = function () {\n    this.isMinimization = true;\n    return this;\n};\n\nModel.prototype.maximize = function () {\n    this.isMinimization = false;\n    return this;\n};\n\n// Model.prototype.addConstraint = function (constraint) {\n//     // TODO: make sure that the constraint does not belong do another model\n//     // and make\n//     this.constraints.push(constraint);\n//     return this;\n// };\n\nModel.prototype._getNewElementIndex = function () {\n    if (this.availableIndexes.length > 0) {\n        return this.availableIndexes.pop();\n    }\n\n    var index = this.lastElementIndex;\n    this.lastElementIndex += 1;\n    return index;\n};\n\nModel.prototype._addConstraint = function (constraint) {\n    var slackVariable = constraint.slack;\n    this.tableau.variablesPerIndex[slackVariable.index] = slackVariable;\n    this.constraints.push(constraint);\n    this.nConstraints += 1;\n    if (this.tableauInitialized === true) {\n        this.tableau.addConstraint(constraint);\n    }\n};\n\nModel.prototype.smallerThan = function (rhs) {\n    var constraint = new Constraint(rhs, true, this.tableau.getNewElementIndex(), this);\n    this._addConstraint(constraint);\n    return constraint;\n};\n\nModel.prototype.greaterThan = function (rhs) {\n    var constraint = new Constraint(rhs, false, this.tableau.getNewElementIndex(), this);\n    this._addConstraint(constraint);\n    return constraint;\n};\n\nModel.prototype.equal = function (rhs) {\n    var constraintUpper = new Constraint(rhs, true, this.tableau.getNewElementIndex(), this);\n    this._addConstraint(constraintUpper);\n\n    var constraintLower = new Constraint(rhs, false, this.tableau.getNewElementIndex(), this);\n    this._addConstraint(constraintLower);\n\n    return new Equality(constraintUpper, constraintLower);\n};\n\nModel.prototype.addVariable = function (cost, id, isInteger, isUnrestricted, priority) {\n    if (typeof priority === \"string\") {\n        switch (priority) {\n        case \"required\":\n            priority = 0;\n            break;\n        case \"strong\":\n            priority = 1;\n            break;\n        case \"medium\":\n            priority = 2;\n            break;\n        case \"weak\":\n            priority = 3;\n            break;\n        default:\n            priority = 0;\n            break;\n        }\n    }\n\n    var varIndex = this.tableau.getNewElementIndex();\n    if (id === null || id === undefined) {\n        id = \"v\" + varIndex;\n    }\n\n    if (cost === null || cost === undefined) {\n        cost = 0;\n    }\n\n    if (priority === null || priority === undefined) {\n        priority = 0;\n    }\n\n    var variable;\n    if (isInteger) {\n        variable = new IntegerVariable(id, cost, varIndex, priority);\n        this.integerVariables.push(variable);\n    } else {\n        variable = new Variable(id, cost, varIndex, priority);\n    }\n\n    this.variables.push(variable);\n    this.tableau.variablesPerIndex[varIndex] = variable;\n\n    if (isUnrestricted) {\n        this.unrestrictedVariables[varIndex] = true;\n    }\n\n    this.nVariables += 1;\n\n    if (this.tableauInitialized === true) {\n        this.tableau.addVariable(variable);\n    }\n\n    return variable;\n};\n\nModel.prototype._removeConstraint = function (constraint) {\n    var idx = this.constraints.indexOf(constraint);\n    if (idx === -1) {\n        console.warn(\"[Model.removeConstraint] Constraint not present in model\");\n        return;\n    }\n\n    this.constraints.splice(idx, 1);\n    this.nConstraints -= 1;\n\n    if (this.tableauInitialized === true) {\n        this.tableau.removeConstraint(constraint);\n    }\n\n    if (constraint.relaxation) {\n        this.removeVariable(constraint.relaxation);\n    }\n};\n\n//-------------------------------------------------------------------\n// For dynamic model modification\n//-------------------------------------------------------------------\nModel.prototype.removeConstraint = function (constraint) {\n    if (constraint.isEquality) {\n        this._removeConstraint(constraint.upperBound);\n        this._removeConstraint(constraint.lowerBound);\n    } else {\n        this._removeConstraint(constraint);\n    }\n\n    return this;\n};\n\nModel.prototype.removeVariable = function (variable) {\n    var idx = this.variables.indexOf(variable);\n    if (idx === -1) {\n        console.warn(\"[Model.removeVariable] Variable not present in model\");\n        return;\n    }\n    this.variables.splice(idx, 1);\n\n    if (this.tableauInitialized === true) {\n        this.tableau.removeVariable(variable);\n    }\n\n    return this;\n};\n\nModel.prototype.updateRightHandSide = function (constraint, difference) {\n    if (this.tableauInitialized === true) {\n        this.tableau.updateRightHandSide(constraint, difference);\n    }\n    return this;\n};\n\nModel.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\n    if (this.tableauInitialized === true) {\n        this.tableau.updateConstraintCoefficient(constraint, variable, difference);\n    }\n    return this;\n};\n\n\nModel.prototype.setCost = function (cost, variable) {\n    var difference = cost - variable.cost;\n    if (this.isMinimization === false) {\n        difference = -difference;\n    }\n\n    variable.cost = cost;\n    this.tableau.updateCost(variable, difference);\n    return this;\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nModel.prototype.loadJson = function (jsonModel) {\n    this.isMinimization = (jsonModel.opType !== \"max\");\n\n    var variables = jsonModel.variables;\n    var constraints = jsonModel.constraints;\n\n    var constraintsMin = {};\n    var constraintsMax = {};\n\n    // Instantiating constraints\n    var constraintIds = Object.keys(constraints);\n    var nConstraintIds = constraintIds.length;\n\n    for (var c = 0; c < nConstraintIds; c += 1) {\n        var constraintId = constraintIds[c];\n        var constraint = constraints[constraintId];\n        var equal = constraint.equal;\n\n        var weight = constraint.weight;\n        var priority = constraint.priority;\n        var relaxed = weight !== undefined || priority !== undefined;\n\n        var lowerBound, upperBound;\n        if (equal === undefined) {\n            var min = constraint.min;\n            if (min !== undefined) {\n                lowerBound = this.greaterThan(min);\n                constraintsMin[constraintId] = lowerBound;\n                if (relaxed) { lowerBound.relax(weight, priority); }\n            }\n\n            var max = constraint.max;\n            if (max !== undefined) {\n                upperBound = this.smallerThan(max);\n                constraintsMax[constraintId] = upperBound;\n                if (relaxed) { upperBound.relax(weight, priority); }\n            }\n        } else {\n            lowerBound = this.greaterThan(equal);\n            constraintsMin[constraintId] = lowerBound;\n\n            upperBound = this.smallerThan(equal);\n            constraintsMax[constraintId] = upperBound;\n\n            var equality = new Equality(lowerBound, upperBound);\n            if (relaxed) { equality.relax(weight, priority); }\n        }\n    }\n\n    var variableIds = Object.keys(variables);\n    var nVariables = variableIds.length;\n    \n    \n    \n//\n//\n// *** OPTIONS ***\n//\n//\n\n    this.tolerance = jsonModel.tolerance || 0;\n    \n    if(jsonModel.timeout){\n        this.timeout = jsonModel.timeout;\n    }\n    \n    //\n    //\n    // The model is getting too sloppy with options added to it...\n    // mebe it needs an \"options\" option...?\n    //\n    // YES! IT DOES!\n    // DO IT!\n    // NOW!\n    // HERE!!!\n    //\n    if(jsonModel.options){\n        \n        //\n        // TIMEOUT\n        //\n        if(jsonModel.options.timeout){\n            this.timeout = jsonModel.options.timeout;\n        }\n        \n        //\n        // TOLERANCE\n        //\n        if(this.tolerance === 0){\n            this.tolerance = jsonModel.options.tolerance || 0;\n        }\n        \n        //\n        // MIR CUTS - (NOT WORKING)\n        //\n        if(jsonModel.options.useMIRCuts){\n            this.useMIRCuts = jsonModel.options.useMIRCuts;\n        }\n        \n        //\n        // CYCLE CHECK...tricky because it defaults to false\n        //\n        //\n        // This should maybe be on by default...\n        //\n        if(typeof jsonModel.options.exitOnCycles === \"undefined\"){\n            this.checkForCycles = true;\n        } else {\n            this.checkForCycles = jsonModel.options.exitOnCycles;\n        }\n        \n        //\n        // STORE MILP MODELS\n        //\n        if(jsonModel.options.keep_solutions){\n            this.keep_solutions = jsonModel.options.keep_solutions;\n        } else {\n            this.keep_solutions = false;\n        }\n\n        \n    }\n    \n    \n//\n//\n// /// OPTIONS \\\\\\\n//\n//\n    \n    var integerVarIds = jsonModel.ints || {};\n    var binaryVarIds = jsonModel.binaries || {};\n    var unrestrictedVarIds = jsonModel.unrestricted || {};\n\n    // Instantiating variables and constraint terms\n    var objectiveName = jsonModel.optimize;\n    for (var v = 0; v < nVariables; v += 1) {\n        // Creation of the variables\n        var variableId = variableIds[v];\n        var variableConstraints = variables[variableId];\n        var cost = variableConstraints[objectiveName] || 0;\n        var isBinary = !!binaryVarIds[variableId];\n        var isInteger = !!integerVarIds[variableId] || isBinary;\n        var isUnrestricted = !!unrestrictedVarIds[variableId];\n        var variable = this.addVariable(cost, variableId, isInteger, isUnrestricted);\n\n        if (isBinary) {\n            // Creating an upperbound constraint for this variable\n            this.smallerThan(1).addTerm(1, variable);\n        }\n\n        var constraintNames = Object.keys(variableConstraints);\n        for (c = 0; c < constraintNames.length; c += 1) {\n            var constraintName = constraintNames[c];\n            if (constraintName === objectiveName) {\n                continue;\n            }\n\n            var coefficient = variableConstraints[constraintName];\n\n            var constraintMin = constraintsMin[constraintName];\n            if (constraintMin !== undefined) {\n                constraintMin.addTerm(coefficient, variable);\n            }\n\n            var constraintMax = constraintsMax[constraintName];\n            if (constraintMax !== undefined) {\n                constraintMax.addTerm(coefficient, variable);\n            }\n        }\n    }\n\n    return this;\n};\n\n//-------------------------------------------------------------------\n//-------------------------------------------------------------------\nModel.prototype.getNumberOfIntegerVariables = function () {\n    return this.integerVariables.length;\n};\n\nModel.prototype.solve = function () {\n    // Setting tableau if not done\n    if (this.tableauInitialized === false) {\n        this.tableau.setModel(this);\n        this.tableauInitialized = true;\n    }\n\n    return this.tableau.solve();\n};\n\nModel.prototype.isFeasible = function () {\n    return this.tableau.feasible;\n};\n\nModel.prototype.save = function () {\n    return this.tableau.save();\n};\n\nModel.prototype.restore = function () {\n    return this.tableau.restore();\n};\n\nModel.prototype.activateMIRCuts = function (useMIRCuts) {\n    this.useMIRCuts = useMIRCuts;\n};\n\nModel.prototype.debug = function (debugCheckForCycles) {\n    this.checkForCycles = debugCheckForCycles;\n};\n\nModel.prototype.log = function (message) {\n    return this.tableau.log(message);\n};\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {BlueprintItemModel, RecipeIOModel} from '../model/store';\r\nimport {Objective} from '../types';\r\nimport {Model, type Variable} from './javascript-lp-solver';\r\nimport type {Connections} from './resolve-connections';\r\n\r\n//this uses linear programming simplex solver to solve max output for multiple flows\r\n//external library is used for algorithm itself, we just build multiple expressions to solve\r\n//we should take additional care to cycles, because of this we input array of SCC built previously\r\n\r\n//model variables are item count, which can vary from 0 to max\r\n//we should find max value for item count, which will mean max input/output\r\n\r\ntype VirtualSink = {\r\n    output: RecipeIOModel;\r\n    variable: Variable;\r\n};\r\nexport class GraphSolver {\r\n    private readonly precision: number;\r\n    private model: Model;\r\n    private variables;\r\n    private virtualSinks;\r\n    private errorCorrectionMode;\r\n\r\n    constructor(precision?: number) {\r\n        this.precision = precision || .001;\r\n        this.model = new Model(this.precision).maximize();\r\n        this.variables = new Map<string, Variable>();\r\n        this.virtualSinks = new Map<string, VirtualSink>();\r\n        this.errorCorrectionMode = false;\r\n    }\r\n\r\n    private reset() {\r\n        this.model = new Model(this.precision).maximize();\r\n        this.variables = new Map<string, Variable>();\r\n        this.virtualSinks = new Map<string, VirtualSink>();\r\n        this.errorCorrectionMode = false;\r\n    }\r\n\r\n    solve(arrayItems: BlueprintItemModel[], connections: Connections) {\r\n        this.prepareModel(arrayItems, connections);\r\n        let solution = this.model.solve();\r\n        let solved = this.isSolved(solution);\r\n        if(!solved) {\r\n            this.reset();\r\n            this.errorCorrectionMode = true;\r\n            this.prepareModel(arrayItems, connections);\r\n            solution = this.model.solve();\r\n            solved = this.isSolved(solution);\r\n        }\r\n        this.applySolution(solved, arrayItems);\r\n    }\r\n\r\n    private isSolved(solution: Model.Solution) {\r\n        if(!solution.feasible)\r\n            return false;\r\n        if(solution.evaluation && Number.isFinite(solution.evaluation))\r\n            return true;\r\n        //all zeros mean unsolved\r\n        return ![...this.variables.values()].every((v) => !v.value);\r\n    }\r\n\r\n    private prepareModel(arrayItems: BlueprintItemModel[], connections: Connections) {\r\n        this.prepareVariables(arrayItems);\r\n        this.prepareConstraints(connections);\r\n    }\r\n\r\n    private prepareVariables(arrayItems: BlueprintItemModel[]) {\r\n        let hasLockedItems = false;\r\n        let hasObjective = false;\r\n        for(const item of arrayItems) {\r\n            hasLockedItems = hasLockedItems || item.isLocked;\r\n            if(!hasObjective && (item.objective !== undefined)) {\r\n                hasObjective = true;\r\n            }\r\n        }\r\n\r\n        const {\r\n            model,\r\n            variables,\r\n            virtualSinks,\r\n            errorCorrectionMode,\r\n        } = this;\r\n        for(const item of arrayItems) {\r\n            const cost = (hasObjective && (item.objective === undefined)) ? 0 : 1;\r\n            let priority = 0;\r\n            switch(item.objective) {\r\n                case Objective.Secondary:\r\n                    priority = 1;\r\n                    break;\r\n                case Objective.LowPriority:\r\n                    priority = 2;\r\n                    break;\r\n            }\r\n            const variable = model.addVariable(cost, item.key, false, false, priority);\r\n            variables.set(item.key, variable);\r\n            if(!hasLockedItems || item.isLocked || (item.objective !== undefined)) {\r\n                //if item has objective - we must also set its limit\r\n                model.smallerThan(item.count).addTerm(1, variable);\r\n            }\r\n\r\n            if(errorCorrectionMode && GraphSolver.itemShouldBeCheckedForErrors(item)) {\r\n                //try to find errors by adding virtual sink to each output\r\n                //we can check only items with two connected outputs or cycles, because other items should not cause errors\r\n                for(const io of item.selectedRecipe?.output || []) {\r\n                    if(!io.linksCount) {\r\n                        continue;\r\n                    }\r\n                    const sinkVariable = model.addVariable(0, 'sink_' + io.key);\r\n                    virtualSinks.set(io.key, {\r\n                        output: io,\r\n                        variable: sinkVariable,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static itemShouldBeCheckedForErrors(item: BlueprintItemModel) {\r\n        if(item.partOfCycle)\r\n            return true;\r\n        const output = [...item.selectedRecipe?.output || []];\r\n        if(output.length <= 1)\r\n            return false;\r\n        const outputConnections = output.reduce((acc, io) => (acc + (io.linksCount ? 1 : 0)), 0);\r\n        return outputConnections > 1;\r\n    }\r\n\r\n    private prepareConstraints(connections: Connections) {\r\n        const {\r\n            model,\r\n            variables,\r\n            virtualSinks,\r\n        } = this;\r\n\r\n        const addTerm = function(constraint: Model.Constraint, io?: RecipeIOModel) {\r\n            const itemVariable = variables.get(io?.ownerItem?.key || '');\r\n            if(io && itemVariable) {\r\n                constraint.addTerm((io.isInput ? -1 : 1) * io.cpsMax, itemVariable);\r\n            }\r\n            return itemVariable;\r\n        };\r\n\r\n        //variables are added, now we add terms (io flow distribution)\r\n        //we must balance entire input output of multiple connected items\r\n        //this way we'll support all link types (Many to Many)\r\n        for(const connection of connections) {\r\n            const constraint = model.equal(0);\r\n            for(const connectedItem of connection.connections) {\r\n                const itemVariable = addTerm(constraint, connectedItem);\r\n                const sink = virtualSinks.get(connectedItem.key);\r\n                if(itemVariable && sink) {\r\n                    //sink is input\r\n                    constraint.addTerm(-1 * connectedItem.cpsMax, sink.variable);\r\n                    const constraint1 = model.greaterThan(0);\r\n                    constraint1.addTerm(-1 * connectedItem.cpsMax, sink.variable);\r\n                    constraint1.addTerm(1 * connectedItem.cpsMax, itemVariable);\r\n                }\r\n            }\r\n            //see https://github.com/doubleaxe/daxfb-calculator/issues/2\r\n            //for many to many connections we should add constraint for each standalone item, otherwise we will get wrong results\r\n            //incorrect\r\n            /*\r\nDAXFBESC$eNptkLsOwjAMRf_Fs4faSXGVnR-AASSUoTAAUoGqPDpU-XfcNol\r\nA6nZzcnLjZIAruMMAd3Bgt4DQ6rKyFbKIR-gU1zcIOBsmCsYyki2jIG_FD1Z\r\nOWPjk0jPKIqJ4Vk_9QleBhkzqemVh1UaDSKzOk66rO-UNOMpNmygWyMypqE9\r\nDKUXywU-H9KnNxMw06JxJ98ai4x4W4C5DG583ZoNlzvST-e-gxgu4Ac66Xo_\r\nf-9G5qxC-iGdd0g\r\n            */\r\n            //correct\r\n            /*\r\nDAXFBESC$eNptkLsOwjAMRf_Fs4faTkmVnR-AASSUoTAAUoGqPDpU-XfcNok\r\n6dLs5OblxMsAd3GmAJzgwe0BodVmZCtlaj9Aprh8QcDYkCmIYyZRRsF_FL1Z\r\nOWPjk0jvK1lrFs3rpV7oKFJLU9cnCpo0GkTU6T7qu7pQ34Cg37aJYIDOnoj4\r\nNpRTJBz8d0qc2E5Np0DmT7o1F5yOswEOGJj5vzIJlzrTIjLI4qPEGboCrrrf\r\nj9_507iqEP4ivXdQ\r\n            */\r\n            if((connection.inputs.length > 1) && (connection.outputs.length > 1)) {\r\n                for(const connectedItem of connection.connections) {\r\n                    if(connectedItem.linksCount > 1) {\r\n                        //they is unrelevant for this bug, if other many to many bugs found - we will think\r\n                        continue;\r\n                    }\r\n                    const constraint1 = connectedItem.isInput ? model.greaterThan(0) : model.smallerThan(0);\r\n                    addTerm(constraint1, connectedItem);\r\n                    //only one link actually\r\n                    for(const link of connectedItem.links) {\r\n                        const otherSide = link.getOtherSide(connectedItem);\r\n                        addTerm(constraint1, otherSide);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private applySolution(solved: boolean, arrayItems: BlueprintItemModel[]) {\r\n        const chainContainsError = !solved || this.errorCorrectionMode;\r\n        for(const item of arrayItems) {\r\n            const itemVariable = this.variables.get(item.key);\r\n            if(!itemVariable)\r\n                continue;\r\n            item.setSolvedCount(itemVariable.value);\r\n            item.resetSolutionStatus();\r\n            if(chainContainsError) {\r\n                item.chainContainsError = true;\r\n            }\r\n        }\r\n\r\n        if(solved && this.errorCorrectionMode) {\r\n            for(const {output, variable} of this.virtualSinks.values()) {\r\n                //if sink has value, then output is not balanced\r\n                if(variable.value) {\r\n                    output.setCausesSolvingError(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {BlueprintItemModel, LinkModel} from '../model/store';\r\n\r\nexport class GraphVertex {\r\n    public readonly item: BlueprintItemModel;\r\n    public inputEdges?: GraphEdge[] = undefined;\r\n    public outputEdges?: GraphEdge[] = undefined;\r\n    public index?: number = undefined;\r\n    public lowlink = 0;\r\n    public onStack = false;\r\n\r\n    constructor(item: BlueprintItemModel) {\r\n        this.item = item;\r\n    }\r\n}\r\n\r\nexport class GraphEdge {\r\n    public readonly link: LinkModel;\r\n    public readonly inputVertex: GraphVertex;\r\n    public readonly outputVertex: GraphVertex;\r\n\r\n    constructor(link: LinkModel, inputVertex: GraphVertex, outputVertex: GraphVertex) {\r\n        this.link = link;\r\n        this.inputVertex = inputVertex;\r\n        this.outputVertex = outputVertex;\r\n    }\r\n}\r\n\r\n//we are using Tarjan's strongly connected components algorithm to walk graph and to find SCC/cycles\r\n//we may get here middle point of graph, so inside we use depth-first search (DFS) graph walker to walk upwards\r\n//because Tarjan's algorithm only walks downwards\r\ntype ArrayScc = BlueprintItemModel[][];\r\ntype ArraySccVertex = GraphVertex[][];\r\n\r\nexport class TarjanGraphWalker {\r\n    private readonly vertexMapping = new Map<string, GraphVertex>();\r\n    private index = 0;\r\n    private stack: GraphVertex[] = [];\r\n    private readonly arraySeparateGraphs: ArrayScc[] = [];\r\n    private currentArrayScc: ArraySccVertex = [];\r\n    walkGraph(items: IterableIterator<BlueprintItemModel>) {\r\n        //if we have full blueprint here - we may encounter several independent graphs\r\n        //for example we have full graph update when we just loaded data\r\n        for(const item of items) {\r\n            const vertex = this.mapVertex(item);\r\n            if(vertex.index === undefined) {\r\n                this.strongconnect(vertex);\r\n                this.walkEntireGraph();\r\n            }\r\n        }\r\n        return this.arraySeparateGraphs;\r\n    }\r\n    private walkEntireGraph() {\r\n        //we walked entire graph downwards, now we walk upwards from everything found\r\n        //until we exhausted everything\r\n        //this way we'll walk entire graph\r\n        const allFoundEdges: ArrayScc = [];\r\n        do {\r\n            const currentlyFound = this.currentArrayScc;\r\n            this.currentArrayScc = [];\r\n            for(const found of currentlyFound) {\r\n                allFoundEdges.push(found.map((vertex) => vertex.item));\r\n                for(const vertex of found) {\r\n                    this.walkUpward(vertex);\r\n                }\r\n            }\r\n        } while(this.currentArrayScc.length);\r\n        this.arraySeparateGraphs.push(allFoundEdges);\r\n    }\r\n    private walkUpward(vertex: GraphVertex) {\r\n        const upperEdges = this.findEdges(vertex, false);\r\n        for(const edge of upperEdges) {\r\n            const upperVertex = edge.outputVertex;\r\n            if(upperVertex.index === undefined) {\r\n                this.strongconnect(upperVertex);\r\n                this.walkUpward(upperVertex);\r\n            }\r\n        }\r\n    }\r\n    private mapVertex(item: BlueprintItemModel) {\r\n        let vertex = this.vertexMapping.get(item.key);\r\n        if(!vertex) {\r\n            vertex = new GraphVertex(item);\r\n            this.vertexMapping.set(item.key, vertex);\r\n        }\r\n        return vertex;\r\n    }\r\n    private findEdges(vertex: GraphVertex, outbound: boolean) {\r\n        let edges = outbound ? vertex.outputEdges : vertex.inputEdges;\r\n        if(edges)\r\n            return edges;\r\n\r\n        edges = [];\r\n        if(outbound)\r\n            vertex.outputEdges = edges;\r\n        else\r\n            vertex.inputEdges = edges;\r\n\r\n        const recipe = vertex.item.selectedRecipe;\r\n        if(!recipe)\r\n            return edges;\r\n\r\n        const flows = outbound ? recipe.output : recipe.input;\r\n        for(const flow of flows) {\r\n            const links = flow.links;\r\n            for(const link of links) {\r\n                //output recipe is connected to input of linked recipe\r\n                const otherFlow = outbound ? link.input : link.output;\r\n                if(otherFlow?.ownerItem) {\r\n                    const otherVertex = this.mapVertex(otherFlow.ownerItem);\r\n                    const inputVertex = outbound ? otherVertex : vertex;\r\n                    const outputVertex = outbound ? vertex : otherVertex;\r\n                    edges.push(new GraphEdge(link, inputVertex, outputVertex));\r\n                }\r\n            }\r\n        }\r\n        return edges;\r\n    }\r\n    //https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\r\n    private strongconnect(vertex: GraphVertex) {\r\n        const index = this.index++;\r\n        vertex.index = index;\r\n        vertex.lowlink = index;\r\n        this.stack.push(vertex);\r\n        vertex.onStack = true;\r\n\r\n        const lowerEdges = this.findEdges(vertex, true);\r\n        for(const edge of lowerEdges) {\r\n            const lowerVertex = edge.inputVertex;\r\n            if(lowerVertex.index === undefined) {\r\n                // Successor w has not yet been visited; recurse on it\r\n                this.strongconnect(lowerVertex);\r\n                vertex.lowlink = Math.min(vertex.lowlink, lowerVertex.lowlink);\r\n            } else if(lowerVertex.onStack) {\r\n                // Successor w is in stack S and hence in the current SCC\r\n                // If w is not on stack, then (v, w) is an edge pointing to an SCC already found and must be ignored\r\n                // Note: The next line may look odd - but is correct.\r\n                // It says w.index not w.lowlink; that is deliberate and from the original paper\r\n                vertex.lowlink = Math.min(vertex.lowlink, lowerVertex.index);\r\n            }\r\n        }\r\n\r\n        // If v is a root node, pop the stack and generate an SCC\r\n        if(vertex.lowlink == vertex.index) {\r\n            //start a new strongly connected component\r\n            const scc: GraphVertex[] = [];\r\n            for(;;) {\r\n                const w = this.stack.pop();\r\n                if(w) {\r\n                    w.onStack = false;\r\n                    scc.push(w);\r\n                }\r\n                if(w === vertex)\r\n                    break;\r\n            }\r\n            this.currentArrayScc.push(scc);\r\n        }\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport type {LinkModel, RecipeIOModel} from '../model/store';\r\nimport type {Connections} from './resolve-connections';\r\nimport {Model, type Variable} from './javascript-lp-solver';\r\n\r\nfunction distributeSimpleFlow(flow: RecipeIOModel[]) {\r\n    for(const io of flow) {\r\n        //should be only one link\r\n        const _links = io.links;\r\n        for(const link of _links) {\r\n            link.setFlow(io.cpsSolvedTotal);\r\n        }\r\n    }\r\n}\r\n\r\nfunction distributeComplexFlow(flow: RecipeIOModel[], links: LinkModel[], precision?: number) {\r\n    //use linear algebra again to find distribuion of complex flow\r\n    //each link is variable, each io is condition\r\n    const model = new Model(precision || .001).maximize();\r\n    const variables = new Map<string, Variable>();\r\n    for(const link of links) {\r\n        const variable = model.addVariable(1, link.key);\r\n        variables.set(link.key, variable);\r\n    }\r\n    for(const io of flow) {\r\n        const constraint = model.equal(io.cpsSolvedTotal || 0);\r\n        const _links = io.links;\r\n        for(const link of _links) {\r\n            const variable = variables.get(link.key);\r\n            if(!variable)\r\n                continue;\r\n            constraint.addTerm(1, variable);\r\n        }\r\n    }\r\n    model.solve();\r\n    for(const link of links) {\r\n        const variable = variables.get(link.key);\r\n        if(!variable)\r\n            continue;\r\n        link.setFlow(variable.value);\r\n    }\r\n}\r\n\r\n//solves flow on each individual link\r\nexport function distributeLinksFlow(connections: Connections, precision?: number) {\r\n    for(const connection of connections) {\r\n        //simplest cases - one to one, one to many, many to one\r\n        //we just distribute flow between one and many\r\n        if(connection.inputs.length == 1) {\r\n            distributeSimpleFlow(connection.outputs);\r\n        } else if(connection.outputs.length == 1) {\r\n            distributeSimpleFlow(connection.inputs);\r\n        } else {\r\n            //many to many\r\n            distributeComplexFlow(connection.connections, connection.links, precision);\r\n        }\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {BlueprintItemModel, LinkModel, RecipeIOModel} from '../model/store';\r\n\r\nexport type ConnectedItems = {\r\n    connections: RecipeIOModel[];\r\n    inputs: RecipeIOModel[];\r\n    outputs: RecipeIOModel[];\r\n    links: LinkModel[];\r\n};\r\nexport type Connections = ConnectedItems[];\r\n\r\nfunction grabAllConnectedLinks(\r\n    item: RecipeIOModel,\r\n    links: Map<string, LinkModel>,\r\n    connectedItems: Map<string, RecipeIOModel>,\r\n    output: boolean,\r\n) {\r\n    for(const link of item.links) {\r\n        if(links.has(link.key))\r\n            continue;\r\n        links.set(link.key, link);\r\n        link.input && connectedItems.set(link.input.key, link.input);\r\n        link.output && connectedItems.set(link.output.key, link.output);\r\n        //add all links from other side\r\n        const otherItem = output ? link.input : link.output;\r\n        if(!otherItem)\r\n            continue;\r\n        grabAllConnectedLinks(otherItem, links, connectedItems, !output);\r\n    }\r\n}\r\n\r\n//takes array of connected factories chain and resolves connections of each factory io\r\nexport function resolveConnections(arrayItems: BlueprintItemModel[]): Connections {\r\n    const resultConnections: Connections = [];\r\n    const processedLinks = new Set<string>();\r\n    for(const item of arrayItems) {\r\n        const recipe = item.selectedRecipe;\r\n        if(!recipe)\r\n            continue;\r\n        const output = recipe.output;\r\n        for(const outItem of output) {\r\n            const links = new Map<string, LinkModel>();\r\n            const connectedItems = new Map<string, RecipeIOModel>();\r\n            grabAllConnectedLinks(outItem, links, connectedItems, true);\r\n            //skip if there is no links\r\n            if(!links.size) {\r\n                continue;\r\n            }\r\n            const linksArray = [...links.values()];\r\n            if(links.size > 1) {\r\n                //if we already processed any link - then we found it through some other item, we must skip\r\n                //this is only may be case of multilink (multiple output to single input)\r\n                const linksPorcessed = linksArray.some((l) => {\r\n                    const has = processedLinks.has(l.key);\r\n                    processedLinks.add(l.key);\r\n                    return has;\r\n                });\r\n                if(linksPorcessed)\r\n                    continue;\r\n            }\r\n            const connections = [...connectedItems.values()];\r\n            const {inputs, outputs} = connections.reduce(\r\n                (acc: {inputs: RecipeIOModel[]; outputs: RecipeIOModel[]}, connectedItem) => {\r\n                    if(connectedItem.isInput) {\r\n                        acc.inputs.push(connectedItem);\r\n                    } else {\r\n                        acc.outputs.push(connectedItem);\r\n                    }\r\n                    return acc;\r\n                },\r\n                {inputs: [], outputs: []},\r\n            );\r\n            resultConnections.push({\r\n                connections,\r\n                inputs,\r\n                outputs,\r\n                links: linksArray,\r\n            });\r\n        }\r\n    }\r\n    return resultConnections;\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GraphLabel} from 'dagre';\r\nimport {checkAborted} from '../util';\r\nimport type {AutoLayoutGraph} from './graph-auto-layout';\r\nimport {resolveConnections} from './resolve-connections';\r\n\r\nexport const autoLayoutGraphDagre: AutoLayoutGraph = async(blueprint, layoutOptions, signal) => {\r\n    const dagre = (await import('dagre')).default;\r\n    checkAborted(signal);\r\n\r\n    const dagreLayoutOptions: GraphLabel = {\r\n        rankdir: 'LR',\r\n        ...(layoutOptions?.nodeSpacing ? {\r\n            nodesep: layoutOptions.nodeSpacing,\r\n        } : {}),\r\n        ...(layoutOptions?.connectedNodeSpacing ? {\r\n            ranksep: layoutOptions.connectedNodeSpacing,\r\n        } : {}),\r\n        ...((layoutOptions?.edgeSpacing || layoutOptions?.edgeWidth) ? {\r\n            edgesep: (layoutOptions?.edgeSpacing || 0) + (layoutOptions?.edgeWidth || 0),\r\n        } : {}),\r\n        ...(layoutOptions?.algorithms ? {\r\n            ranker: layoutOptions?.algorithms,\r\n        } : {}),\r\n    };\r\n\r\n    const g = new dagre.graphlib.Graph();\r\n    g.setGraph(dagreLayoutOptions);\r\n    g.setDefaultEdgeLabel(function() { return {}; });\r\n\r\n    const items = [...blueprint.items];\r\n    for(const item of items) {\r\n        const rect = item.rect;\r\n        g.setNode(item.key, {\r\n            width: rect.width,\r\n            height: rect.height,\r\n        });\r\n    }\r\n\r\n    const connections = resolveConnections(items);\r\n    for(const connection of connections) {\r\n        for(const link of connection.links) {\r\n            if(link.input?.ownerItem && link.output?.ownerItem) {\r\n                g.setEdge(link.output.ownerItem.key, link.input.ownerItem.key);\r\n            }\r\n        }\r\n    }\r\n\r\n    dagre.layout(g);\r\n\r\n    for(const nodeId of g.nodes()) {\r\n        const node = g.node(nodeId);\r\n        const item = blueprint.itemByKey(nodeId);\r\n        if(node && item) {\r\n            item.setRect(item.rect.assign({x: node.x, y: node.y}));\r\n        }\r\n    }\r\n    blueprint.layoutChanged();\r\n};\r\n\r\nexport const knownLayoutAlgorithmsDagre = () => {\r\n    return {\r\n        algorithms: [\r\n            'network-simplex',\r\n            'tight-tree',\r\n            'longest-path',\r\n        ],\r\n        default: 'network-simplex',\r\n    };\r\n};\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {ELKConstructorArguments, ElkExtendedEdge, ElkNode, ElkPort} from 'elkjs';\r\nimport {checkAborted} from '../util';\r\nimport type {AutoLayoutGraph} from './graph-auto-layout';\r\nimport {resolveConnections} from './resolve-connections';\r\n\r\n\r\nexport const knownLayoutAlgorithmsElk = () => {\r\n    return {\r\n        algorithms: [\r\n            'disco',\r\n            'force',\r\n            'layered',\r\n            'mrtree',\r\n            'radial',\r\n            'sporeCompaction',\r\n            'sporeOverlap',\r\n            'stress',\r\n        ],\r\n        default: 'layered',\r\n    };\r\n};\r\n\r\nexport const autoLayoutGraphElk: AutoLayoutGraph = async(blueprint, layoutOptions, signal) => {\r\n    const ELK = (await import('elkjs/lib/elk.bundled.js')).default;\r\n    checkAborted(signal);\r\n\r\n    const args: ELKConstructorArguments = {\r\n        algorithms: knownLayoutAlgorithmsElk().algorithms,\r\n    };\r\n    const elk = new ELK(args);\r\n    const items = [...blueprint.items];\r\n    const nodes: ElkNode[] = [];\r\n    for(const item of items) {\r\n        const rect = item.rect;\r\n        const ports: ElkPort[] = [];\r\n        for(const io of (item.selectedRecipe?.items || [])) {\r\n            if(io.isHidden) {\r\n                continue;\r\n            }\r\n            const iorect = io.rect;\r\n            //port coordinates are relative to parent\r\n            const relativeRect = iorect.offsetBy(rect, -1);\r\n            const isLeftSide = item.isFlipped ? !io.isInput : io.isInput;\r\n            ports.push({\r\n                id: io.key,\r\n                x: relativeRect.x,\r\n                y: relativeRect.y,\r\n                width: relativeRect.width,\r\n                height: relativeRect.height,\r\n                layoutOptions: {\r\n                    'org.eclipse.elk.portConstraints': 'FIXED_SIDE',\r\n                    'org.eclipse.elk.port.side': isLeftSide ? 'WEST' : 'EAST',\r\n                },\r\n            });\r\n        }\r\n        nodes.push({\r\n            id: item.key,\r\n            x: rect.x,\r\n            y: rect.y,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            ports,\r\n            layoutOptions: {\r\n                'org.eclipse.elk.direction': item.isFlipped ? 'LEFT' : 'RIGHT',\r\n            },\r\n        });\r\n    }\r\n\r\n    const edges: ElkExtendedEdge[] = [];\r\n    const connections = resolveConnections(items);\r\n    for(const connection of connections) {\r\n        for(const link of connection.links) {\r\n            if(link.input?.ownerItem && link.output?.ownerItem) {\r\n                edges.push({\r\n                    id: link.key,\r\n                    sources: [link.output.key],\r\n                    targets: [link.input.key],\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    const knownLayoutOptions = await elk.knownLayoutOptions();\r\n    console.log(knownLayoutOptions);\r\n    const knownLayoutAlgorithms = await elk.knownLayoutAlgorithms();\r\n    console.log(knownLayoutAlgorithms);\r\n    */\r\n\r\n    let rootElement: ElkNode = {\r\n        id: 'root',\r\n        children: nodes,\r\n        edges,\r\n    };\r\n    //forceNodeModelOrder\r\n    //aspectRatio\r\n    //nodeFlexibility\r\n    //adaptPortPositions\r\n    //edgeRouting\r\n    const elkLayoutOptions = {\r\n        ...layoutOptions?.customOptions,\r\n        ...(layoutOptions?.nodeSpacing ? {\r\n            'org.eclipse.elk.spacing.nodeNode': String(layoutOptions.nodeSpacing),\r\n        } : {}),\r\n        ...(layoutOptions?.connectedNodeSpacing ? {\r\n            'org.eclipse.elk.spacing.componentComponent': String(layoutOptions.connectedNodeSpacing),\r\n            'org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers': String(layoutOptions.connectedNodeSpacing),\r\n        } : {}),\r\n        ...(layoutOptions?.edgeSpacing ? {\r\n            'org.eclipse.elk.spacing.edgeEdge': String(layoutOptions.edgeSpacing),\r\n        } : {}),\r\n        ...(layoutOptions?.edgeWidth ? {\r\n            'org.eclipse.elk.edge.thickness': String(layoutOptions.edgeWidth),\r\n        } : {}),\r\n        'org.eclipse.elk.edgeRouting': 'SPLINES',\r\n    };\r\n\r\n    let algorithms: (string | undefined)[] = [];\r\n    if(layoutOptions?.algorithms) {\r\n        algorithms = layoutOptions.algorithms.split(/[\\s,;]+/).filter((s) => s);\r\n    }\r\n    if(!algorithms.length) {\r\n        algorithms = [undefined];\r\n    }\r\n\r\n    for(const algorithm of algorithms) {\r\n        const currentLayoutOptions = {\r\n            ...elkLayoutOptions,\r\n            ...(algorithm ? {\r\n                'elk.algorithm': algorithm,\r\n            } : {}),\r\n        };\r\n        rootElement = await elk.layout(rootElement, {layoutOptions: currentLayoutOptions});\r\n        checkAborted(signal);\r\n    }\r\n\r\n    for(const node of (rootElement.children || [])) {\r\n        const item = blueprint.itemByKey(node.id);\r\n        if(item) {\r\n            item.setRect(item.rect.assign({x: node.x, y: node.y}));\r\n        }\r\n        const ports = node.ports;\r\n        const recipe = item?.selectedRecipe;\r\n        if(ports && recipe) {\r\n            ports.sort((a, b) => (a.y ?? 0) - (b.y ?? 0));\r\n            const visibleIoPriority = ports.map((port) => port.id);\r\n            recipe.batchSwapIo(visibleIoPriority);\r\n        }\r\n    }\r\n    blueprint.layoutChanged();\r\n};\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport type {BlueprintModel} from '../model/store';\r\nimport {autoLayoutGraphDagre, knownLayoutAlgorithmsDagre} from './graph-auto-layout-dagre';\r\nimport {autoLayoutGraphElk, knownLayoutAlgorithmsElk} from './graph-auto-layout-elk';\r\n\r\nexport interface CommonLayoutOptions {\r\n    nodeSpacing?: number;\r\n    connectedNodeSpacing?: number;\r\n    edgeWidth?: number;\r\n    edgeSpacing?: number;\r\n    algorithms?: string;\r\n    customOptions?: {\r\n        [key: string]: unknown;\r\n    };\r\n}\r\n\r\nexport type AutoLayoutGraph = (blueprint: BlueprintModel, layoutOptions?: CommonLayoutOptions, signal?: AbortSignal) => Promise<void>;\r\n\r\nexport enum LayoutType {\r\n    DAGRE = 'DAGRE',\r\n    ELK = 'ELK',\r\n}\r\n\r\nexport function layoutFactory(layoutType: LayoutType): Promise<AutoLayoutGraph> {\r\n    switch(layoutType) {\r\n        case LayoutType.DAGRE:\r\n            return Promise.resolve(autoLayoutGraphDagre);\r\n        case LayoutType.ELK:\r\n            return Promise.resolve(autoLayoutGraphElk);\r\n    }\r\n    return Promise.reject(new Error(`Unknown layout type: ${layoutType}`));\r\n}\r\n\r\nexport function knownLayoutAlgorithms(layoutType: LayoutType) {\r\n    switch(layoutType) {\r\n        case LayoutType.DAGRE:\r\n            return knownLayoutAlgorithmsDagre();\r\n        case LayoutType.ELK:\r\n            return knownLayoutAlgorithmsElk();\r\n    }\r\n    throw new Error(`Unknown layout type: ${layoutType}`);\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {BlueprintItemModel, BlueprintModel} from '../model/store';\r\nimport {GraphSolver} from './graph-solver';\r\nimport {TarjanGraphWalker} from './graph-walker';\r\nimport {distributeLinksFlow} from './link-solver';\r\nimport {resolveConnections} from './resolve-connections';\r\n\r\nfunction markCycle(arrayCycle: BlueprintItemModel[], partOfCycle: boolean) {\r\n    for(const item of arrayCycle) {\r\n        item.partOfCycle = partOfCycle;\r\n    }\r\n    return partOfCycle;\r\n}\r\n\r\nexport function resetOrSolveGraph(blueprint: BlueprintModel, items: IterableIterator<BlueprintItemModel>, solve: boolean, precision?: number) {\r\n    let blueprintHasCycles = false;\r\n    const arraySeparateGraphs = new TarjanGraphWalker().walkGraph(items);\r\n\r\n    for(const arrayScc of arraySeparateGraphs) {\r\n        let hasCycles = false;\r\n        for(const scc of arrayScc) {\r\n            hasCycles ||= markCycle(scc, (scc.length > 1));\r\n        }\r\n        if(hasCycles) {\r\n            blueprintHasCycles = true;\r\n        }\r\n        //DAG = directed acyclic graph (maybe cycles)\r\n        const arrayDag: BlueprintItemModel[] = arrayScc.flat();\r\n        const connections = resolveConnections(arrayDag);\r\n        if(solve) {\r\n            new GraphSolver(precision).solve(arrayDag, connections);\r\n            distributeLinksFlow(connections, precision);\r\n        } else {\r\n            for(const item of arrayDag) {\r\n                item.setSolvedCount(undefined);\r\n                item.resetSolutionStatus();\r\n            }\r\n        }\r\n    }\r\n    blueprint.hasCycles = blueprintHasCycles;\r\n}\r\n\r\nexport {LayoutType, layoutFactory, knownLayoutAlgorithms, type CommonLayoutOptions} from './graph-auto-layout';\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {BlueprintItemModelImpl} from './blueprint-item';\r\nimport {LinkModelImpl} from './link';\r\nimport type {SavedBlueprint} from './saved-blueprint';\r\nimport {\r\n    calculateItemPositions,\r\n    normalizeItemPositions,\r\n    type BlueprintItemModel,\r\n    type LinkModel,\r\n    type RecipeIOModel,\r\n} from './store';\r\nimport {resetKeyStore} from './key-store';\r\nimport {resetOrSolveGraph} from '../graph';\r\nimport {useDebounceFn} from '@vueuse/core';\r\nimport {DEFAULT_PRECISION} from '../types';\r\nimport type {ErrorCollector} from '../error-collector';\r\nimport type {GameData} from '../data';\r\n\r\nexport class BlueprintModelImpl {\r\n    private readonly _gameData: GameData;\r\n    private readonly _items = new Map<string, BlueprintItemModel>();\r\n    private readonly _links = new Map<string, LinkModel>();\r\n    private _tempLink?: LinkModel = undefined;\r\n    public hasCycles = false;\r\n    private _solvePrecision = DEFAULT_PRECISION;\r\n    private _autoSolveGraph = true;\r\n    private _bulkUpdate = false;\r\n    //could be used by vue to watch items added/removed\r\n    private _itemsGenerationNumber = 0;\r\n    private _summaryGenerationNumber = 0;\r\n    private readonly _lockedTransport = new Map<string, string>();\r\n    private _isUpgradeMode = false;\r\n\r\n    public blueprintName = '';\r\n    getDefaultBlueprintName() {\r\n        return `${this._gameData.gameDescription.description} New Blueprint`;\r\n    }\r\n    resetBlueprintName() {\r\n        this.blueprintName = this.getDefaultBlueprintName();\r\n    }\r\n\r\n    constructor(_gameData: GameData) {\r\n        this._gameData = _gameData;\r\n        this.resetBlueprintName();\r\n    }\r\n\r\n    get gameData() { return this._gameData; }\r\n    get items() { return this._items.values(); }\r\n    itemByKey(key: string) { return this._items.get(key); }\r\n    get links() { return this._links.values(); }\r\n    get tempLink() { return this._tempLink; }\r\n    get itemsGenerationNumber() { return this._itemsGenerationNumber; }\r\n    get summaryGenerationNumber() { return this._summaryGenerationNumber; }\r\n    get isUpgradeMode() { return this._isUpgradeMode; }\r\n    setUpgradeMode(isUpgradeMode: boolean) { this._isUpgradeMode = isUpgradeMode; }\r\n\r\n    get solvePrecision() { return this._solvePrecision; }\r\n    set solvePrecision(solvePrecision: number) { this._solvePrecision = solvePrecision; this._$graphChanged(true); }\r\n    get autoSolveGraph() { return this._autoSolveGraph; }\r\n    set autoSolveGraph(autoSolveGraph: boolean) {\r\n        this._autoSolveGraph = autoSolveGraph;\r\n        if(autoSolveGraph) {\r\n            this._$graphChanged(true);\r\n        }\r\n    }\r\n\r\n    layoutChanged() {\r\n        this._itemsGenerationNumber++;\r\n    }\r\n    applyCalculatedFactoryCount(rouunder: (count: number) => number) {\r\n        this._bulkUpdate = true;\r\n        try {\r\n            for(const item of this._items.values()) {\r\n                const count = item.count;\r\n                const solvedCount = item.solvedCount;\r\n                if(solvedCount !== undefined) {\r\n                    const setCount = rouunder(solvedCount);\r\n                    if(setCount !== count) {\r\n                        item.setCount(setCount);\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this._bulkUpdate = false;\r\n        }\r\n        this._$graphChanged(true);\r\n    }\r\n\r\n    getLockedTransport(logisticName: string) { return this._lockedTransport.get(logisticName); }\r\n    lockTransport(logisticName: string, transportName: string | undefined) {\r\n        if(!transportName) {\r\n            this._lockedTransport.delete(logisticName);\r\n        } else {\r\n            this._lockedTransport.set(logisticName, transportName);\r\n        }\r\n    }\r\n\r\n    //types are compatible, just don't use instanceof\r\n    //ReactiveBlueprintItemModel, ReactiveLinkModel are too complex and too mess to implement\r\n    addItem(name: string) {\r\n        const item = new BlueprintItemModelImpl(this, name);\r\n        //invalid item\r\n        if(!item.name)\r\n            return item;\r\n        this._items.set(item.key, item);\r\n        this._$graphChanged(false, item);\r\n        return item;\r\n    }\r\n    _$itemInitializationCompleted(item: BlueprintItemModel) {\r\n        this._itemsGenerationNumber++;\r\n    }\r\n    _$deleteItem(item: BlueprintItemModel) {\r\n        //if it is not linked to anything, it will not change graph\r\n        //if it linked - _$deleteLink will cause graph update\r\n        this._items.delete(item.key);\r\n        this._itemsGenerationNumber++;\r\n        this._summaryGenerationNumber++;\r\n    }\r\n    _$addLink(...io: RecipeIOModel[]) {\r\n        const link = BlueprintModelImpl.newLink(io, false);\r\n        this._links.set(link.key, link);\r\n        link._$applyPersistentLink();\r\n        this._$graphChanged(false, ...io.map((i) => i.ownerItem));\r\n        return link;\r\n    }\r\n    _$deleteLink(link: LinkModel) {\r\n        if(!this._links.delete(link.key))\r\n            return;\r\n        link._$deletePersistentLink();\r\n        this._$graphChanged(false, link.input?.ownerItem, link.output?.ownerItem);\r\n    }\r\n    _$createTempLink(...io: RecipeIOModel[]) {\r\n        if(this._tempLink) {\r\n            throw new Error('Already have temp link');\r\n        }\r\n        const link = BlueprintModelImpl.newLink(io, true);\r\n        this._tempLink = link;\r\n        return link;\r\n    }\r\n    clearTempLink() {\r\n        this._tempLink = undefined;\r\n    }\r\n    private static newLink(io: RecipeIOModel[], isTemporary: boolean) {\r\n        if(io.length > 2)\r\n            throw new Error(`Expected 2 elements, got ${io.length}`);\r\n        const _io: {input?: RecipeIOModel; output?: RecipeIOModel} = {\r\n            input: undefined,\r\n            output: undefined,\r\n        };\r\n        for(const i of io) {\r\n            const target: keyof(typeof _io) = i.isInput ? 'input' : 'output';\r\n            if(_io[target])\r\n                throw new Error('Expecting 1 input and 1 output, got duplicates');\r\n            _io[target] = i;\r\n        }\r\n        return new LinkModelImpl(_io.input, _io.output, isTemporary);\r\n    }\r\n\r\n    clear() {\r\n        this._clear();\r\n        this._itemsGenerationNumber++;\r\n        this._summaryGenerationNumber++;\r\n    }\r\n    private _clear() {\r\n        resetKeyStore();\r\n        this._items.clear();\r\n        this._links.clear();\r\n        this.hasCycles = false;\r\n        this.resetBlueprintName();\r\n    }\r\n    save() {\r\n        //normalize positions before saving\r\n        const {minItemXY} = calculateItemPositions(this.items);\r\n        const offsetBy = minItemXY.scalePoint(-1);\r\n\r\n        const items = [...this._items.values()];\r\n        const links = [...this._links.values()];\r\n        const itemIndexes = new Map(items.map((item, index) => [item.key, index]));\r\n        const savedBlueprint: SavedBlueprint = {\r\n            i: items.map((item) => item._$save(offsetBy)),\r\n            l: links.map((link) => link._$save(\r\n                itemIndexes.get(link.input?.ownerItem?.key || ''),\r\n                itemIndexes.get(link.output?.ownerItem?.key || ''),\r\n            )),\r\n        };\r\n        const description = this._gameData.gameDescription;\r\n        savedBlueprint.h = {\r\n            g: description.shortName,\r\n            v: description.saveVersion,\r\n        };\r\n        return savedBlueprint;\r\n    }\r\n    load(savedBlueprint: SavedBlueprint, errorCollector: ErrorCollector) {\r\n        this._bulkUpdate = true;\r\n        try {\r\n            this._clear();\r\n            this._load(savedBlueprint, errorCollector);\r\n        } catch(err) {\r\n            errorCollector.collectError(err);\r\n        } finally {\r\n            this._bulkUpdate = false;\r\n        }\r\n        this._$graphChanged(true);\r\n        this._itemsGenerationNumber = 0;\r\n    }\r\n    private _load(savedBlueprint: SavedBlueprint, errorCollector: ErrorCollector) {\r\n        const {compatibleSaveVersions: compatVersions} = this._gameData.gameDescription;\r\n        if(savedBlueprint.h?.v && !compatVersions.some((v) => (v == savedBlueprint.h?.v))) {\r\n            errorCollector.collectError(`Incompatible game version, expecting \"${compatVersions.join(',')}\", got \"${savedBlueprint.h?.v}\"`);\r\n        }\r\n        const itemIndexes = new Map<number, string>();\r\n        savedBlueprint.i.forEach((i, index) => {\r\n            const item = this.addItem(i.n);\r\n            if(!item.name) {\r\n                //invalid item, old/broken recipe\r\n                errorCollector.collectError(`Invalid item id \"${i.n}\"`);\r\n                return;\r\n            }\r\n            item._$loadItem(i, errorCollector);\r\n            itemIndexes.set(index, item.key);\r\n        });\r\n        savedBlueprint.l.forEach((link) => {\r\n            //first array item is always input, second is always output\r\n            //the order is important, because we may connect for example generator to electric engine\r\n            //in this case we may connect by either end\r\n            //generator output to electric engine\r\n            //or electric engine output to generator\r\n            //which end is connected is determined by io order\r\n            const inputKey = itemIndexes.get(link.l[0]);\r\n            const outputKey = itemIndexes.get(link.l[1]);\r\n            if(!inputKey || !outputKey) {\r\n                //broken link\r\n                errorCollector.collectError(`Invalid link \"${link.l[0]}\" => \"${link.l[1]}\"`);\r\n                return;\r\n            }\r\n            const input = this.itemByKey(inputKey);\r\n            const output = this.itemByKey(outputKey);\r\n            if(!input || !output) {\r\n                return;\r\n            }\r\n            const loadedLink = input._$loadLink(link, output, errorCollector);\r\n            if(loadedLink) {\r\n                loadedLink._$load(link, errorCollector);\r\n            }\r\n        });\r\n        normalizeItemPositions(this.items);\r\n        this.resetBlueprintName();\r\n    }\r\n\r\n    private readonly _dirtyItems = new Set<BlueprintItemModel>();\r\n    private _calculateAll = false;\r\n    solveGraph(manualExecution: boolean) {\r\n        let dirtyItems: BlueprintItemModel[] = [...this._items.values()];\r\n        if(!manualExecution && !this._calculateAll) {\r\n            //filter, because may be already deleted\r\n            dirtyItems = [...this._dirtyItems].filter((item) => this._items.has(item.key));\r\n        }\r\n        this._dirtyItems.clear();\r\n        this._calculateAll = false;\r\n        if(!dirtyItems.length) {\r\n            return;\r\n        }\r\n\r\n        const mustSolve = manualExecution || this._autoSolveGraph;\r\n        //if we just need to reset, and all dirty items are already reset, do nothing\r\n        if(!mustSolve && dirtyItems.every((item) => (item.solvedCount === undefined))) {\r\n            return;\r\n        }\r\n\r\n        const _bulkUpdate = this._bulkUpdate;\r\n        this._bulkUpdate = true;\r\n        try {\r\n            resetOrSolveGraph(this, dirtyItems.values(), mustSolve, this._solvePrecision);\r\n        } finally {\r\n            this._bulkUpdate = _bulkUpdate;\r\n        }\r\n        this._summaryGenerationNumber++;\r\n    }\r\n\r\n    private debouncedSolve: (() => void) | undefined = undefined;\r\n    _$graphChanged(immediate?: boolean, ...items: (BlueprintItemModel | undefined)[]) {\r\n        if(this._bulkUpdate) {\r\n            return;\r\n        }\r\n\r\n        //no items = update all\r\n        if(items && items.length) {\r\n            let haveItems = false;\r\n            for(const item of items) {\r\n                if(item) {\r\n                    this._dirtyItems.add(item);\r\n                    haveItems = true;\r\n                }\r\n            }\r\n            if(!haveItems) {\r\n                //array of undefined\r\n                return;\r\n            }\r\n        } else {\r\n            this._calculateAll = true;\r\n        }\r\n\r\n        if(immediate) {\r\n            this.solveGraph(false);\r\n        } else {\r\n            if(!this.debouncedSolve) {\r\n                //lazy initialize, because 'this' may be proxy in vue environment\r\n                this.debouncedSolve = useDebounceFn(() => {\r\n                    this.solveGraph(false);\r\n                }, 200, {maxWait: 1000});\r\n            }\r\n\r\n            this.debouncedSolve();\r\n        }\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {Point} from '../geometry';\r\nimport type {BlueprintItemModel} from './store';\r\n\r\nexport function calculateItemPositions(items: IterableIterator<BlueprintItemModel> | BlueprintItemModel[]) {\r\n    type MinMax = Record<'minX' | 'minY' | 'maxX' | 'maxY', number | undefined>;\r\n    const _items = Array.isArray(items) ? items : [...items];\r\n    const {minX, minY, maxX, maxY} = _items.reduce((minmax: MinMax, {rect}) => ({\r\n        minX: (minmax.minX !== undefined) ? Math.min(rect.x, minmax.minX) : rect.x,\r\n        minY: (minmax.minY !== undefined) ? Math.min(rect.y, minmax.minY) : rect.y,\r\n        maxX: (minmax.maxX !== undefined) ? Math.max(rect.x1, minmax.maxX) : rect.x1,\r\n        maxY: (minmax.maxY !== undefined) ? Math.max(rect.y1, minmax.maxY) : rect.y1,\r\n    }), {} as MinMax);\r\n    const minItemXY = Point.assign({x: minX, y: minY});\r\n    const maxItemXY = Point.assign({x: maxX, y: maxY});\r\n\r\n    return {\r\n        minItemXY,\r\n        maxItemXY,\r\n    };\r\n}\r\n\r\nexport function normalizeItemPositions(items: IterableIterator<BlueprintItemModel>) {\r\n    const _items = [...items];\r\n    const {minItemXY} = calculateItemPositions(_items);\r\n\r\n    //normalize minimum offset of item to 0 px\r\n    //new saves will always be normalized, old ones need to be normalized for nicer first display\r\n    if((minItemXY.x == 0) && (minItemXY.y == 0)) {\r\n        //already normalized\r\n        return;\r\n    }\r\n\r\n    const offsetBy = minItemXY.scalePoint(-1);\r\n    for(const item of _items) {\r\n        item.setRect(item.rect.offsetBy(offsetBy));\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {GameItemType} from '#types/constants';\r\nimport type {GameItem} from '#types/game-data';\r\nimport type {BlueprintModel} from './store';\r\n\r\nexport enum SummaryType {\r\n    Input = 1,\r\n    Output,\r\n    Cost,\r\n}\r\n\r\nexport type SummaryItem = {\r\n    item: GameItem;\r\n    totalCountPerSecond: number;\r\n};\r\n\r\nexport type SummaryTotal = {\r\n    items: SummaryItem[];\r\n    type: GameItemType;\r\n    sampleItem: GameItem;\r\n    totalCountPerSecond: number;\r\n};\r\n\r\nexport type SummaryIoTotal = {\r\n    summaryType: SummaryType;\r\n    totals: SummaryTotal[];\r\n};\r\n\r\nexport type SummaryTotals = SummaryIoTotal[];\r\n\r\ntype SummaryItemMap = Map<string, SummaryItem>;\r\ntype SummaryTempMap = Map<GameItemType, SummaryItemMap>;\r\n\r\nexport function calculateSummary(model: BlueprintModel) {\r\n    const gameData = model.gameData;\r\n    const inputByType: SummaryTempMap = new Map();\r\n    const outputByType: SummaryTempMap = new Map();\r\n    const costByItem: SummaryItemMap = new Map();\r\n    for(const blueprintItem of model.items) {\r\n        for(const io of blueprintItem.selectedRecipe?.items || []) {\r\n            if(io.linksCount) {\r\n                //summary only takes open ends into account\r\n                continue;\r\n            }\r\n            if(io.isAbstractClassItem && !io.isMatherialized) {\r\n                //summary only takes real items\r\n                continue;\r\n            }\r\n            const cpsTotal = io.cpsSolvedTotal;\r\n            if(!cpsTotal) {\r\n                continue;\r\n            }\r\n            const ioByType = io.isInput ? inputByType : outputByType;\r\n            const ioType = io.type ?? GameItemType.Unknown;\r\n            let ioByItem = ioByType.get(ioType);\r\n            if(!ioByItem) {\r\n                ioByItem = new Map();\r\n                ioByType.set(ioType, ioByItem);\r\n            }\r\n\r\n            let summary = ioByItem.get(io.name || '');\r\n            if(io.name && !summary) {\r\n                const item = gameData.getGameItem(io.name);\r\n                if(item) {\r\n                    summary = {\r\n                        item,\r\n                        totalCountPerSecond: 0,\r\n                    };\r\n                    ioByItem.set(io.name, summary);\r\n                }\r\n            }\r\n            if(summary) {\r\n                summary.totalCountPerSecond += cpsTotal;\r\n            }\r\n        }\r\n\r\n        if(blueprintItem.cost) {\r\n            for(const cost of blueprintItem.cost) {\r\n                let summary = costByItem.get(cost.name);\r\n                if(!summary) {\r\n                    const item = gameData.getGameItem(cost.name);\r\n                    if(item) {\r\n                        summary = {\r\n                            item,\r\n                            totalCountPerSecond: 0,\r\n                        };\r\n                        costByItem.set(cost.name, summary);\r\n                    }\r\n                }\r\n                if(summary) {\r\n                    summary.totalCountPerSecond += cost.count;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const costByType: SummaryTempMap = new Map(costByItem.size ? [[GameItemType.Unknown, costByItem]] : []);\r\n\r\n    //sorted map\r\n    const summaryResult: SummaryTotals = [];\r\n    for(const {io: ioByType, summaryType} of [\r\n        {io: inputByType, summaryType: SummaryType.Input},\r\n        {io: outputByType, summaryType: SummaryType.Output},\r\n        {io: costByType, summaryType: SummaryType.Cost},\r\n    ]) {\r\n        if(!ioByType.size) {\r\n            continue;\r\n        }\r\n\r\n        const totals: SummaryTotal[] = [];\r\n        for(const [ioType, ioByItem] of ioByType) {\r\n            const items: SummaryItem[] = [];\r\n            let sampleItem: GameItem | undefined;\r\n            let totalCountPerSecond = 0;\r\n            for(const summary of ioByItem.values()) {\r\n                items.push(summary);\r\n                if(sampleItem === undefined) {\r\n                    sampleItem = summary.item;\r\n                }\r\n                totalCountPerSecond += summary.totalCountPerSecond;\r\n            }\r\n            if(!items.length || (sampleItem === undefined)) {\r\n                continue;\r\n            }\r\n            items.sort((a, b) => a.item.order - b.item.order);\r\n            totals.push({\r\n                items,\r\n                type: ioType,\r\n                sampleItem,\r\n                totalCountPerSecond,\r\n            });\r\n        }\r\n\r\n        //from energy to unknown\r\n        totals.sort((a, b) => b.type - a.type);\r\n\r\n        summaryResult.push({\r\n            summaryType,\r\n            totals,\r\n        });\r\n    }\r\n    return summaryResult;\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {BlueprintModelImpl} from './blueprint';\r\nimport type {BlueprintItemModelImpl} from './blueprint-item';\r\nimport type {ItemModelImpl} from './item';\r\nimport type {LinkModelImpl} from './link';\r\nimport type {RecipeIOModelImpl} from './recipe-io';\r\nimport type {RecipeModelImpl} from './recipe';\r\nimport type {LogisticModelImpl, LogisticSetModelImpl, TransportModelImpl} from './logistic';\r\nimport type {InjectionKey} from 'vue';\r\nimport {reactive, inject, provide} from 'vue';\r\nimport type {InterfaceOf} from '../types';\r\nimport type {GameData} from '../data';\r\n\r\nexport type BlueprintItemModel = InterfaceOf<BlueprintItemModelImpl>;\r\nexport type BlueprintModel = InterfaceOf<BlueprintModelImpl>;\r\nexport type ItemModel = InterfaceOf<ItemModelImpl>;\r\nexport type LinkModel = InterfaceOf<LinkModelImpl>;\r\nexport type RecipeIOModel = InterfaceOf<RecipeIOModelImpl>;\r\nexport type RecipeModel = InterfaceOf<RecipeModelImpl>;\r\nexport type TransportModel = InterfaceOf<TransportModelImpl>;\r\nexport type LogisticModel = InterfaceOf<LogisticModelImpl>;\r\nexport type LogisticSetModel = InterfaceOf<LogisticSetModelImpl>;\r\n\r\nexport const BlueprintModelKey = Symbol('BlueprintModel') as InjectionKey<BlueprintModel>;\r\nexport const provideBlueprintModel = (_gameData: GameData): BlueprintModel => {\r\n    const blueprint = reactive(new BlueprintModelImpl(_gameData));\r\n    provide(BlueprintModelKey, blueprint);\r\n    return blueprint;\r\n};\r\nexport const injectBlueprintModel = () => {\r\n    const blueprint = inject(BlueprintModelKey);\r\n    if(!blueprint)\r\n        throw new Error('blueprint not instantiated');\r\n    return blueprint;\r\n};\r\n\r\nexport * from './normalize-item-positions';\r\nexport type {\r\n    SummaryItem,\r\n    SummaryTotal,\r\n    SummaryIoTotal,\r\n    SummaryTotals,\r\n} from './summary';\r\nexport * from './summary';\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {calculateSummary, injectBlueprintModel, SummaryType, type SummaryTotals} from '@/scripts/model/store';\r\nimport {onMounted, shallowRef, unref, watch} from 'vue';\r\nimport {mdiImport, mdiExport, mdiWrench} from '@mdi/js';\r\nimport {GameItemType} from '#types/constants';\r\n\r\nconst blueprintModel = injectBlueprintModel();\r\nconst summary = shallowRef<SummaryTotals>([]);\r\nconst showTotals: Partial<Record<GameItemType, boolean>> = {\r\n    // energy is only interesting type here\r\n    [GameItemType.Energy]: true,\r\n};\r\n\r\nconst summaryTitle: Record<SummaryType, {icon: string; title: string}> = {\r\n    [SummaryType.Input]: {\r\n        icon: mdiImport,\r\n        title: 'Input',\r\n    },\r\n    [SummaryType.Output]: {\r\n        icon: mdiExport,\r\n        title: 'Output',\r\n    },\r\n    [SummaryType.Cost]: {\r\n        icon: mdiWrench,\r\n        title: 'Build Cost',\r\n    },\r\n};\r\n\r\nconst props = defineProps<{\r\n    compact?: boolean;\r\n}>();\r\n\r\nfunction updateSummary() {\r\n    const _summary = calculateSummary(blueprintModel);\r\n    summary.value = _summary;\r\n}\r\n\r\nwatch(() => blueprintModel.summaryGenerationNumber, () => {\r\n    updateSummary();\r\n});\r\nonMounted(() => {\r\n    updateSummary();\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-list :lines=\"undefined\">\r\n        <template v-for=\"{summaryType, totals} in unref(summary)\" :key=\"summaryType\">\r\n            <v-list-item :class=\"props.compact ? 'pl-1' : ''\">\r\n                <template #prepend>\r\n                    <v-icon :icon=\"summaryTitle[summaryType].icon\" color=\"primary\" />\r\n                </template>\r\n                <template #title>\r\n                    <div v-if=\"!props.compact\" class=\"pl-2 text-body-1 text-primary font-weight-bold\">\r\n                        {{ summaryTitle[summaryType].title }}\r\n                    </div>\r\n                </template>\r\n            </v-list-item>\r\n            <v-divider />\r\n            <template v-for=\"total in totals\" :key=\"isInput + '#' + total.type\">\r\n                <template v-for=\"item in total.items\" :key=\"isInput + '#' + total.type + '#' + item.item.name\">\r\n                    <summary-item :item=\"item\" :compact=\"props.compact\" :format=\"summaryType != SummaryType.Cost\" />\r\n                </template>\r\n                <v-divider />\r\n                <template v-if=\"showTotals[total.type] && (total.items.length > 1)\">\r\n                    <summary-total-item :total=\"total\" :compact=\"props.compact\" :format=\"summaryType != SummaryType.Cost\" />\r\n                    <v-divider />\r\n                </template>\r\n            </template>\r\n        </template>\r\n    </v-list>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\n//this v-tooltip is optimized for many tooltip list\r\n//it is created only once for all children, and then watches children to show tooltip\r\n//not so laggy inside debugger, and maybe better in slower browsers\r\n\r\nimport {Point, Rect} from '@/scripts/geometry';\r\nimport {unrefElement, useTimeoutFn} from '@vueuse/core';\r\nimport {nextTick, onMounted, onUnmounted, reactive, ref} from 'vue';\r\n\r\nconst mainElementRef = ref<HTMLElement | undefined>();\r\n\r\nconst tooltipObject: {\r\n    tooltipText: string;\r\n    tooltipElement: Element | null;\r\n    rect: Rect | null;\r\n    text: string;\r\n    activator: Element | string;\r\n    show: boolean;\r\n} = reactive({\r\n    tooltipText: '',\r\n    tooltipElement: null,\r\n    rect: null,\r\n    text: '',\r\n    activator: '',\r\n    show: false,\r\n});\r\n\r\nconst {start: startTooltipTimeout, stop: cancelTooltipTimeout} = useTimeoutFn(() => {\r\n    tooltipObject.text = tooltipObject.tooltipText;\r\n    tooltipObject.activator = tooltipObject.tooltipElement || '';\r\n    nextTick(() => {\r\n        tooltipObject.show = true;\r\n    });\r\n}, 500, {immediate: false});\r\n\r\nfunction cancelTooltip() {\r\n    tooltipObject.tooltipText = '';\r\n    tooltipObject.tooltipElement = null;\r\n    tooltipObject.rect = null;\r\n    tooltipObject.text = '';\r\n    tooltipObject.activator = '';\r\n    tooltipObject.show = false;\r\n    cancelTooltipTimeout();\r\n}\r\n\r\nfunction onPointerMove(evt: PointerEvent) {\r\n    const point = Point.assign({x: evt.clientX, y: evt.clientY});\r\n    if(tooltipObject?.rect?.isPointInRect(point))\r\n        return;\r\n    if(tooltipObject.tooltipElement)\r\n        cancelTooltip();\r\n    const elements = document.elementsFromPoint(evt.clientX, evt.clientY);\r\n    let tooltipText = null;\r\n    const tooltipElement = elements.find((element) => {\r\n        tooltipText = element.getAttribute('data-tooltip');\r\n        return !!tooltipText;\r\n    });\r\n    if(!tooltipElement || !tooltipText)\r\n        return;\r\n    tooltipObject.tooltipText = tooltipText;\r\n    tooltipObject.tooltipElement = tooltipElement;\r\n    tooltipObject.rect = Rect.assign(tooltipElement.getBoundingClientRect());\r\n    startTooltipTimeout();\r\n}\r\n\r\nlet parentElement: HTMLElement | null | undefined;\r\nonMounted(() => {\r\n    const mainElement = unrefElement(mainElementRef);\r\n    parentElement = mainElement?.parentElement;\r\n    parentElement?.addEventListener('pointermove', onPointerMove);\r\n    parentElement?.addEventListener('pointerout', cancelTooltip);\r\n});\r\nonUnmounted(() => {\r\n    parentElement?.removeEventListener('pointermove', onPointerMove);\r\n    parentElement?.removeEventListener('pointerout', cancelTooltip);\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-tooltip\r\n        ref=\"mainElementRef\"\r\n        v-model=\"tooltipObject.show\"\r\n        :activator=\"tooltipObject.activator\"\r\n        :text=\"tooltipObject.text\"\r\n        location=\"top\"\r\n    >\r\n        <template #activator>\r\n            <slot />\r\n        </template>\r\n    </v-tooltip>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {BlueprintItemModel, RecipeIOModel} from '@/scripts/model/store';\r\nimport {mdiSync, mdiLock, mdiAlert, mdiBullseye, mdiBullseyeArrow, mdiPriorityLow} from '@mdi/js';\r\nimport {formatIo, formatNumber} from '@/scripts/format';\r\nimport {__DEBUG__} from '@/scripts/debug';\r\nimport {computed} from 'vue';\r\nimport {Objective} from '@/scripts/types';\r\n\r\nconst props = defineProps<{\r\n    item: BlueprintItemModel;\r\n}>();\r\n\r\nconst hiddenIo = computed(() => {\r\n    const _recipe = props.item?.selectedRecipe;\r\n    const io = [...(_recipe?.invisibleInput() || []), ...(_recipe?.invisibleOutput() || [])];\r\n    return io;\r\n});\r\nconst objectiveIcon = computed(() => {\r\n    switch(props.item.objective) {\r\n        case Objective.Primary:\r\n            return mdiBullseyeArrow;\r\n        case Objective.Secondary:\r\n            return mdiBullseye;\r\n        case Objective.LowPriority:\r\n            return mdiPriorityLow;\r\n    }\r\n    return '';\r\n});\r\n\r\nfunction hiddenIoTooltip(io: RecipeIOModel) {\r\n    return `${io.label} ${formatIo(io.cpsSolvedTotal, io)}/${formatIo(io.cpsMaxTotal, io)}`;\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"status-row bg-window-statusbar\">\r\n        <div class=\"title-text text-caption\">\r\n            <template v-if=\"props.item.chainContainsError\">\r\n                <v-icon :icon=\"mdiAlert\" color=\"error\" />\r\n            </template>\r\n            <template v-if=\"props.item.isLocked\">\r\n                <v-icon :icon=\"mdiLock\" color=\"info\" />\r\n            </template>\r\n            <template v-if=\"props.item.objective !== undefined\">\r\n                <v-icon :icon=\"objectiveIcon\" color=\"info\" />\r\n            </template>\r\n            <template v-if=\"props.item.partOfCycle\">\r\n                <v-icon :icon=\"mdiSync\" color=\"warning\" />\r\n            </template>\r\n            <template v-if=\"(props.item.solvedCount !== undefined)\">\r\n                {{ (props.item.count ? formatNumber((props.item.solvedCount * 100) / props.item.count) : '0') + '%' }}\r\n                {{ formatNumber(props.item.solvedCount) + ' / ' }}\r\n            </template>\r\n            {{ formatNumber(props.item.count) }}\r\n        </div>\r\n        <div v-if=\"__DEBUG__\" class=\"float-right mr-1 text-caption\">\r\n            {{ props.item.key }}\r\n        </div>\r\n        <div class=\"float-right mr-1 mt-1 d-flex hidden-io\">\r\n            <template v-for=\"io in hiddenIo\" :key=\"io.key\">\r\n                <div class=\"mr-1\">\r\n                    <icon-component :image=\"io.image\" :data-tooltip=\"hiddenIoTooltip(io)\" />\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.status-row {\r\n    display: block;\r\n    position: relative;\r\n    height: 1.2rem;\r\n    overflow: hidden;\r\n}\r\n.hidden-io {\r\n    transform: scale(0.4);\r\n    transform-origin: top right;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {computed} from 'vue';\r\nimport type {BlueprintItemModel} from '@/scripts/model/store';\r\nimport {mdiArrowLeft, mdiArrowRight, mdiPlusThick, mdiMinusThick} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst settings = injectSettings();\r\n\r\nconst props = defineProps<{\r\n    item: BlueprintItemModel;\r\n}>();\r\nconst emit = defineEmits<{\r\n    (e: 'recipes-menu-activate', activator: Element): void;\r\n}>();\r\n\r\nconst isFat = computed(() => {\r\n    const _recipe = props.item?.selectedRecipe;\r\n    return ((_recipe?.visibleInput()?.length || 0) > 1) || ((_recipe?.visibleOutput()?.length || 0) > 1);\r\n});\r\n\r\nconst icon = computed(() => (props.item.isFlipped ? mdiArrowLeft : mdiArrowRight));\r\nfunction flip() {\r\n    // eslint-disable-next-line vue/no-mutating-props\r\n    props.item.isFlipped = !props.item.isFlipped;\r\n}\r\nfunction count(offset: number) {\r\n    props.item.setCount(Math.max(props.item.count + offset, 0));\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"align-self-center d-flex flex-column align-center\" @pointerdown.left.stop @click.stop>\r\n        <v-btn\r\n            v-if=\"isFat && settings.showCountControlsOnWindow\"\r\n            variant=\"tonal\"\r\n            density=\"comfortable\"\r\n            size=\"x-small\"\r\n            @click=\"count(1)\"\r\n        >\r\n            <v-icon class=\"align-self-center\" :icon=\"mdiPlusThick\" />\r\n        </v-btn>\r\n        <div class=\"d-flex flex-row align-center\">\r\n            <v-btn\r\n                v-if=\"!isFat && settings.showCountControlsOnWindow\"\r\n                :icon=\"mdiMinusThick\"\r\n                variant=\"tonal\"\r\n                density=\"comfortable\"\r\n                size=\"x-small\"\r\n                @click=\"count(-1)\"\r\n            />\r\n            <icon-component\r\n                class=\"main-icon-row rounded hover-border\"\r\n                :image=\"props.item?.image\"\r\n                :tooltip=\"props.item?.label\"\r\n                @click=\"emit('recipes-menu-activate', $event.currentTarget)\"\r\n            />\r\n            <v-btn\r\n                v-if=\"!isFat && settings.showCountControlsOnWindow\"\r\n                :icon=\"mdiPlusThick\"\r\n                variant=\"tonal\"\r\n                density=\"comfortable\"\r\n                size=\"x-small\"\r\n                @click=\"count(1)\"\r\n            />\r\n        </div>\r\n        <v-btn\r\n            v-if=\"isFat && settings.showCountControlsOnWindow\"\r\n            class=\"mb-2\"\r\n            variant=\"tonal\"\r\n            density=\"comfortable\"\r\n            size=\"x-small\"\r\n            @click=\"count(-1)\"\r\n        >\r\n            <v-icon class=\"align-self-center\" :icon=\"mdiMinusThick\" />\r\n        </v-btn>\r\n        <v-btn\r\n            variant=\"outlined\"\r\n            rounded=\"pill\"\r\n            size=\"x-small\"\r\n            @click=\"flip\"\r\n        >\r\n            <v-icon class=\"align-self-center\" :icon=\"icon\" />\r\n        </v-btn>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.main-icon-row {\r\n    display: block;\r\n}\r\n</style>\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {Rect, type ReadonlyPointType, type ReadonlyRectType} from '@/scripts/geometry';\r\nimport {unrefElement, type Arrayable, type MaybeComputedElementRef, type MaybeElement} from '@vueuse/core';\r\n\r\nexport function getScrollBox(target: MaybeComputedElementRef<MaybeElement> | undefined) {\r\n    const targetElement = unrefElement(target);\r\n    if(!targetElement)\r\n        return {};\r\n\r\n    let scrollboxElement = targetElement as HTMLElement | null;\r\n    for(;;) {\r\n        scrollboxElement = scrollboxElement?.parentElement || null;\r\n        if(!scrollboxElement)\r\n            break;\r\n        const isScrolling1 = (scrollboxElement.scrollHeight > scrollboxElement.clientHeight)\r\n            || (scrollboxElement.scrollWidth > scrollboxElement.clientWidth)\r\n            || (scrollboxElement.style.overflowX === 'scroll')\r\n            || (scrollboxElement.style.overflowX === 'auto')\r\n            || (scrollboxElement.style.overflowY === 'scroll')\r\n            || (scrollboxElement.style.overflowY === 'auto');\r\n        if(isScrolling1)\r\n            break;\r\n        const computedStyle = getComputedStyle(scrollboxElement);\r\n        const isScrolling2 = (computedStyle.overflowX === 'scroll')\r\n            || (computedStyle.overflowX === 'auto')\r\n            || (computedStyle.overflowY === 'scroll')\r\n            || (computedStyle.overflowY === 'auto');\r\n        if(isScrolling2)\r\n            break;\r\n    }\r\n    return {\r\n        targetElement,\r\n        scrollboxElement,\r\n    };\r\n}\r\n\r\n//two methods\r\n//first one is based on scrollable parent (element may have scrollable parent) - blueprint has\r\n//second one is based on elementsFromPoint - should be universal, maybe slower\r\nexport function isPointInsideElement1(\r\n    target: MaybeComputedElementRef<MaybeElement> | undefined,\r\n    point: ReadonlyPointType,\r\n): boolean {\r\n    if((point.x < 0) || (point.y < 0))\r\n        return false;\r\n\r\n    const {targetElement, scrollboxElement} = getScrollBox(target);\r\n    if(!targetElement)\r\n        return false;\r\n\r\n    const visibleRect = Rect.assign((scrollboxElement || targetElement).getBoundingClientRect());\r\n    return visibleRect.isPointInRect(point);\r\n}\r\n\r\nexport function isPointInsideElement2(\r\n    target: MaybeComputedElementRef<MaybeElement> | undefined,\r\n    point: ReadonlyPointType,\r\n): boolean {\r\n    const targetElement = unrefElement(target);\r\n    if(!targetElement)\r\n        return false;\r\n    if((point.x < 0) || (point.y < 0))\r\n        return false;\r\n    const elements = document.elementsFromPoint(point.x, point.y);\r\n    return elements.some((e) => (e === targetElement));\r\n}\r\n\r\n//if scaled - transform-origin must be: 0 0;\r\nexport function screenToClient<T = Arrayable<ReadonlyRectType>>(\r\n    parent: MaybeComputedElementRef<MaybeElement> | undefined,\r\n    rects: T,\r\n    scale?: number,\r\n): T extends ReadonlyRectType ? Rect : Rect[];\r\nexport function screenToClient(\r\n    parent: MaybeComputedElementRef<MaybeElement> | undefined,\r\n    rects: Arrayable<ReadonlyRectType>,\r\n    scale?: number,\r\n): Arrayable<Rect> {\r\n    const parentElement = unrefElement(parent);\r\n    const parentRect = parentElement?.getBoundingClientRect() || Rect.assign();\r\n    const rectsArray = Array.isArray(rects) ? rects : [rects];\r\n    const clientRects = rectsArray.map((rect) => {\r\n        let clientRect = Rect.assign(rect).offsetBy(parentRect, -1);\r\n        if(scale && (scale != 1)) {\r\n            const div = 1 / scale;\r\n            clientRect = clientRect.scalePoint(div).scaleSize(div);\r\n        }\r\n        return clientRect;\r\n    });\r\n    return Array.isArray(rects) ? clientRects : clientRects[0];\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {loadScript} from '@/scripts/load-script-css';\r\n\r\ntype GoatCounterVars = {\r\n    path: string | ((path?: string) => string);\r\n};\r\ntype GoatCounter = {\r\n    count: (vars?: GoatCounterVars) => void;\r\n};\r\n\r\nexport function useAnalytics(gameId: string) {\r\n    //turn on analytics only on global domain\r\n    const hostname = window?.location?.hostname;\r\n    if(!hostname?.toLowerCase()?.includes('doubleaxe.github.io')) {\r\n        return;\r\n    }\r\n    loadScript('https://lbc.xdax.ru/count.js', {\r\n        attributes: {\r\n            'data-goatcounter': 'https://lbc.xdax.ru/count',\r\n            'data-goatcounter-settings': '{\"no_onload\": true, \"allow_frame\": true}',\r\n        },\r\n        globalVariable: 'goatcounter',\r\n        validationCallback: (globalVariable: unknown): GoatCounter | undefined => {\r\n            if(globalVariable === undefined) {\r\n                return undefined;\r\n            }\r\n            const goatcounter = globalVariable as GoatCounter;\r\n            return (goatcounter && (typeof (goatcounter.count) == 'function')) ? goatcounter : undefined;\r\n        },\r\n    })\r\n    .then((goatcounter) => {\r\n        const pathname = window?.location?.pathname || '/daxfb-calculator/';\r\n        goatcounter.count({\r\n            path: pathname + gameId,\r\n        });\r\n    })\r\n    .catch((err) => {\r\n        //ignore error here\r\n    });\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {createGlobalState} from '@vueuse/core';\r\nimport {ref} from 'vue';\r\n\r\nexport const useErrorHandler = createGlobalState(() => {\r\n    const errorHandler = ref<((title: string, error: unknown, isWarning?: boolean) => void) | undefined>();\r\n    function showError(title: string, error: unknown, isWarning?: boolean) {\r\n        errorHandler.value?.(title, error, isWarning);\r\n    }\r\n\r\n    return {\r\n        errorHandler,\r\n        showError,\r\n    };\r\n});\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {ref} from 'vue';\r\nimport {__DEBUG__} from '@/scripts/debug';\r\n\r\nconst linkApiAddress = __DEBUG__ ? 'http://localhost:8080/linkapi/' : 'https://daxfb-blueprints.xdax.ru/linkapi/';\r\n\r\nexport function useLinkApi() {\r\n    const isLoading = ref(false);\r\n    const abortController = ref<AbortController | undefined>();\r\n\r\n    type ErrorResponse = {\r\n        error: string;\r\n        message: string;\r\n    };\r\n\r\n    function exec<T>(command: string, body: unknown) {\r\n        const _abortController = new AbortController();\r\n        const signal = _abortController.signal;\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                isLoading.value = true;\r\n                abortController.value = _abortController;\r\n                return fetch(`${linkApiAddress}${command}`, {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(body),\r\n                    signal,\r\n                });\r\n            })\r\n            .then((response) => {\r\n                if(signal.aborted) {\r\n                    const err = new Error('aborted');\r\n                    err.name = 'AbortError';\r\n                    throw err;\r\n                }\r\n                if(response.ok || (response.status == 500)) {\r\n                    return response.json()\r\n                        .then((jsonData: ErrorResponse | unknown) => {\r\n                            if(!response.ok || (jsonData as ErrorResponse).error) {\r\n                                const errorData = jsonData as ErrorResponse;\r\n                                if(errorData.error) {\r\n                                    const error = new Error(`server returned error \"${errorData.message}\"`);\r\n                                    error.name = errorData.error;\r\n                                    throw error;\r\n                                } else {\r\n                                    throw new Error(`server returned error ${response.status}: ${response.statusText}`);\r\n                                }\r\n                            }\r\n                            return jsonData as T;\r\n                        });\r\n                } else {\r\n                    throw new Error(`server returned error ${response.status}: ${response.statusText}`);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                isLoading.value = false;\r\n                abortController.value = undefined;\r\n            });\r\n    }\r\n\r\n    return {\r\n        exec,\r\n        abortController,\r\n        isLoading,\r\n    };\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {SavedBlueprint} from './saved-blueprint';\r\nimport {decode, encode, fromUint8Array, toUint8Array} from 'js-base64';\r\nimport {deflate, inflate} from 'pako';\r\nimport type {Values} from '../types';\r\nimport type {ErrorCollector} from '../error-collector';\r\nimport type {GameData} from '../data';\r\n\r\nexport const ExportTarget = {\r\n    DEFAULT: 'Default',\r\n    STEAM: 'Steam',\r\n    REDDIT: 'Reddit',\r\n    DISCORD: 'Discord',\r\n} as const;\r\n\r\nconst HEADER_HEADER = 'DAXFB';\r\n\r\nconst HEADER_FOOTER = {\r\n    COMPRESSED: 'C',\r\n    ENCODED: 'B',\r\n    JSON: 'J',\r\n} as const;\r\nconst FOOTERS = new Set<string>(Object.values(HEADER_FOOTER));\r\nconst HEADER_SEPARATOR = '$';\r\n\r\nfunction buildHeader(GAME_HEADER: string, footer: Values<typeof HEADER_FOOTER>) {\r\n    return HEADER_HEADER + GAME_HEADER + footer + HEADER_SEPARATOR;\r\n}\r\n\r\n//we build dummy header, because header length is always the same\r\nconst HEADER_LENGTH = buildHeader('AA', HEADER_FOOTER.JSON).length;\r\n\r\ntype EncoderOptions = {\r\n    blueprintCompress?: boolean;\r\n    blueprintEncode?: boolean;\r\n    blueprintSplit?: number;\r\n};\r\n\r\nexport class BlueprintEncoder {\r\n    private readonly _options;\r\n    private readonly GAME_HEADER: string;\r\n    constructor(gameData: GameData, options: EncoderOptions) {\r\n        this._options = options;\r\n        this.GAME_HEADER = gameData.gameDescription.shortName;\r\n    }\r\n\r\n    encode(savedBlueprint: SavedBlueprint) {\r\n        const GAME_HEADER = this.GAME_HEADER;\r\n        const shouldEncode = this._options.blueprintCompress || this._options.blueprintEncode;\r\n        const data = shouldEncode\r\n            ? JSON.stringify(savedBlueprint)\r\n            : JSON.stringify(savedBlueprint, undefined, '  ');\r\n        let encoded: string | undefined;\r\n        if(this._options.blueprintCompress) {\r\n            const compressed = deflate(data, {level: 9});\r\n            encoded = buildHeader(GAME_HEADER, HEADER_FOOTER.COMPRESSED) + fromUint8Array(compressed, true);\r\n        } else if(this._options.blueprintEncode) {\r\n            encoded = buildHeader(GAME_HEADER, HEADER_FOOTER.ENCODED) + encode(data, true);\r\n        } else {\r\n            //no need for header, it will be decoded automatically\r\n            encoded = data;\r\n        }\r\n        return encoded || '';\r\n    }\r\n    split(encoded: string) {\r\n        const shouldEncode = this._options.blueprintCompress || this._options.blueprintEncode;\r\n        if(!shouldEncode)\r\n            return encoded;\r\n        const size = this._options.blueprintSplit ?? 0;\r\n        if(size <= 0)\r\n            return encoded;\r\n        const numChunks = Math.ceil(encoded.length / size);\r\n        const chunks = new Array<string>(numChunks);\r\n        for(let i = 0, o = 0; i < numChunks; ++i, o += size) {\r\n            chunks[i] = encoded.substring(o, size + o);\r\n        }\r\n        return chunks.join('\\n');\r\n    }\r\n}\r\n\r\nexport class BlueprintDecoder {\r\n    private readonly _errorCollector;\r\n    private readonly GAME_HEADER: string;\r\n    constructor(gameData: GameData, errorCollector: ErrorCollector) {\r\n        this._errorCollector = errorCollector;\r\n        this.GAME_HEADER = gameData.gameDescription.shortName;\r\n    }\r\n\r\n    decode(encoded: string) {\r\n        const GAME_HEADER = this.GAME_HEADER;\r\n        const savedBlueprint = this._decode(encoded);\r\n        if(savedBlueprint) {\r\n            if(typeof(savedBlueprint) == 'object') {\r\n                const _savedBlueprint = savedBlueprint as SavedBlueprint;\r\n                if(_savedBlueprint.h?.g && (_savedBlueprint.h?.g != GAME_HEADER)) {\r\n                    this.logError(new Error(`Invalid game, expecting \"${GAME_HEADER}\", got \"${_savedBlueprint.h.g}\"`));\r\n                } else {\r\n                    return _savedBlueprint;\r\n                }\r\n            } else {\r\n                this.logError(new Error(`Invalid saved JSON type, expected \"object\", got \"${typeof(savedBlueprint)}\"`));\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    private static _parseHeader(GAME_HEADER: string, encoded: string) {\r\n        const fullHeader = encoded.substring(0, HEADER_LENGTH);\r\n        if(fullHeader.charAt(HEADER_LENGTH - 1) != HEADER_SEPARATOR) {\r\n            return undefined;\r\n        }\r\n        const header = fullHeader.substring(0, HEADER_HEADER.length);\r\n        if(header != HEADER_HEADER) {\r\n            throw new Error(`Invalid header, expecting \"${HEADER_HEADER}\", got \"${header}\" for \"${fullHeader}\"`);\r\n        }\r\n        const game = fullHeader.substring(HEADER_HEADER.length, HEADER_HEADER.length + GAME_HEADER.length);\r\n        if(game != GAME_HEADER) {\r\n            throw new Error(`Invalid game, expecting \"${GAME_HEADER}\", got \"${game}\" for \"${fullHeader}\"`);\r\n        }\r\n        const type = fullHeader.substring(HEADER_LENGTH - 2, HEADER_LENGTH - 1);\r\n        if(!FOOTERS.has(type)) {\r\n            throw new Error(`Invalid type, expecting one of \"${[...FOOTERS].join(',')}\", got \"${type}\" for \"${fullHeader}\"`);\r\n        }\r\n        return {\r\n            type,\r\n            rawEncoded: encoded.substring(HEADER_LENGTH),\r\n        };\r\n    }\r\n    private _decode(encoded: string) {\r\n        encoded = encoded.replace(/\\s|\\n/g, '');\r\n        let rawEncoded = '';\r\n        try {\r\n            const header = BlueprintDecoder._parseHeader(this.GAME_HEADER, encoded);\r\n            if(header) {\r\n                rawEncoded = header.rawEncoded;\r\n                switch(header.type) {\r\n                    case HEADER_FOOTER.COMPRESSED:\r\n                        {\r\n                            const decompressed = this.loadCompressed(rawEncoded);\r\n                            if(decompressed) {\r\n                                return JSON.parse(decompressed);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case HEADER_FOOTER.ENCODED:\r\n                        return JSON.parse(this.loadEncoded(rawEncoded));\r\n                    case HEADER_FOOTER.JSON:\r\n                        return JSON.parse(rawEncoded);\r\n                    default:\r\n                        throw new Error(`Invalid type, expecting one of \"${[...FOOTERS].join(',')}\", got \"${header.type}\"`);\r\n                }\r\n            }\r\n        } catch(err) {\r\n            this.logError(err);\r\n            return this.fallbackDecode(encoded, rawEncoded);\r\n        }\r\n        return this.fallbackDecode(encoded, rawEncoded);\r\n    }\r\n    private fallbackDecode(encoded: string, rawEncoded: string) {\r\n        try {\r\n            if(encoded.charAt(0) == '{')\r\n                return JSON.parse(encoded);\r\n            if(rawEncoded.charAt(0) == '{')\r\n                return JSON.parse(rawEncoded);\r\n\r\n            if(encoded.charAt(0) == 'e')\r\n                return JSON.parse(this.loadEncoded(encoded));\r\n            if(rawEncoded.charAt(0) == 'e')\r\n                return JSON.parse(this.loadEncoded(rawEncoded));\r\n        } catch(err) {\r\n            this.logError(err);\r\n        }\r\n        let decompressed = this.loadCompressed(encoded);\r\n        if(!decompressed) {\r\n            decompressed = this.loadCompressed(rawEncoded);\r\n        }\r\n        if(decompressed) {\r\n            try {\r\n                return JSON.parse(decompressed);\r\n            } catch(err) {\r\n                this.logError(err);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    logError(err: unknown) {\r\n        this._errorCollector.collectError(err);\r\n    }\r\n\r\n    private loadCompressed(encoded: string) {\r\n        try {\r\n            const compressed = toUint8Array(encoded);\r\n            return inflate(compressed, {to: 'string'});\r\n        } catch(err) {\r\n            this.logError(['Decompression error', err]);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private loadEncoded(encoded: string) {\r\n        return decode(encoded);\r\n    }\r\n}\r\n\r\ntype FileNameHandlerOptions = {\r\n    blueprintCompress?: boolean;\r\n    blueprintEncode?: boolean;\r\n    blueprintSplit?: number;\r\n};\r\nexport class FileNameHandler {\r\n    private readonly _options;\r\n    constructor(_options: FileNameHandlerOptions) {\r\n        this._options = _options;\r\n    }\r\n\r\n    encodeBlueprintNameHeader(encodedBlueprint: string, blueprintName: string) {\r\n        if(!blueprintName)\r\n            return encodedBlueprint;\r\n        const shouldEncode = this._options.blueprintCompress || this._options.blueprintEncode;\r\n        const size = shouldEncode ? (this._options.blueprintSplit ?? 0) : 0;\r\n        let blueprintHeader = '';\r\n        if((size <= 0) || ((blueprintName.length + 8) > size)) {\r\n            blueprintHeader = `====${blueprintName}====\\n`;\r\n        } else {\r\n            const charsCount = (size - blueprintName.length) >> 1;\r\n            blueprintHeader = `${'='.repeat(charsCount)}${blueprintName}${'='.repeat(size - blueprintName.length - charsCount)}\\n`;\r\n        }\r\n        return blueprintHeader + encodedBlueprint;\r\n    }\r\n    static decodeBlueprintNameHeader(encodedBlueprint: string) {\r\n        let noiseMatch = /^(?:\\[code\\]|```|[\\r\\n\\s]+)[\\r\\n\\s]*/.exec(encodedBlueprint);\r\n        if(noiseMatch) {\r\n            encodedBlueprint = encodedBlueprint.substring(noiseMatch[0].length);\r\n        }\r\n        noiseMatch = /(?:\\[\\/code\\]|```)[\\r\\n\\s]*$/.exec(encodedBlueprint);\r\n        if(noiseMatch) {\r\n            encodedBlueprint = encodedBlueprint.substring(0, encodedBlueprint.length - noiseMatch[0].length);\r\n        }\r\n        const headerMatch = /^=+((?:[^=]+=+)*[^=]+)=+\\r?\\n?/.exec(encodedBlueprint);\r\n        if(!headerMatch) {\r\n            return {\r\n                blueprintName: undefined,\r\n                encodedBlueprint,\r\n            };\r\n        }\r\n        const blueprintName = headerMatch[1];\r\n        return {\r\n            blueprintName,\r\n            encodedBlueprint: encodedBlueprint.substring(headerMatch[0].length),\r\n        };\r\n    }\r\n    static fileNameToBlueprintName(fileName: string) {\r\n        const match = /^(.+?)(?:\\(\\s*\\d+\\s*\\)\\s*)?\\.([^.]+)$/.exec(fileName);\r\n        if(!match)\r\n            return fileName;\r\n        const blueprintName0 = match[1].trim().split(/[\\s_-]+/);\r\n        const blueprintName = blueprintName0.map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\r\n        return blueprintName || fileName;\r\n    }\r\n    static blueprintNameToFileName(blueprintName: string) {\r\n        const fileName0 = blueprintName.split(/[\\s_-]+/);\r\n        const fileName = fileName0.map((s) => s.toLowerCase()).join('-') + '.txt';\r\n        return fileName || blueprintName;\r\n    }\r\n    static encodeToTarget(encodedBlueprint: string, exportTarget: string) {\r\n        switch(exportTarget) {\r\n            case ExportTarget.STEAM:\r\n                return '[code]' + encodedBlueprint + '[/code]';\r\n            case ExportTarget.DISCORD:\r\n                return '```' + encodedBlueprint + '```';\r\n            case ExportTarget.REDDIT:\r\n                return encodedBlueprint.split('\\n').map((s) => '    ' + s).join('\\n');\r\n        }\r\n        return encodedBlueprint;\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {LOG, log} from './debug';\r\n\r\ntype MaybeError = {\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n};\r\n\r\nexport class ErrorCollector {\r\n    private readonly _errors: unknown[] = [];\r\n\r\n    collectError(error: unknown) {\r\n        this._errors.push(error);\r\n        return this;\r\n    }\r\n\r\n    get haveErrors() { return !!this._errors.length; }\r\n\r\n    private static _printError(err: unknown, stack: boolean): string {\r\n        if(Array.isArray(err)) {\r\n            if(!err.length)\r\n                return 'Unknown error';\r\n            return err.map((_err) => this._printError(_err, stack)).join(': ');\r\n        }\r\n        if(typeof((err as MaybeError).message) != 'string') {\r\n            return err ? String(err) : 'Unknown error';\r\n        }\r\n        const _err = err as MaybeError;\r\n        const messages = [\r\n            _err.name,\r\n            _err.message,\r\n            ...(stack ? [_err.stack] : []),\r\n        ].filter((msg) => (msg && (typeof(msg) == 'string'))).join(': ');\r\n        return messages;\r\n    }\r\n    log() {\r\n        this._errors.forEach((err) => {\r\n            log(LOG.ERROR, ErrorCollector._printError(err, true));\r\n        });\r\n    }\r\n    print() {\r\n        return this._errors.map((err) => ErrorCollector._printError(err, false));\r\n    }\r\n}\r\n","import type {BlueprintModel} from '@/scripts/model/store';\r\nimport {unref, type Ref} from 'vue';\r\nimport {BlueprintDecoder, FileNameHandler} from '@/scripts/model/serializer';\r\nimport {ErrorCollector} from '@/scripts/error-collector';\r\nimport {useErrorHandler} from '@/composables';\r\nimport type {GameData} from '@/scripts/data';\r\n\r\nexport function loadBlueprint(\r\n    gameData: GameData,\r\n    blueprintModel: BlueprintModel,\r\n    encodedBlueprint: string,\r\n    fileName: Ref<string | undefined> | string | undefined,\r\n) {\r\n    const {showError} = useErrorHandler();\r\n    const ERROR_TITLE = 'Error loading blueprint';\r\n\r\n    let blueprintName: string | undefined;\r\n    ({blueprintName, encodedBlueprint} = FileNameHandler.decodeBlueprintNameHeader(encodedBlueprint));\r\n    const _fileName = unref(fileName);\r\n    if(!blueprintName && _fileName) {\r\n        blueprintName = FileNameHandler.fileNameToBlueprintName(_fileName);\r\n    }\r\n\r\n    const errorCollector = new ErrorCollector();\r\n    const decoder = new BlueprintDecoder(gameData, errorCollector);\r\n    const decoded = decoder.decode(encodedBlueprint);\r\n    if(!decoded || errorCollector.haveErrors) {\r\n        showError(ERROR_TITLE, errorCollector);\r\n        return;\r\n    }\r\n    blueprintModel.load(decoded, errorCollector);\r\n    if(blueprintName) {\r\n        blueprintModel.blueprintName = blueprintName;\r\n    }\r\n    if(errorCollector.haveErrors) {\r\n        showError('Blueprint possibly wasn\\'t loaded correctly', errorCollector, true);\r\n    }\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {ref, unref} from 'vue';\r\n\r\nexport type NumberInputHelperOptions = {\r\n    min?: number;\r\n    defaultMin?: number;\r\n    max?: number;\r\n    defaultMax?: number;\r\n    defaultValue?: number;\r\n    apply?: (value: number) => void;\r\n};\r\nexport function useNumberInputHelper(options: NumberInputHelperOptions = {}) {\r\n    const defaultValue = options.defaultValue || 0;\r\n    const tempNumber = ref<string | number>(defaultValue);\r\n\r\n    function updateNumber() {\r\n        let value = unref(tempNumber);\r\n        if(typeof(value) != 'number') {\r\n            value = parseFloat(value);\r\n        }\r\n        if(isNaN(value)) {\r\n            value = defaultValue;\r\n        } else if((typeof(options.max) == 'number') && (value >= options.max)) {\r\n            value = options.defaultMax ?? options.max;\r\n        } else if((typeof(options.min) == 'number') && (value <= options.min)) {\r\n            value = options.defaultMin ?? options.min;\r\n        }\r\n        tempNumber.value = value;\r\n        if(options.apply) {\r\n            options.apply(value);\r\n        }\r\n    }\r\n    function addNumber(delta: number) {\r\n        updateNumber();\r\n        tempNumber.value = Number(unref(tempNumber)) + delta;\r\n        updateNumber();\r\n    }\r\n    function resetNumber() {\r\n        tempNumber.value = defaultValue;\r\n        updateNumber();\r\n    }\r\n\r\n    return {\r\n        updateNumber,\r\n        addNumber,\r\n        resetNumber,\r\n        tempNumber,\r\n    };\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {tryOnScopeDispose, type Arrayable, type EventHook, type EventHookOn} from '@vueuse/core';\r\n\r\nexport type JustEventHook<ItemType> = Omit<EventHook<ItemType>, 'trigger'>;\r\n\r\nexport function justEventHook<ItemType>(hook: EventHook<ItemType>): JustEventHook<ItemType> {\r\n    return {\r\n        on: hook.on.bind(hook),\r\n        off: hook.off.bind(hook),\r\n    };\r\n}\r\n\r\nexport function useEventHook<ItemType>(hooks: Arrayable<JustEventHook<ItemType>>, listener: (param: ItemType) => void) {\r\n    if(!Array.isArray(hooks))\r\n        hooks = [hooks];\r\n\r\n    const cleanups: ReturnType<EventHookOn>[] = hooks.map((hook) => hook.on(listener));\r\n    const cleanup = () => {\r\n        cleanups.forEach(fn => fn.off());\r\n        cleanups.length = 0;\r\n    };\r\n\r\n    tryOnScopeDispose(cleanup);\r\n\r\n    return stop;\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {LOG, log} from '@/scripts/debug';\r\nimport {Point, Rect, type ReadonlyPointType} from '@/scripts/geometry';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {createEventHook, createGlobalState, createSharedComposable, tryOnScopeDispose, unrefElement, useEventListener, type MaybeElement} from '@vueuse/core';\r\nimport {computed, readonly, ref, unref} from 'vue';\r\nimport {justEventHook, type JustEventHook} from '..';\r\nimport {isPointInsideElement2, screenToClient} from './commons';\r\n\r\ninterface CurrentlyDraggable {\r\n    onMove: (event?: PointerEvent) => void;\r\n    onEnd: (event?: PointerEvent) => void;\r\n}\r\n\r\nexport type DragStart<ItemType> = (event: PointerEvent, item: ItemType) => void;\r\n\r\nexport interface UseDragAndDropOptions {\r\n    /**\r\n     * If both point-and-click and drag-and-drop api is enabled\r\n     * and this is true, then dragging starts with delay, to distinct from regular clicks\r\n     */\r\n    useDelay?: boolean;\r\n    /**\r\n     * If draggable item is automatically limited to surface (for example blueprint item)\r\n     * it should be set to true, because mouse position is not always in sync with item position\r\n     */\r\n    skipCheckInsideSurface?: boolean;\r\n}\r\n\r\nexport interface DraggableListenerParam<ItemType> {\r\n    readonly event: NotifierKeys;\r\n    readonly item: ItemType;\r\n    readonly screenRect: Rect;\r\n    readonly clientRect: Rect;\r\n}\r\n\r\nconst NotifierKeyValues = [\r\n    'notifyStart',\r\n    'notifyMove',\r\n    'notifyDrop',\r\n    'notifyCancel',\r\n] as const;\r\nexport type NotifierKeys = (typeof NotifierKeyValues)[number];\r\nexport type DraggableHooks<ItemType> = {\r\n    [s in NotifierKeys]: JustEventHook<DraggableListenerParam<ItemType>>;\r\n};\r\n\r\nclass DraggableHooksImpl<ItemType> {\r\n    readonly notifyStart = createEventHook<DraggableListenerParam<ItemType>>();\r\n    readonly notifyMove = createEventHook<DraggableListenerParam<ItemType>>();\r\n    readonly notifyDrop = createEventHook<DraggableListenerParam<ItemType>>();\r\n    readonly notifyCancel = createEventHook<DraggableListenerParam<ItemType>>();\r\n\r\n    toJustEventHooks() {\r\n        const result = Object.fromEntries(\r\n            NotifierKeyValues.map((key) => [key, justEventHook(this[key])]),\r\n        ) as DraggableHooks<ItemType>;\r\n        return result;\r\n    }\r\n    trigger(key: NotifierKeys, param: DraggableListenerParam<ItemType>) {\r\n        this[key].trigger(param);\r\n    }\r\n}\r\n\r\n//we have only one active drag and drop at a time\r\nconst useSharedMouse = createSharedComposable(() => {\r\n    const currentlyDragging = ref<CurrentlyDraggable | undefined>();\r\n    const lastMousePosition = ref<ReadonlyPointType | undefined>();\r\n\r\n    //window by default\r\n    useEventListener('pointermove', (event: PointerEvent) => {\r\n        lastMousePosition.value = {x: event.clientX, y: event.clientY};\r\n        unref(currentlyDragging)?.onMove(event);\r\n    }, {passive: true});\r\n    useEventListener('pointerup', (event: PointerEvent) => {\r\n        lastMousePosition.value = {x: event.clientX, y: event.clientY};\r\n        unref(currentlyDragging)?.onEnd(event);\r\n    }, {passive: true});\r\n    //when scrolled - try to keep item in place\r\n    useEventListener(['scroll', 'resize'], () => unref(currentlyDragging)?.onMove(), {capture: true, passive: true});\r\n\r\n    return {currentlyDragging, lastMousePosition};\r\n});\r\n\r\n//this is for auto scroll while dragging something\r\nconst globalHooks = new DraggableHooksImpl();\r\nexport const useGlobalDragAndDropListener = createGlobalState(() => globalHooks.toJustEventHooks());\r\n\r\n//listener for single instance\r\n//notifier for shared instance\r\nexport function useDragAndDrop<ItemType>(\r\n    options: UseDragAndDropOptions = {},\r\n) {\r\n    const settings = injectSettings();\r\n    const {currentlyDragging, lastMousePosition} = useSharedMouse();\r\n\r\n    const nextActivatorElem = ref<HTMLElement | undefined>();\r\n    //activator is element, which activates drag-and-drop on keydown\r\n    //it will be taken from PointerEvent\r\n    const activatorElem = ref<HTMLElement | undefined>();\r\n    //movable is what is moved on screen, by default = activator\r\n    //for links and left panel it is different\r\n    const movableElem = ref<MaybeElement>();\r\n    const movableElemAuto = computed(() => (unrefElement(movableElem) as HTMLElement | undefined) || unref(activatorElem));\r\n    //dropZone is where to drop, by default = entire window\r\n    //drag is not finished if dropped outside drop zone\r\n    const dropZoneSurfaceElem = ref<MaybeElement>();\r\n    //relative coordinates are calculated relative to origin\r\n    //this may be different from surface to support negative scroll\r\n    const dropZoneOriginElem = ref<MaybeElement>();\r\n\r\n    const offsetPosition = ref<Point | undefined>();\r\n    //in screen coordinates\r\n    const screenRect = ref<Rect | undefined>();\r\n    //in drop zone coordinates\r\n    const clientRect = ref<Rect | undefined>();\r\n    const isDragging = ref(false);\r\n\r\n    const currentItem = ref<ItemType | undefined>();\r\n    const hooks = new DraggableHooksImpl<ItemType>();\r\n\r\n    function trigger(key: NotifierKeys) {\r\n        const param: DraggableListenerParam<ItemType> = {\r\n            event: key,\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            item: unref(currentItem)!,\r\n            screenRect: unref(screenRect) || Rect.assign(),\r\n            clientRect: unref(clientRect) || Rect.assign(),\r\n        };\r\n        Object.freeze(param);\r\n        hooks.trigger(key, param);\r\n        globalHooks.trigger(key, param);\r\n        //log(LOG.TRACE, key);\r\n    }\r\n\r\n    function cleanup() {\r\n        currentItem.value = undefined;\r\n        currentlyDragging.value = undefined;\r\n        activatorElem.value = undefined;\r\n        isDragging.value = false;\r\n        //don't clear rect, item may use it for positions\r\n    }\r\n\r\n    function updateClientRect() {\r\n        const dropZoneOrigin = unref(dropZoneOriginElem);\r\n        if(dropZoneOrigin) {\r\n            clientRect.value = screenToClient(dropZoneOrigin, screenRect.value || Rect.assign(), settings.scale);\r\n        }\r\n    }\r\n\r\n    function updatePosition(event?: PointerEvent) {\r\n        let mousePosition: Point;\r\n        if(event) {\r\n            mousePosition = Point.assign({x: event.clientX, y: event.clientY});\r\n        } else {\r\n            mousePosition = Point.assign(unref(lastMousePosition));\r\n        }\r\n\r\n        const offset = unref(offsetPosition) || Point.assign();\r\n        const movableRect = unref(screenRect) || Rect.assign();\r\n        screenRect.value = Rect.assign(movableRect, mousePosition.offsetBy(offset));\r\n        updateClientRect();\r\n        return mousePosition;\r\n    }\r\n\r\n    const draggable: CurrentlyDraggable = {\r\n        onMove(event?: PointerEvent) {\r\n            updatePosition(event);\r\n            trigger('notifyMove');\r\n        },\r\n        onEnd(event?: PointerEvent) {\r\n            const mousePosition = updatePosition(event);\r\n            if(!options.skipCheckInsideSurface\r\n                && unref(dropZoneSurfaceElem)\r\n                && !isPointInsideElement2(dropZoneSurfaceElem, mousePosition)\r\n            ) {\r\n                trigger('notifyCancel');\r\n            } else {\r\n                trigger('notifyDrop');\r\n            }\r\n            cleanup();\r\n        },\r\n    };\r\n\r\n    let timer: number | undefined = undefined;\r\n    function cancelDelayedStart() {\r\n        if(timer !== undefined) {\r\n            clearTimeout(timer);\r\n            timer = undefined;\r\n            nextActivatorElem.value = undefined;\r\n        }\r\n    }\r\n\r\n    type StoredEvent = {\r\n        currentTarget: HTMLElement;\r\n        mousePosition: Point;\r\n    };\r\n    function onStart(event: StoredEvent, item: ItemType) {\r\n        log(LOG.TRACE, 'onStart');\r\n\r\n        timer = undefined;\r\n        nextActivatorElem.value = undefined;\r\n        if(unref(currentlyDragging)) {\r\n            log(LOG.WARN, 'Already dragging something, you can drag only one item at a time');\r\n        }\r\n        currentItem.value = item;\r\n        currentlyDragging.value = draggable;\r\n        isDragging.value = true;\r\n\r\n        const activator = event.currentTarget;\r\n        activatorElem.value = activator;\r\n        const movable = unref(movableElemAuto) || activator;\r\n\r\n        //we will align activatorElem and movableElem by center points, then calculate offset mouse position\r\n        //so movableElem will be shown in the same place as activatorElem\r\n        const activatorRect = Rect.assign(activator.getBoundingClientRect());\r\n        const movableRect = Rect.assign(movable.getBoundingClientRect());\r\n        const mousePosition = event.mousePosition;\r\n\r\n        //we assume movable is less than activator, and mouse is inside activator\r\n        //otherwise all calculations become negative, but it won't break them\r\n        const halfDeltaSize = Point.assign({\r\n            x: (activatorRect.width - movableRect.width) / 2,\r\n            y: (activatorRect.height - movableRect.height) / 2,\r\n        });\r\n        //half delta - (mouse pos - upper left of activator) = mouse offset from movable\r\n        const offset = halfDeltaSize.offsetBy(mousePosition.offsetBy(activatorRect, -1), -1);\r\n        //mouse pos + offset = movable pos\r\n        const movablePos = mousePosition.offsetBy(offset);\r\n\r\n        offsetPosition.value = offset;\r\n        screenRect.value = Rect.assign(movablePos, {width: movableRect.width, height: movableRect.height});\r\n        updateClientRect();\r\n\r\n        trigger('notifyStart');\r\n    }\r\n\r\n    const dragStart: DragStart<ItemType> = (event: PointerEvent, item: ItemType) => {\r\n        if(!settings.dragAndDropEnabled) {\r\n            return;\r\n        }\r\n        cancelDelayedStart();\r\n        const storedEvenet: StoredEvent = {\r\n            currentTarget: event.currentTarget as HTMLElement,\r\n            mousePosition: Point.assign({x: event.clientX, y: event.clientY}),\r\n        };\r\n        const start = () => onStart(storedEvenet, item);\r\n        if(settings.pointAndClickEnabled && options.useDelay) {\r\n            //usual click takes around 110-130 ms\r\n            nextActivatorElem.value = storedEvenet.currentTarget;\r\n            timer = setTimeout(start, 300);\r\n        } else {\r\n            start();\r\n        }\r\n    };\r\n\r\n    //if we are waiting for activation and user moves cursor out of element - cancel drag\r\n    useEventListener(nextActivatorElem, ['pointerleave', 'pointerup'], (evt) => {\r\n        cancelDelayedStart();\r\n        //log(LOG.TRACE, evt.type);\r\n    });\r\n\r\n    tryOnScopeDispose(cancelDelayedStart);\r\n\r\n    return {\r\n        dragStart,\r\n        screenRect: readonly(screenRect),\r\n        clientRect: readonly(clientRect),\r\n        isDragging: readonly(isDragging),\r\n        hooks: hooks.toJustEventHooks(),\r\n        currentItem: readonly(currentItem),\r\n        activatorElem: readonly(activatorElem),\r\n        movableElem,\r\n        dropZoneSurfaceElem,\r\n        dropZoneOriginElem,\r\n    };\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem} from '#types/game-data';\r\nimport type {BlueprintItemModel, LinkModel, RecipeIOModel} from '@/scripts/model/store';\r\nimport {createSharedComposable} from '@vueuse/core';\r\nimport {useDragAndDrop} from './drag-and-drop';\r\n\r\nexport const useLeftPanelDragAndDrop = createSharedComposable(() => useDragAndDrop<GameItem>({useDelay: true}));\r\n\r\nexport class LinkDragAndDropItem {\r\n    readonly source: RecipeIOModel;\r\n    link?: LinkModel;\r\n    dragging?: RecipeIOModel;\r\n\r\n    constructor(source: RecipeIOModel) {\r\n        this.source = source;\r\n    }\r\n}\r\nexport const useLinkDragAndDrop = createSharedComposable(\r\n    () => useDragAndDrop<LinkDragAndDropItem>({useDelay: true, skipCheckInsideSurface: true}),\r\n);\r\n\r\nexport const useItemDragAndDrop = createSharedComposable(\r\n    () => useDragAndDrop<BlueprintItemModel>({skipCheckInsideSurface: true}),\r\n);\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {Point, Rect} from '@/scripts/geometry';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {useEventListener} from '@vueuse/core';\r\nimport {getScrollBox} from './commons';\r\n\r\nexport function useDragAndScroll() {\r\n    const settings = injectSettings();\r\n    let data: {\r\n        mouse: Point;\r\n        scroll: Point;\r\n        scrollboxElement: HTMLElement;\r\n    } | undefined = undefined;\r\n\r\n    function onStart(event: PointerEvent) {\r\n        if(!settings.dragAndScrollEnabled) {\r\n            data = undefined;\r\n            return;\r\n        }\r\n        //TODO user clicked on something else\r\n        const {scrollboxElement} = getScrollBox(event.currentTarget as HTMLElement);\r\n        if(!scrollboxElement)\r\n            return;\r\n        data = {\r\n            mouse: Point.assign({x: event.clientX, y: event.clientY}),\r\n            scroll: Point.assign({x: scrollboxElement.scrollLeft, y: scrollboxElement.scrollTop}),\r\n            scrollboxElement,\r\n        };\r\n    }\r\n    function onMove(event: PointerEvent) {\r\n        if(!data)\r\n            return;\r\n        const {mouse, scroll, scrollboxElement} = data;\r\n        const mousePosition = Point.assign({x: event.clientX, y: event.clientY});\r\n        if(!settings.dragAndScrollOutsideWindow) {\r\n            const scrollBoxRect = Rect.assign(scrollboxElement.getBoundingClientRect());\r\n            if(!scrollBoxRect.isPointInRect(mousePosition)) {\r\n                return;\r\n            }\r\n        }\r\n        const delta = Point.assign({x: event.clientX, y: event.clientY}).offsetBy(mouse, -1);\r\n        const deltaScroll = scroll.offsetBy(delta, -1);\r\n        if(deltaScroll.x >= 0)\r\n            scrollboxElement.scrollLeft = deltaScroll.x;\r\n        if(deltaScroll.y >= 0)\r\n            scrollboxElement.scrollTop = deltaScroll.y;\r\n    }\r\n    function onStop(event: PointerEvent) {\r\n        data = undefined;\r\n    }\r\n\r\n    useEventListener(window, 'pointermove', onMove, {passive: true});\r\n    useEventListener(window, 'pointerup', onStop, {passive: true});\r\n\r\n    return {\r\n        onStart,\r\n    };\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport {Rect} from '@/scripts/geometry';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport type {MaybeComputedElementRef, MaybeElement} from '@vueuse/core';\r\nimport {useEventHook} from '..';\r\nimport {getScrollBox} from './commons';\r\nimport {useGlobalDragAndDropListener} from './drag-and-drop';\r\n\r\nexport function useOverflowScroll(parent: MaybeComputedElementRef<MaybeElement> | undefined) {\r\n    const settings = injectSettings();\r\n    const globalDragAndDropEvents = useGlobalDragAndDropListener();\r\n    let interval: number | undefined = undefined;\r\n    let itemRect: Rect | undefined = undefined;\r\n    //when user starts dragging and item is initially overlaps - don't start scrolling\r\n    //instead first wait for item inside area, and if it is outside again - start scrolling\r\n    //otherwise it will scroll immediatelly when user selects item on left panel\r\n    let waitingInside = false;\r\n\r\n    function clear() {\r\n        if(interval !== undefined) {\r\n            clearInterval(interval);\r\n            interval = undefined;\r\n            itemRect = undefined;\r\n        }\r\n    }\r\n\r\n    function checkInside() {\r\n        if(!waitingInside)\r\n            return;\r\n        const scrollboxElement = getScrollBox(parent)?.scrollboxElement;\r\n        if(!scrollboxElement || !itemRect)\r\n            return;\r\n        const visibleRect = Rect.assign(scrollboxElement.getBoundingClientRect());\r\n        if(visibleRect.isRectInRect(itemRect))\r\n            waitingInside = false;\r\n    }\r\n\r\n    function processScroll() {\r\n        if(waitingInside)\r\n            return;\r\n        const scrollboxElement = getScrollBox(parent)?.scrollboxElement;\r\n        if(!scrollboxElement || !itemRect)\r\n            return;\r\n\r\n        const visibleRect = Rect.assign(scrollboxElement.getBoundingClientRect());\r\n        const deltaX1 = itemRect.x - visibleRect.x;\r\n        const deltaX2 = visibleRect.x1 - itemRect.x1;\r\n        let scrollX = scrollboxElement.scrollLeft;\r\n        if((deltaX1 < 0) && (deltaX2 >= 0)) {\r\n            scrollX += deltaX1;\r\n        } else if((deltaX1 >= 0) && (deltaX2 < 0)) {\r\n            scrollX -= deltaX2;\r\n        }\r\n        if(scrollX >= 0)\r\n            scrollboxElement.scrollLeft = scrollX;\r\n\r\n        const deltaY1 = itemRect.y - visibleRect.y;\r\n        const deltaY2 = visibleRect.y1 - itemRect.y1;\r\n        let scrollY = scrollboxElement.scrollTop;\r\n        if((deltaY1 < 0) && (deltaY2 >= 0)) {\r\n            scrollY += deltaY1;\r\n        } else if((deltaY1 >= 0) && (deltaY2 < 0)) {\r\n            scrollY -= deltaY2;\r\n        }\r\n        if(scrollY >= 0)\r\n            scrollboxElement.scrollTop = scrollY;\r\n    }\r\n    useEventHook(globalDragAndDropEvents.notifyStart, (param) => {\r\n        if(!settings.dragAndDropEnabled || !settings.overflowScrollEnabled) {\r\n            clear();\r\n            return;\r\n        }\r\n        itemRect = param.screenRect;\r\n        waitingInside = true;\r\n        checkInside();\r\n        interval = setInterval(() => processScroll(), 200);\r\n    });\r\n    useEventHook(globalDragAndDropEvents.notifyMove, (param) => {\r\n        itemRect = param.screenRect;\r\n        checkInside();\r\n    });\r\n    useEventHook([globalDragAndDropEvents.notifyCancel, globalDragAndDropEvents.notifyDrop], clear);\r\n}\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\nimport type {GameItem} from '#types/game-data';\r\nimport {Point, Rect} from '@/scripts/geometry';\r\nimport type {BlueprintItemModel, RecipeIOModel} from '@/scripts/model/store';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport type {Keys, Values} from '@/scripts/types';\r\nimport {createEventHook, createSharedComposable, type MaybeElement} from '@vueuse/core';\r\nimport {readonly, ref, toRaw, unref, watch} from 'vue';\r\nimport {justEventHook} from '..';\r\nimport {screenToClient} from './commons';\r\n\r\nexport const SelectedClassType = {\r\n    Item: 'A',\r\n    BlueprintItemModel: 'B',\r\n    RecipeIOModel: 'C',\r\n} as const;\r\nexport type SelectedClassTypeKeys = Keys<typeof SelectedClassType>;\r\nexport type SelectedClassTypeValues = Values<typeof SelectedClassType>;\r\n\r\nexport type SelectedItemType = GameItem | BlueprintItemModel | RecipeIOModel | undefined;\r\n\r\nexport class SelectedItem {\r\n    public readonly clazz;\r\n    public readonly item;\r\n    constructor(clazz: SelectedClassTypeValues, item: SelectedItemType) {\r\n        this.clazz = clazz;\r\n        this.item = item;\r\n        Object.freeze(this);\r\n    }\r\n    isSelected(item: SelectedItemType) {\r\n        return toRaw(item) === toRaw(this.item);\r\n    }\r\n}\r\n\r\nexport interface PoinAndClickListenerParam {\r\n    item: SelectedItem;\r\n    screenPosition: Point;\r\n    clientPosition: Point;\r\n    wasHandled: () => void;\r\n}\r\n\r\nexport const usePointAndClick = createSharedComposable(() => {\r\n    const settings = injectSettings();\r\n    const selectedItem = ref<SelectedItem | undefined>();\r\n    const notifySelected = createEventHook<PoinAndClickListenerParam>();\r\n    const parentElem = ref<MaybeElement>();\r\n\r\n    function selectItem(clazz: SelectedClassTypeValues, item: SelectedItemType) {\r\n        if(!settings.pointAndClickEnabled) {\r\n            return;\r\n        }\r\n        if(unref(selectedItem)?.isSelected(item)) {\r\n            //second click unselects\r\n            selectedItem.value = undefined;\r\n        } else {\r\n            selectedItem.value = new SelectedItem(clazz, item);\r\n        }\r\n    }\r\n    function processSelected(event: MouseEvent) {\r\n        const _selectedItem = unref(selectedItem);\r\n        if(_selectedItem) {\r\n            const screenPosition = Point.assign({x: event.clientX, y: event.clientY});\r\n            const clientPosition = Point.assign(screenToClient(parentElem, Rect.assign(screenPosition), settings.scale));\r\n\r\n            let wasHandled = false;\r\n            const param: PoinAndClickListenerParam = {\r\n                item: _selectedItem,\r\n                screenPosition,\r\n                clientPosition,\r\n                wasHandled: () => {\r\n                    wasHandled = true;\r\n                },\r\n            };\r\n            Object.freeze(param);\r\n\r\n            notifySelected.trigger(param);\r\n\r\n            if(wasHandled) {\r\n                selectedItem.value = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    watch(() => settings.pointAndClickEnabled, (value) => {\r\n        if(!value) {\r\n            selectedItem.value = undefined;\r\n        }\r\n    });\r\n\r\n    return {\r\n        selectedItem: readonly(selectedItem),\r\n        notifySelected: justEventHook(notifySelected),\r\n        selectItem,\r\n        processSelected,\r\n        parentElem,\r\n    };\r\n});\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {Point, Rect, type PublicRect} from '@/scripts/geometry';\r\nimport {calculateItemPositions, type BlueprintItemModel} from '@/scripts/model/store';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {createSharedComposable, unrefElement, type MaybeElement} from '@vueuse/core';\r\nimport {readonly, ref, unref} from 'vue';\r\nimport {getScrollBox} from './commons';\r\n\r\nexport function useBlueprintSurface() {\r\n    const settings = injectSettings();\r\n    const boundingRectRef = ref<PublicRect>(Rect.assign());\r\n    const surfaceElem = ref<MaybeElement>();\r\n    //this may be different from surface to support negative scroll\r\n    const originElem = ref<MaybeElement>();\r\n    const marginSize = 500;\r\n    //should be less than marginSize\r\n    const marginStep = marginSize >> 1;\r\n    const initialScrollOffset = 50;\r\n\r\n    function applyStyle(elem: HTMLElement | SVGElement | null | undefined, style: Record<string, string>) {\r\n        if(!elem)\r\n            return;\r\n        Object.entries(style).forEach(([key, value]) => {\r\n            elem.style.setProperty(key, value);\r\n        });\r\n    }\r\n\r\n    function roundToStep(value: number) {\r\n        if(!value)\r\n            return value;\r\n        if(value < 0)\r\n            return Math.floor((value - Number.EPSILON) / marginStep) * marginStep;\r\n        return Math.ceil((value + Number.EPSILON) / marginStep) * marginStep;\r\n    }\r\n\r\n    //there will be glitches, if we drag and expand and scroll simultaneously\r\n    //so we do this only on demand, when blueprint items changed\r\n    function updateSurface(items: IterableIterator<BlueprintItemModel>, resetScroll?: boolean) {\r\n        const {minItemXY: _minItemXY, maxItemXY: _maxItemXY} = calculateItemPositions(items);\r\n        const scale = settings.scale;\r\n        const haveScale = (scale && (scale != 1));\r\n\r\n        const {scrollboxElement, targetElement} = getScrollBox(surfaceElem);\r\n        let visibleRect = Rect.assign();\r\n        if(scrollboxElement) {\r\n            visibleRect = Rect.assign(scrollboxElement.getBoundingClientRect());\r\n            if(haveScale) {\r\n                const div = 1 / scale;\r\n                visibleRect = visibleRect.scalePoint(div).scaleSize(div);\r\n            }\r\n        }\r\n\r\n        let boundingRect: PublicRect;\r\n        if(!_minItemXY.x && !_minItemXY.y && !_maxItemXY.x && !_maxItemXY.y) {\r\n            boundingRect = Rect.assign();\r\n        } else {\r\n            const x1 = roundToStep(Math.min(_minItemXY.x - marginSize, 0));\r\n            const y1 = roundToStep(Math.min(_minItemXY.y - marginSize, 0));\r\n\r\n            //we need keep scroll position, so it will not suddenly jump somewhere\r\n            //for this we must make bounding rect bigger than visible rect (at offset 0,0)\r\n            const x2 = Math.max(_maxItemXY.x, visibleRect.width);\r\n            const y2 = Math.max(_maxItemXY.y, visibleRect.height);\r\n\r\n            //0:0 is min top-left point, so everything works fine at first drop\r\n            boundingRect = Rect.assign({\r\n                x: x1,\r\n                y: y1,\r\n                width: roundToStep((x2 - x1) + marginSize),\r\n                height: roundToStep((y2 - y1) + marginSize),\r\n            });\r\n        }\r\n        const {x, y, width, height} = boundingRect;\r\n        let delta = Point.assign({\r\n            x: unref(boundingRectRef).x - x,\r\n            y: unref(boundingRectRef).y - y,\r\n        });\r\n        let unscaledRect = boundingRect;\r\n        if(haveScale) {\r\n            delta = delta.scalePoint(scale);\r\n            unscaledRect = unscaledRect.scalePoint(scale).scaleSize(scale);\r\n        }\r\n\r\n        //surface is not slaced, but origin is\r\n        //this is because scrollbars work incorrectly when surface is scaled\r\n        //adjust surface and scrollbox immediatelly, so it will not flicker and no need to synchronize states\r\n        //we directly manipulate DOM to achieve it\r\n        const surfaceStyle = {\r\n            width: unscaledRect.width ? `${unscaledRect.width}px` : '100%',\r\n            height: unscaledRect.height ? `${unscaledRect.height}px` : '100%',\r\n        };\r\n        const originStyle = {\r\n            left: `${-unscaledRect.x}px`,\r\n            top: `${-unscaledRect.y}px`,\r\n            width: `${width + x}px`,\r\n            height: `${height + y}px`,\r\n        };\r\n        applyStyle(targetElement, surfaceStyle);\r\n        applyStyle(unrefElement(originElem), originStyle);\r\n        if(scrollboxElement) {\r\n            if(resetScroll) {\r\n                scrollboxElement.scrollLeft = marginSize - initialScrollOffset;\r\n                scrollboxElement.scrollTop = marginSize - initialScrollOffset;\r\n            } else if(delta.x || delta.x) {\r\n                //adjusting scrolling the same amount, so screen is left on the same position\r\n                const scrollX = scrollboxElement.scrollLeft + delta.x;\r\n                const scrollY = scrollboxElement.scrollTop + delta.y;\r\n                if(scrollX >= 0)\r\n                    scrollboxElement.scrollLeft = scrollX;\r\n                if(scrollY >= 0)\r\n                    scrollboxElement.scrollTop = scrollY;\r\n            }\r\n        }\r\n\r\n        boundingRectRef.value = boundingRect;\r\n    }\r\n\r\n    return {\r\n        surfaceElem,\r\n        originElem,\r\n        updateSurface,\r\n        boundingRect: readonly(boundingRectRef),\r\n    };\r\n}\r\n\r\nexport const useSharedBlueprintSurface = createSharedComposable(() => useBlueprintSurface());\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {computed, watch, unref} from 'vue';\r\nimport type {RecipeIOModel} from '@/scripts/model/store';\r\nimport {formatIo} from '@/scripts/format';\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport {SelectedClassType, useLinkDragAndDrop, LinkDragAndDropItem, usePointAndClick} from '@/composables/drag-helpers';\r\n\r\nconst props = defineProps<{\r\n    io: RecipeIOModel;\r\n}>();\r\nconst emit = defineEmits<{\r\n    (e: 'text-update'): void;\r\n}>();\r\n\r\nconst filter = injectFilter();\r\nconst {dragStart} = useLinkDragAndDrop();\r\nconst {selectedItem, selectItem} = usePointAndClick();\r\n\r\nconst highlightBorderSide = () => {\r\n    switch(props.io.highlightBorder) {\r\n        case 1: return 'highlight-upper-border';\r\n        case -1: return 'highlight-lower-border';\r\n        default: return undefined;\r\n    }\r\n};\r\nconst computedIconClass = computed(() => {\r\n    const _highlightBorder = highlightBorderSide();\r\n    const cls = [\r\n        _highlightBorder || (unref(selectedItem)?.isSelected(props.io) ? 'selected-border' : undefined),\r\n    ].filter(Boolean);\r\n    return cls;\r\n});\r\nconst computedDescriptionClass = computed(() => {\r\n    const causesSolvingError = props.io.causesSolvingError ? 'bg-error' : '';\r\n    const cls = [\r\n        isLtr() ? 'text-left' : 'text-right',\r\n        causesSolvingError || (props.io.hasProbability ? 'bg-has-probability' : undefined),\r\n        ((filter.key == props.io.name) ? 'highlight-border' : undefined),\r\n    ].filter(Boolean);\r\n    return cls;\r\n});\r\n\r\nfunction isLtr() {\r\n    return props.io.isFlipped ? !props.io.isInput : props.io.isInput;\r\n}\r\nconst direction = computed(() => isLtr() ? 'flex-row' : 'flex-row-reverse');\r\nconst cpsSolvedTotal = computed(() => formatIo(props.io.cpsSolvedTotal, props.io) || '?');\r\nconst cpsMaxTotal = computed(() => formatIo(props.io.cpsMaxTotal, props.io));\r\n\r\nfunction filterForIo() {\r\n    if(filter.key != props.io.name) {\r\n        filter.key = props.io.name;\r\n        filter.direction = props.io.isInput ? 1 : -1;\r\n    } else {\r\n        filter.key = undefined;\r\n    }\r\n}\r\n\r\nfunction newLinkDragAndDropItem() {\r\n    //if used inline, as @pointerdown.left=\"dragStart($event, new LinkDragAndDropItem(props.io))\"\r\n    //it will be transformed to new unref(LinkDragAndDropItem)(props.io) which causes bug\r\n    return new LinkDragAndDropItem(props.io);\r\n}\r\n\r\nwatch([() => props.io.cpsSolvedTotal, () => props.io.cpsMaxTotal], () => emit('text-update'));\r\n</script>\r\n\r\n<template>\r\n    <div class=\"io-parent\" :class=\"direction\">\r\n        <icon-component\r\n            class=\"io-icon-row rounded hover-elevation\"\r\n            :class=\"computedIconClass\"\r\n            :image=\"props.io.image\"\r\n            :data-tooltip=\"props.io.label\"\r\n            :data-io-id=\"props.io.key\"\r\n            @click=\"selectItem(SelectedClassType.RecipeIOModel, props.io)\"\r\n            @pointerdown.left.stop=\"dragStart($event, newLinkDragAndDropItem())\"\r\n            @click.stop\r\n        />\r\n        <div\r\n            class=\"io-description-row text-caption hover-border\"\r\n            :class=\"computedDescriptionClass\"\r\n            @pointerdown.left.stop\r\n            @click=\"filterForIo()\"\r\n        >\r\n            {{ cpsSolvedTotal }}\r\n            <br>\r\n            {{ cpsMaxTotal }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.io-parent {\r\n    flex-wrap: nowrap;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.io-icon-row {\r\n    display: block;\r\n}\r\n.io-description-row {\r\n    display: block;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script lang=\"ts\">\r\nexport default {\r\n    inheritAttrs: false,\r\n};\r\n</script>\r\n<script setup lang=\"ts\">\r\nconst props = defineProps<{\r\n    tooltip: string;\r\n}>();\r\n</script>\r\n\r\n<template>\r\n    <v-tooltip :text=\"props.tooltip\" location=\"bottom\">\r\n        <template #activator=\"{ props: _props }\">\r\n            <v-btn v-bind=\"{..._props, ...$attrs}\" />\r\n        </template>\r\n    </v-tooltip>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiCheck, mdiPlusBox, mdiMinusBox} from '@mdi/js';\r\nimport {useNumberInputHelper} from '@/composables';\r\nimport {onMounted, unref, watch} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    modelValue: number;\r\n    min?: number;\r\n    defaultMin?: number;\r\n    max?: number;\r\n    defaultMax?: number;\r\n    defaultValue?: number;\r\n    spinIcons?: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\n\r\nconst {\r\n    updateNumber,\r\n    tempNumber,\r\n    addNumber,\r\n    resetNumber,\r\n} = useNumberInputHelper({\r\n    ...props,\r\n    apply(value) { emit('update:modelValue', value); },\r\n});\r\n\r\nwatch(() => props.modelValue, (value) => {\r\n    if(unref(tempNumber) != value)\r\n        tempNumber.value = value;\r\n});\r\nonMounted(() => { tempNumber.value = props.modelValue; });\r\n</script>\r\n\r\n<template>\r\n    <v-text-field\r\n        v-model=\"tempNumber\"\r\n        density=\"compact\"\r\n        hide-details\r\n        clearable\r\n        persistent-clear\r\n        type=\"number\"\r\n        :max=\"props.max\"\r\n        :min=\"props.min\"\r\n        :append-icon=\"props.spinIcons ? mdiPlusBox : undefined\"\r\n        :prepend-icon=\"props.spinIcons ? mdiMinusBox : undefined\"\r\n        :append-inner-icon=\"mdiCheck\"\r\n        @blur=\"updateNumber\"\r\n        @click:append-inner=\"updateNumber\"\r\n        @click:clear=\"resetNumber\"\r\n        @click:append=\"addNumber(1)\"\r\n        @click:prepend=\"addNumber(-1)\"\r\n    />\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectBlueprintModel, type BlueprintItemModel} from '@/scripts/model/store';\r\nimport {Objective, type ObjectiveType} from '@/scripts/types';\r\nimport {mdiDelete, mdiLinkOff, mdiMenu, mdiLock, mdiBullseye, mdiBullseyeArrow, mdiPriorityLow} from '@mdi/js';\r\nimport {computed, ref} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    item: BlueprintItemModel;\r\n}>();\r\n\r\nconst blueprintModel = injectBlueprintModel();\r\nconst menuOpened = ref(false);\r\n\r\ntype OptionType = 'lock' | keyof typeof Objective;\r\nconst itemOptions = computed(() => {\r\n    const options: OptionType[] = [];\r\n    if(props.item.isLocked) {\r\n        options.push('lock');\r\n    }\r\n    for(const [key, value] of Object.entries(Objective)) {\r\n        if(value === props.item.objective) {\r\n            options.push(key as keyof typeof Objective);\r\n        }\r\n    }\r\n    return options;\r\n});\r\nfunction changeObjective(objective: ObjectiveType) {\r\n    const oldObjective = props.item.objective;\r\n    if(oldObjective === objective) {\r\n        props.item.setObjective(undefined);\r\n    } else {\r\n        props.item.setObjective(objective);\r\n    }\r\n}\r\nfunction changeUpgradeMode(isUpgradeMode?: boolean) {\r\n    blueprintModel.setUpgradeMode((isUpgradeMode === undefined) ? !blueprintModel.isUpgradeMode : isUpgradeMode);\r\n}\r\n</script>\r\n\r\n<template>\r\n    <v-btn size=\"x-small\" color=\"secondary\" variant=\"outlined\" @pointerdown.left.stop @click.stop>\r\n        <v-icon :icon=\"mdiMenu\" />\r\n        <v-menu v-model=\"menuOpened\" density=\"compact\" activator=\"parent\" :close-on-content-click=\"false\">\r\n            <v-list>\r\n                <v-list-item title=\"Count\">\r\n                    <input-number\r\n                        class=\"count-number\"\r\n                        :model-value=\"props.item.count\"\r\n                        :min=\"0\"\r\n                        :default-value=\"1\"\r\n                        spin-icons\r\n                        @update:model-value=\"props.item.setCount($event);\"\r\n                    />\r\n                </v-list-item>\r\n                <v-list-item class=\"d-flex justify-center\">\r\n                    <v-btn-toggle color=\"primary\" multiple :model-value=\"itemOptions\">\r\n                        <tooltip-button tooltip=\"Lock\" :icon=\"mdiLock\" value=\"lock\" @click=\"props.item.setLocked(!props.item.isLocked)\" />\r\n                        <tooltip-button\r\n                            tooltip=\"Primary Objective\"\r\n                            :icon=\"mdiBullseyeArrow\"\r\n                            value=\"Primary\"\r\n                            @click=\"changeObjective(Objective.Primary)\"\r\n                        />\r\n                        <tooltip-button\r\n                            tooltip=\"Secondary Objective\"\r\n                            :icon=\"mdiBullseye\"\r\n                            value=\"Secondary\"\r\n                            @click=\"changeObjective(Objective.Secondary)\"\r\n                        />\r\n                        <tooltip-button\r\n                            tooltip=\"Low Priority Objective\"\r\n                            :icon=\"mdiPriorityLow\"\r\n                            value=\"LowPriority\"\r\n                            @click=\"changeObjective(Objective.LowPriority)\"\r\n                        />\r\n                    </v-btn-toggle>\r\n                </v-list-item>\r\n                <v-divider v-if=\"props.item.isUpgradable()\" />\r\n                <v-list-item v-if=\"props.item.isUpgradable()\" title=\"Upgrade Mode\" @click.stop=\"changeUpgradeMode();\">\r\n                    <template #prepend>\r\n                        <v-switch\r\n                            class=\"mr-5\"\r\n                            color=\"primary\"\r\n                            :model-value=\"blueprintModel.isUpgradeMode\"\r\n                            hide-details\r\n                            @update:model-value=\"changeUpgradeMode\"\r\n                            @click.stop\r\n                        />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-divider />\r\n                <v-list-item\r\n                    :prepend-icon=\"mdiLinkOff\"\r\n                    title=\"Delete all links\"\r\n                    @click=\"props.item.deleteAllLinks(); menuOpened = false;\"\r\n                />\r\n                <v-list-item\r\n                    :prepend-icon=\"mdiDelete\"\r\n                    title=\"Delete\"\r\n                    @click=\"props.item.deleteThis()\"\r\n                />\r\n            </v-list>\r\n        </v-menu>\r\n    </v-btn>\r\n</template>\r\n\r\n<style scoped>\r\n.count-number {\r\n    width: 15em;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {ref, unref, computed, onMounted, watch, nextTick} from 'vue';\r\nimport {injectBlueprintModel, type BlueprintItemModel, type RecipeIOModel} from '@/scripts/model/store';\r\nimport {mdiCursorMove, mdiTransferDown, mdiTransferUp} from '@mdi/js';\r\nimport {useElementHover, type MaybeElement} from '@vueuse/core';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {Rect, type ReadonlyRectType} from '@/scripts/geometry';\r\nimport {SelectedClassType, screenToClient, useItemDragAndDrop, usePointAndClick} from '@/composables/drag-helpers';\r\nimport {useEventHook} from '@/composables';\r\n\r\nconst props = defineProps<{\r\n    item: BlueprintItemModel;\r\n    parent: MaybeElement;\r\n}>();\r\nconst emit = defineEmits<{\r\n    (e: 'recipes-menu-activate', item: BlueprintItemModel, activator: Element): void;\r\n}>();\r\n\r\nconst settings = injectSettings();\r\nconst blueprintModel = injectBlueprintModel();\r\nconst mainDivElement = ref<HTMLElement | null>(null);\r\n//separate state, because useItemDragAndDrop is shared between all items\r\nconst isDragging = ref(false);\r\nconst itemStateColor = computed(() => settings.itemStateColor[props.item.state]);\r\nconst isHovered = useElementHover(mainDivElement);\r\nconst {hooks: itemHooks, dragStart} = useItemDragAndDrop();\r\nconst {selectItem, selectedItem} = usePointAndClick();\r\n\r\nuseEventHook([itemHooks.notifyCancel, itemHooks.notifyDrop], () => {\r\n    isDragging.value = false;\r\n});\r\n\r\nconst computedElevation = computed(() => {\r\n    if(unref(isDragging))\r\n        return 'dragging-elevation-static';\r\n    if(unref(isHovered))\r\n        return 'hover-elevation-static';\r\n    return 0;\r\n});\r\n\r\nconst computeStyle = computed(() => {\r\n    return {\r\n        left: `${props.item.rect.x}px`,\r\n        top: `${props.item.rect.y}px`,\r\n    };\r\n});\r\n\r\nconst computedSelectedClass = computed(() => {\r\n    if(unref(selectedItem)?.isSelected(props.item))\r\n        return 'selected-border';\r\n    return 'unselected-border';\r\n});\r\n\r\nfunction updateIoRects() {\r\n    nextTick(() => {\r\n        const mainDiv = unref(mainDivElement);\r\n        const _recipe = props.item?.selectedRecipe;\r\n        if(!mainDiv || !_recipe)\r\n            return;\r\n\r\n        const mainDivrect: ReadonlyRectType = screenToClient(props.parent, mainDiv.getBoundingClientRect(), settings.scale);\r\n        props.item.setRect(props.item.rect.assignSize(mainDivrect));\r\n        props.item.initializationCompleted();\r\n\r\n        const ioElements = mainDiv.querySelectorAll('[data-io-id]');\r\n        const ioScreenRects: ReadonlyRectType[] = [];\r\n        const ioList: RecipeIOModel[] = [];\r\n        for(let i = 0; i < ioElements.length; i++) {\r\n            const ioElement = ioElements.item(i);\r\n            const key = ioElement.getAttribute('data-io-id') || '';\r\n            const io = _recipe.itemByKey(key);\r\n            if(io) {\r\n                ioScreenRects.push(ioElement.getBoundingClientRect());\r\n                ioList.push(io);\r\n            }\r\n        }\r\n        const ioClientRects = screenToClient(props.parent, ioScreenRects, settings.scale);\r\n\r\n        ioList.forEach((io, index) => { io.setRect(ioClientRects[index] || Rect.assign()); });\r\n    });\r\n}\r\n\r\nconst leftSide = computed(() => {\r\n    const _recipe = props.item?.selectedRecipe;\r\n    const io = (props.item.isFlipped ? _recipe?.visibleOutput() : _recipe?.visibleInput()) || [];\r\n    return {\r\n        io: () => io,\r\n        count: io.length,\r\n    };\r\n});\r\nconst rightSide = computed(() => {\r\n    const _recipe = props.item?.selectedRecipe;\r\n    const io = (props.item.isFlipped ? _recipe?.visibleInput() : _recipe?.visibleOutput()) || [];\r\n    return {\r\n        io: () => io,\r\n        count: io.length,\r\n    };\r\n});\r\n\r\nonMounted(updateIoRects);\r\nwatch([\r\n    () => props.item.selectedRecipe,\r\n    () => props.item.isFlipped,\r\n    () => props.item.linksGenerationNumber,\r\n], updateIoRects);\r\nwatch(() => props.item.rect, (value, oldValue) => {\r\n    //size is updated by function updateIoRects\r\n    if((value.x !== oldValue.x) || (value.y !== oldValue.y)) {\r\n        updateIoRects();\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"mainDivElement\"\r\n        class=\"rounded parent-div\"\r\n        :class=\"[computedElevation, itemStateColor, computedSelectedClass]\"\r\n        :style=\"computeStyle\"\r\n        :data-item-id=\"props.item.key\"\r\n        @pointerdown.left.stop=\"dragStart($event, props.item); isDragging = true;\"\r\n    >\r\n        <div class=\"bg-primary title-row\">\r\n            <div class=\"title-text text-caption\">\r\n                {{ props.item.label }}\r\n            </div>\r\n            <div class=\"float-right mr-1\">\r\n                <item-menu-button :item=\"props.item\" />\r\n            </div>\r\n            <div v-if=\"settings.pointAndClickEnabled\" class=\"float-right mr-1\">\r\n                <v-btn\r\n                    size=\"x-small\"\r\n                    color=\"secondary\"\r\n                    variant=\"flat\"\r\n                    @pointerdown.left.stop\r\n                    @click.stop=\"selectItem(SelectedClassType.BlueprintItemModel, props.item)\"\r\n                >\r\n                    <v-icon :icon=\"mdiCursorMove\" />\r\n                </v-btn>\r\n            </div>\r\n            <div v-if=\"blueprintModel.isUpgradeMode && props.item.isUpgradable()\" class=\"float-right mr-1\">\r\n                <v-btn\r\n                    size=\"x-small\"\r\n                    color=\"secondary\"\r\n                    variant=\"flat\"\r\n                    rounded=\"0\"\r\n                    :disabled=\"!props.item.isUpgradable(1)\"\r\n                    @pointerdown.left.stop\r\n                    @click.stop=\"props.item.upgrade(1)\"\r\n                >\r\n                    <v-icon :icon=\"mdiTransferUp\" />\r\n                </v-btn>\r\n                <v-btn\r\n                    size=\"x-small\"\r\n                    color=\"secondary\"\r\n                    variant=\"flat\"\r\n                    rounded=\"0\"\r\n                    :disabled=\"!props.item.isUpgradable(-1)\"\r\n                    @pointerdown.left.stop\r\n                    @click.stop=\"props.item.upgrade(-1)\"\r\n                >\r\n                    <v-icon :icon=\"mdiTransferDown\" />\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n        <div class=\"main-row\">\r\n            <div>\r\n                <template v-for=\"io in leftSide.io()\" :key=\"io.key\">\r\n                    <blueprint-single-io\r\n                        :io=\"io\"\r\n                        @text-update=\"updateIoRects\"\r\n                    />\r\n                </template>\r\n            </div>\r\n            <blueprint-single-factory\r\n                :item=\"props.item\"\r\n                @recipes-menu-activate=\"(activator: Element) => emit('recipes-menu-activate', props.item, activator)\"\r\n            />\r\n            <div>\r\n                <template v-for=\"io in rightSide.io()\" :key=\"io.key\">\r\n                    <blueprint-single-io\r\n                        :io=\"io\"\r\n                        @text-update=\"updateIoRects\"\r\n                    />\r\n                </template>\r\n            </div>\r\n        </div>\r\n        <blueprint-single-item-status :item=\"props.item\" />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.parent-div {\r\n    position: absolute;\r\n    user-select: none;\r\n    touch-action: none;\r\n}\r\n.title-row {\r\n    display: block;\r\n    position: relative;\r\n    height: 1.7rem;\r\n    overflow: hidden;\r\n}\r\n.main-row {\r\n    flex-wrap: nowrap;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: start;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {LogisticModel} from '@/scripts/model/store';\r\nimport {computed, unref} from 'vue';\r\nimport {formatTransport} from '@/scripts/format';\r\nimport {mdiTransferLeft, mdiTransferRight, mdiLock, mdiLockOpenVariant} from '@mdi/js';\r\n\r\nconst props = defineProps<{\r\n    logistic?: LogisticModel;\r\n}>();\r\nconst selectedTransport = computed(() => props.logistic?.selectedTransport);\r\nconst count = computed(() => unref(selectedTransport)?.count || 0);\r\nconst countPerSecond = computed(() => {\r\n    const _selectedTransport = unref(selectedTransport);\r\n    const _count = unref(count) || 0;\r\n    if(_selectedTransport && (_count > 1)) {\r\n        return formatTransport(_selectedTransport.countPerSecond, _selectedTransport);\r\n    }\r\n    return '';\r\n});\r\nconst totalCountPerSecond = computed(() => {\r\n    const _selectedTransport = unref(selectedTransport);\r\n    const _count = unref(count) || 0;\r\n    if(_selectedTransport) {\r\n        const _countPerSecond = _count * _selectedTransport.countPerSecond;\r\n        return formatTransport(_countPerSecond, _selectedTransport);\r\n    }\r\n    return '';\r\n});\r\nconst isLocked = computed(() => props.logistic?.isLocked);\r\n\r\n</script>\r\n\r\n<template>\r\n    <v-list-item>\r\n        <v-list-item-title>\r\n            <div class=\"font-weight-bold text-caption\">\r\n                {{ selectedTransport?.label }}\r\n            </div>\r\n            <div class=\"transport-menu-item\">\r\n                {{ count }}&nbsp;x&nbsp;\r\n                <icon-component :image=\"selectedTransport?.item?.image\" />&nbsp;\r\n                {{ totalCountPerSecond }}&nbsp;\r\n                <span class=\"text-caption\">{{ countPerSecond }}</span>\r\n            </div>\r\n        </v-list-item-title>\r\n        <template #prepend>\r\n            <v-btn icon size=\"x-small\" @click=\"props.logistic?.switchSelectedTransport(-1)\">\r\n                <v-icon :icon=\"mdiTransferLeft\" />\r\n            </v-btn>\r\n            <v-btn icon size=\"x-small\" class=\"mr-2\" @click=\"props.logistic?.switchSelectedTransport(1)\">\r\n                <v-icon :icon=\"mdiTransferRight\" />\r\n            </v-btn>\r\n        </template>\r\n        <template #append>\r\n            <v-btn icon size=\"x-small\" class=\"ml-2\" @click=\"props.logistic?.toggleLockSelected()\">\r\n                <v-icon :icon=\"isLocked ? mdiLock : mdiLockOpenVariant\" :color=\"isLocked ? 'success' : ''\" />\r\n            </v-btn>\r\n        </template>\r\n    </v-list-item>\r\n</template>\r\n\r\n<style scoped>\r\n.transport-menu-item {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {LinkModel} from '@/scripts/model/store';\r\nimport {computed, ref, watch} from 'vue';\r\nimport {mdiLinkOff} from '@mdi/js';\r\nimport {formatIo} from '@/scripts/format';\r\n\r\nconst props = defineProps<{\r\n    link?: LinkModel;\r\n}>();\r\n\r\nconst menuOpened = ref(false);\r\nconst logisticSet = computed(() => {\r\n    if(!props.link?.flow) {\r\n        return [];\r\n    }\r\n    const _logistic = props.link?.logistic;\r\n    if(!_logistic?.logisticCount) {\r\n        return [];\r\n    }\r\n    return [..._logistic.logistic];\r\n});\r\nconst flowTotal = computed(() => {\r\n    const io = props.link?.input || props.link?.output;\r\n    return io ? formatIo(props.link.flow, io) : '';\r\n});\r\n\r\nwatch(menuOpened, (value, oldValue) => {\r\n    if(!oldValue && value) {\r\n        props.link?.logistic?.resetSelectedTransport();\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-menu\r\n        v-model=\"menuOpened\"\r\n        density=\"compact\"\r\n        activator=\"parent\"\r\n        :close-on-content-click=\"false\"\r\n    >\r\n        <v-list>\r\n            <v-list-item\r\n                :prepend-icon=\"mdiLinkOff\"\r\n                title=\"Delete\"\r\n                @click=\"props.link?.deleteThis(); menuOpened = false;\"\r\n            />\r\n            <template v-if=\"logisticSet.length\">\r\n                <v-list-item class=\"minwidth\">\r\n                    <v-list-item-title>\r\n                        <div class=\"transport-menu-item\">\r\n                            <icon-component :image=\"props.link?.input?.image\" /> {{ flowTotal }}\r\n                        </div>\r\n                    </v-list-item-title>\r\n                </v-list-item>\r\n                <template v-for=\"logistic in logisticSet\" :key=\"logistic.name\">\r\n                    <logistic-panel :logistic=\"logistic\" />\r\n                </template>\r\n            </template>\r\n        </v-list>\r\n    </v-menu>\r\n</template>\r\n\r\n<style scoped>\r\n.transport-menu-item {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {LinkModel} from '@/scripts/model/store';\r\nimport {computed, ref, unref} from 'vue';\r\nimport {Rect} from '@/scripts/geometry';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst props = defineProps<{\r\n    link?: LinkModel;\r\n}>();\r\n\r\nconst settings = injectSettings();\r\nconst mainDivElement = ref<HTMLElement | null>(null);\r\nconst computedStyle = computed(() => {\r\n    const link = props.link;\r\n    let middlePoint = link?.buildShape()?.middlePoint;\r\n    const mainDiv = unref(mainDivElement);\r\n    if(!middlePoint || !mainDiv)\r\n        return {};\r\n    let mainDivRect = Rect.assign(mainDiv.getBoundingClientRect());\r\n    if(settings.scale && (settings.scale != 1)) {\r\n        mainDivRect = mainDivRect.scaleSize(1 / settings.scale);\r\n    }\r\n    middlePoint = middlePoint.offsetBy({x: mainDivRect.width / 2, y: mainDivRect.height / 2}, -1);\r\n    return {\r\n        left: middlePoint.x + 'px',\r\n        top: middlePoint.y + 'px',\r\n    };\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"mainDivElement\"\r\n        class=\"rounded-pill link-connector bg-window-idle hover-border\"\r\n        :style=\"computedStyle\"\r\n        @pointerdown.left.stop\r\n        @click.stop\r\n    >\r\n        <icon-component :image=\"props.link?.input?.image\" />\r\n        <link-menu :link=\"props.link\" />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.link-connector {\r\n    position: absolute;\r\n    user-select: none;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {LinkModel} from '@/scripts/model/store';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {computed} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    link?: LinkModel;\r\n    color?: string;\r\n}>();\r\n\r\nconst settings = injectSettings();\r\nconst buildLink = computed(() => {\r\n    const link0 = props.link;\r\n    const svgLink = link0?.buildShape()?.svgLink;\r\n    return svgLink || '';\r\n});\r\n\r\nconst colorClass = computed(() => {\r\n    const defaultColor = 'link-stroke-black';\r\n    if(props.color)\r\n        return props.color;\r\n    if(settings.colorfulLinks)\r\n        return props.link?.colorClass || defaultColor;\r\n    return defaultColor;\r\n});\r\n</script>\r\n\r\n<template>\r\n    <path\r\n        :d=\"buildLink\"\r\n        fill=\"none\"\r\n        :stroke-width=\"settings.iconSize\"\r\n        class=\"link\"\r\n        :class=\"colorClass\"\r\n    />\r\n</template>\r\n\r\n<style scoped>\r\n.link:hover {\r\n    opacity: 0.7;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\n\r\nconst blueprintModel = injectBlueprintModel();\r\n</script>\r\n\r\n<template>\r\n    <svg class=\"background-svg\">\r\n        <blueprint-link\r\n            v-if=\"blueprintModel.tempLink\"\r\n            :key=\"blueprintModel.tempLink.key\"\r\n            :link=\"blueprintModel.tempLink\"\r\n            color=\"link-stroke-black\"\r\n        />\r\n\r\n        <blueprint-link\r\n            v-for=\"_link in blueprintModel.links\"\r\n            :key=\"_link.key\"\r\n            :link=\"_link\"\r\n        />\r\n    </svg>\r\n    <template v-for=\"_link in blueprintModel.links\" :key=\"_link.key\">\r\n        <blueprint-link-connector :link=\"_link\" />\r\n    </template>\r\n</template>\r\n\r\n<style scoped>\r\n.background-svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: visible;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {unref, computed, reactive, toRaw, ref, watch, nextTick} from 'vue';\r\nimport {\r\n    injectBlueprintModel,\r\n    type BlueprintItemModel,\r\n    type RecipeIOModel,\r\n} from '@/scripts/model/store';\r\nimport {Rect, type ReadonlyPointType} from '@/scripts/geometry';\r\nimport {BlueprintItemState, type BlueprintItemStateValues} from '@/scripts/types';\r\nimport {screenToClient, SelectedClassType, useLinkDragAndDrop, usePointAndClick, useSharedBlueprintSurface} from '@/composables/drag-helpers';\r\nimport {useEventHook} from '@/composables';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\ntype BetweenSelfIo = {\r\n    upper?: RecipeIOModel;\r\n    upperIndex?: number;\r\n    lower?: RecipeIOModel;\r\n    lowerIndex?: number;\r\n};\r\n\r\nconst blueprintModel = injectBlueprintModel();\r\nconst settings = injectSettings();\r\nlet hoveringItem: BlueprintItemModel | undefined = undefined;\r\nlet hoveringBetweenIo: BetweenSelfIo | undefined = undefined;\r\n\r\nconst {hooks, isDragging, currentItem, movableElem} = useLinkDragAndDrop();\r\nconst {notifySelected} = usePointAndClick();\r\nconst {boundingRect} = useSharedBlueprintSurface();\r\n\r\nconst draggableClass = ref('');\r\nconst draggableStyle = computed(() => {\r\n    const _isDragging = unref(isDragging);\r\n    const _dragRect = unref(currentItem)?.dragging?.rect;\r\n    //keep far offscreen, so drag-n-drop processor could get width and height\r\n    if(!_isDragging || !_dragRect) {\r\n        return {};\r\n    }\r\n    return {\r\n        left: `${_dragRect.x}px`,\r\n        top: `${_dragRect.y}px`,\r\n    };\r\n});\r\n\r\nwatch(isDragging, (value) => {\r\n    if(!value) {\r\n        draggableClass.value = 'link-draggable-hidden';\r\n    } else {\r\n        //this is against flickering, so first position is set, and next icon is shown\r\n        //otherwise it sometimes jump out of somewhere\r\n        nextTick(() => {\r\n            draggableClass.value = '';\r\n        });\r\n    }\r\n}, {immediate: true});\r\n\r\nfunction clearHoveringItem() {\r\n    if(hoveringItem) {\r\n        hoveringItem.updateLinkState();\r\n        hoveringItem = undefined;\r\n    }\r\n}\r\n\r\nfunction clearHoveringBetweenIo() {\r\n    if(hoveringBetweenIo) {\r\n        if(hoveringBetweenIo.lower) {\r\n            hoveringBetweenIo.lower.setHighlightBorder(0);\r\n        }\r\n        if(hoveringBetweenIo.upper) {\r\n            hoveringBetweenIo.upper.setHighlightBorder(0);\r\n        }\r\n        hoveringBetweenIo = undefined;\r\n    }\r\n}\r\n\r\ntype BlueprintItemWithElement = {\r\n    item: BlueprintItemModel;\r\n    element: HTMLElement;\r\n};\r\nfunction detectItemFromPoint(screenPoint: ReadonlyPointType) {\r\n    const elements = document.elementsFromPoint(screenPoint.x, screenPoint.y);\r\n    let item: Partial<BlueprintItemWithElement> = {};\r\n    elements.find((element) => {\r\n        const itemId = element.getAttribute('data-item-id');\r\n        if(itemId) {\r\n            const blueprintItem = blueprintModel.itemByKey(itemId);\r\n            if(blueprintItem) {\r\n                item = {item: blueprintItem, element: element as HTMLElement};\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    });\r\n    return item;\r\n}\r\n\r\ntype SourceItemWithElement = {\r\n    sourceItem: BlueprintItemModel;\r\n    sourceElem: HTMLElement;\r\n};\r\nfunction getSelfLinkNeighbourIo({sourceItem, sourceElem}: SourceItemWithElement, sourceIo: RecipeIOModel, screenPoint: ReadonlyPointType) {\r\n    const clientPoint = screenToClient(sourceElem, Rect.assign(screenPoint), settings.scale).offsetBy(sourceItem.rect);\r\n    //check if mouse point is between io rects\r\n    const neighbourIo = (sourceIo.isInput ?\r\n        sourceItem.selectedRecipe?.visibleInput() :\r\n        sourceItem.selectedRecipe?.visibleOutput()) || [];\r\n\r\n    const betweenIo: BetweenSelfIo = {};\r\n    for(let i = 0; i < neighbourIo.length; i++) {\r\n        const io1 = neighbourIo[i];\r\n        const midPoint1 = io1.rect.middleRectPoint();\r\n        //if midpoint is above client rect, then mouse is in between this io and previous io\r\n        if(midPoint1.y > clientPoint.y) {\r\n            betweenIo.lowerIndex = i;\r\n            betweenIo.lower = io1;\r\n            if(i > 0) {\r\n                betweenIo.upperIndex = i - 1;\r\n                betweenIo.upper = neighbourIo[betweenIo.upperIndex];\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    //if lower is found, then mouse is below last io\r\n    if(!betweenIo.lower) {\r\n        betweenIo.upperIndex = neighbourIo.length - 1;\r\n        betweenIo.upper = neighbourIo[betweenIo.upperIndex];\r\n    }\r\n    return betweenIo;\r\n}\r\n\r\nfunction processSelfLinkInsertionPoint(betweenIo: BetweenSelfIo) {\r\n    if(!betweenIo.upper && !betweenIo.lower) {\r\n        //impossible, maybe exactly midpoint\r\n        clearHoveringBetweenIo();\r\n        return;\r\n    }\r\n    if((betweenIo.lowerIndex === hoveringBetweenIo?.lowerIndex) && (betweenIo.upperIndex === hoveringBetweenIo?.upperIndex)) {\r\n        return;\r\n    }\r\n    clearHoveringBetweenIo();\r\n    //on lower io highlight upper border\r\n    betweenIo.lower?.setHighlightBorder(1);\r\n    betweenIo.upper?.setHighlightBorder(-1);\r\n    hoveringBetweenIo = betweenIo;\r\n}\r\n\r\nfunction processOtherFactoryLink(sourceIo: RecipeIOModel, draggingIo: RecipeIOModel, targetItem: BlueprintItemModel) {\r\n    hoveringItem = targetItem;\r\n    hoveringItem.updateLinkState(sourceIo);\r\n    draggingIo.setFlipped(targetItem.isFlipped);\r\n}\r\n\r\nfunction processTargetItem(sourceItem: RecipeIOModel, draggingItem: RecipeIOModel, screenPoint: ReadonlyPointType) {\r\n    const {item, element} = detectItemFromPoint(screenPoint);\r\n    if(!item || !element) {\r\n        clearHoveringItem();\r\n        clearHoveringBetweenIo();\r\n        return;\r\n    }\r\n    if(toRaw(item) === toRaw(sourceItem?.ownerItem)) {\r\n        clearHoveringItem();\r\n        const betweenIo = getSelfLinkNeighbourIo({sourceItem: item, sourceElem: element}, sourceItem, screenPoint);\r\n        processSelfLinkInsertionPoint(betweenIo);\r\n        return;\r\n    }\r\n    if(toRaw(item) === toRaw(hoveringItem)) {\r\n        return;\r\n    }\r\n    clearHoveringItem();\r\n    clearHoveringBetweenIo();\r\n    processOtherFactoryLink(sourceItem, draggingItem, item);\r\n}\r\n\r\nfunction processSwapIo(betweenIo: BetweenSelfIo, sourceIo: RecipeIOModel) {\r\n    if(!betweenIo.upper && !betweenIo.lower) {\r\n        return false;\r\n    }\r\n    if((toRaw(betweenIo.lower) === toRaw(sourceIo)) || (toRaw(betweenIo.upper) === toRaw(sourceIo))) {\r\n        return false;\r\n    }\r\n    const selectedRecipe = sourceIo.ownerItem?.selectedRecipe;\r\n    if(!selectedRecipe) {\r\n        return false;\r\n    }\r\n    selectedRecipe.swapIo(sourceIo.key, [betweenIo.upperIndex, betweenIo.lowerIndex]);\r\n    return true;\r\n}\r\n\r\nfunction processLink(sourceItem: RecipeIOModel, _hoveringItem: BlueprintItemModel, hoveringState: BlueprintItemStateValues) {\r\n    if(hoveringState === BlueprintItemState.CanLinkTarget) {\r\n        _hoveringItem.createLink(sourceItem);\r\n        return true;\r\n    } else if(hoveringState === BlueprintItemState.CanLinkWithRecipeChange) {\r\n        const recipe = _hoveringItem.possibleRecipeForIo(sourceItem);\r\n        if(recipe) {\r\n            _hoveringItem.selectRecipe(recipe);\r\n            _hoveringItem.createLink(sourceItem);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nuseEventHook(hooks.notifyStart, (param) => {\r\n    const item = param.item;\r\n    const {link, target} = reactive(item.source.createTempLink());\r\n    target.setFlipped(item.source.isFlipped);\r\n    item.link = link;\r\n    item.dragging = target;\r\n});\r\n\r\nuseEventHook(hooks.notifyDrop, (param) => {\r\n    const sourceItem = param.item.source;\r\n    if(sourceItem && hoveringItem) {\r\n        processLink(sourceItem, hoveringItem, hoveringItem.state);\r\n    } else if(sourceItem && hoveringBetweenIo) {\r\n        processSwapIo(hoveringBetweenIo, sourceItem);\r\n    }\r\n    clearHoveringItem();\r\n    clearHoveringBetweenIo();\r\n    blueprintModel.clearTempLink();\r\n});\r\n\r\nuseEventHook(hooks.notifyCancel, () => blueprintModel.clearTempLink());\r\n\r\nuseEventHook(hooks.notifyMove, (param) => {\r\n    const draggingItem = param.item.dragging;\r\n    if(draggingItem) {\r\n        draggingItem.setRect(param.clientRect.limit(unref(boundingRect)));\r\n        processTargetItem(param.item.source, draggingItem, param.screenRect);\r\n    }\r\n});\r\n\r\nuseEventHook(notifySelected, (param) => {\r\n    if(param.item.clazz != SelectedClassType.RecipeIOModel) {\r\n        return;\r\n    }\r\n    const sourceItem = param.item.item as RecipeIOModel;\r\n    const {item: _hoveringItem, element} = detectItemFromPoint(param.screenPosition);\r\n    if(!_hoveringItem || !element) {\r\n        return;\r\n    }\r\n    if(toRaw(_hoveringItem) === toRaw(sourceItem?.ownerItem)) {\r\n        const betweenIo = getSelfLinkNeighbourIo({sourceItem: _hoveringItem, sourceElem: element}, sourceItem, param.screenPosition);\r\n        if(processSwapIo(betweenIo, sourceItem)) {\r\n            param.wasHandled();\r\n        }\r\n        return;\r\n    }\r\n    const linkState = _hoveringItem.calculateLinkState(sourceItem);\r\n    if(processLink(sourceItem, _hoveringItem, linkState)) {\r\n        param.wasHandled();\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-sheet\r\n        ref=\"movableElem\"\r\n        class=\"rounded dragging-elevation link-draggable hover-background\"\r\n        :class=\"draggableClass\"\r\n        :style=\"draggableStyle\"\r\n    >\r\n        <icon-component :image=\"currentItem?.source?.image || ''\" />\r\n    </v-sheet>\r\n</template>\r\n\r\n<style scoped>\r\n.link-draggable {\r\n    position: absolute;\r\n    z-index: 5000;\r\n    touch-action: none;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {GameRecipeIOFlags} from '#types/constants';\r\nimport type {GameRecipe, GameRecipeIO} from '#types/game-data';\r\nimport {injectGameData} from '@/scripts/data';\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport type {BlueprintItemModel} from '@/scripts/model/store';\r\nimport {mdiArrowRight, mdiContentPaste} from '@mdi/js';\r\nimport {useDebounceFn} from '@vueuse/core';\r\nimport {computed, nextTick, ref, unref, watch} from 'vue';\r\n\r\nconst gameData = injectGameData();\r\nconst filter = injectFilter();\r\n\r\ntype Activator = {item: BlueprintItemModel; activator: Element};\r\nconst item = ref<BlueprintItemModel | undefined>(undefined);\r\nconst activator = ref<Element | undefined>(undefined);\r\nconst active = ref<boolean>(false);\r\nconst search = ref<string>('');\r\nconst allRecipes = ref<GameRecipe[]>([]);\r\nconst recipes = ref<GameRecipe[]>([]);\r\nlet waitingForClose: Activator | undefined = undefined;\r\n\r\nconst pageSize = 10;\r\nconst page = ref(1);\r\nconst maxPages = computed(() => (Math.ceil(unref(allRecipes).length / pageSize)));\r\nconst pages = computed(() => (Math.ceil(unref(recipes).length / pageSize) || 1));\r\nconst currentPage = computed(() => {\r\n    const start = (unref(page) - 1) * pageSize;\r\n    return unref(recipes).slice(start, start + pageSize);\r\n});\r\nconst canPasteSeacrhValue = computed(() => filter.key ? mdiContentPaste : '');\r\n\r\nfunction recipeSelected(name: string) {\r\n    unref(item)?.selectRecipe(name);\r\n}\r\n\r\nfunction performActivate(_activatorObj: Activator) {\r\n    activator.value = _activatorObj.activator;\r\n    nextTick(() => {\r\n        active.value = true;\r\n\r\n        const sameItem = (unref(item)?.key == _activatorObj.item.key);\r\n        if(!sameItem) {\r\n            item.value = _activatorObj.item;\r\n            allRecipes.value = [..._activatorObj.item.recipes];\r\n            recipes.value = allRecipes.value;\r\n            page.value = 1;\r\n            search.value = '';\r\n        }\r\n    });\r\n}\r\n\r\nfunction activate(_item: BlueprintItemModel, _activator: Element) {\r\n    if(_item.recipesCount <= 1)\r\n        return;\r\n    const sameItem = (unref(item)?.key == _item.key);\r\n    if(sameItem && unref(active)) {\r\n        //menu will close itself\r\n        active.value = false;\r\n        return;\r\n    }\r\n\r\n    //menu implementation will capture this click too\r\n    //and it will hide just opened menu\r\n    //we need to wait a little, so all transitions are completed\r\n    const _activatorObj = {item: _item, activator: _activator};\r\n    if(unref(active)) {\r\n        waitingForClose = _activatorObj;\r\n        setTimeout(activateOnClose, 400);\r\n    } else {\r\n        performActivate(_activatorObj);\r\n    }\r\n}\r\nfunction activateOnClose() {\r\n    if(!waitingForClose)\r\n        return;\r\n    const _waitingForClose = waitingForClose;\r\n    waitingForClose = undefined;\r\n    activator.value = undefined;\r\n    nextTick(() => {\r\n        performActivate(_waitingForClose);\r\n    });\r\n}\r\n\r\nconst applyFilter = useDebounceFn(() => {\r\n    let val = unref(search);\r\n    val = val && val.trim();\r\n    if(!val) {\r\n        recipes.value = unref(allRecipes);\r\n        page.value = 1;\r\n        return;\r\n    }\r\n    const searchText = val.toLowerCase().split(/\\s+/).map((s) => s.trim());\r\n    recipes.value = unref(allRecipes).filter((recipe) => (\r\n        searchText.every((l) => !l || (\r\n            recipe.input.some((io) => io.product.lowerLabel.indexOf(l) > -1))\r\n            || recipe.output.some((io) => io.product.lowerLabel.indexOf(l) > -1),\r\n        )\r\n    ));\r\n    if(unref(page) > unref(pages)) {\r\n        page.value = unref(pages);\r\n    }\r\n}, 400, {maxWait: 1000});\r\n\r\nfunction pasteSearchValue() {\r\n    if(!filter.key)\r\n        return;\r\n    const newSearch = gameData.getGameItem(filter.key)?.label;\r\n    if(newSearch)\r\n        search.value = newSearch;\r\n}\r\n\r\nfunction filterShownRecipeIo(io: GameRecipeIO[]) {\r\n    return io.filter((i) => !(i.flags & GameRecipeIOFlags.HideInMenu));\r\n}\r\n\r\nwatch(active, (value, oldValue) => {\r\n    if(oldValue && !value) {\r\n        activator.value = undefined;\r\n    }\r\n});\r\nwatch(search, (value, oldValue) => {\r\n    if(oldValue != value) {\r\n        applyFilter();\r\n    }\r\n});\r\n\r\ndefineExpose({\r\n    activate,\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-menu v-model=\"active\" :activator=\"activator\" @click:outside=\"activateOnClose\">\r\n        <v-list density=\"compact\">\r\n            <v-list-item v-if=\"(maxPages > 1)\" class=\"minwidth\">\r\n                <v-text-field\r\n                    v-model=\"search\"\r\n                    density=\"compact\"\r\n                    :prepend-inner-icon=\"canPasteSeacrhValue\"\r\n                    hide-details\r\n                    clearable\r\n                    @click.stop\r\n                    @click:prepend-inner.stop=\"pasteSearchValue\"\r\n                />\r\n            </v-list-item>\r\n            <optimized-tooltip>\r\n                <v-list-item\r\n                    v-for=\"recipe in currentPage\"\r\n                    :key=\"recipe.name\"\r\n                    :value=\"recipe.name\"\r\n                    :active=\"(item?.selectedRecipe?.name == recipe.name)\"\r\n                    @click=\"recipeSelected(recipe.name)\"\r\n                >\r\n                    <v-list-item-title>\r\n                        <div class=\"io-menu-item\">\r\n                            <recipes-menu-io :ioarray=\"filterShownRecipeIo(recipe.input)\" />\r\n                            <v-icon class=\"d-block\" :icon=\"mdiArrowRight\" />\r\n                            <recipes-menu-io :ioarray=\"filterShownRecipeIo(recipe.output)\" />\r\n                        </div>\r\n                    </v-list-item-title>\r\n                </v-list-item>\r\n            </optimized-tooltip>\r\n            <v-list-item v-if=\"(maxPages > 1)\" class=\"minwidth\">\r\n                <v-pagination v-model=\"page\" density=\"compact\" :length=\"pages\" :total-visible=\"4\" @click.stop />\r\n            </v-list-item>\r\n        </v-list>\r\n    </v-menu>\r\n</template>\r\n\r\n<style scoped>\r\n.io-menu-item {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.minwidth {\r\n    min-width: 15rem;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, reactive, unref, watch, onMounted} from 'vue';\r\nimport {injectBlueprintModel, type BlueprintItemModel} from '@/scripts/model/store';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport RecipesMenu from './recipes-menu.vue';\r\nimport {syncRefs, useEventListener, type MaybeElement} from '@vueuse/core';\r\nimport {\r\n    SelectedClassType,\r\n    useDragAndScroll,\r\n    useItemDragAndDrop,\r\n    useLeftPanelDragAndDrop,\r\n    useLinkDragAndDrop,\r\n    useOverflowScroll,\r\n    usePointAndClick,\r\n    useSharedBlueprintSurface,\r\n} from '@/composables/drag-helpers';\r\nimport {useEventHook} from '@/composables';\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport type {ReadonlyPointType} from '@/scripts/geometry';\r\nimport type {GameItem} from '#types/game-data';\r\nimport {buildTransformStyle} from '@/scripts/util';\r\n\r\nconst settings = injectSettings();\r\nconst filter = injectFilter();\r\nconst blueprintModel = injectBlueprintModel();\r\nconst blueprintSurface = ref<MaybeElement>(null);\r\nconst blueprintCollection = ref<MaybeElement>(null);\r\nconst recipesMenuElement = ref<InstanceType<typeof RecipesMenu> | null>(null);\r\n//detects if screen was scrolled between pointer down and click, don't perform anything if was scrolled\r\nlet wasScrolled = false;\r\n\r\nconst {onStart: startDragAndScroll} = useDragAndScroll();\r\nuseOverflowScroll(blueprintSurface);\r\nconst {\r\n    hooks: leftPanelHooks,\r\n    dropZoneSurfaceElem: dropZoneSurfaceElem1,\r\n    dropZoneOriginElem: dropZoneOriginElem1,\r\n} = useLeftPanelDragAndDrop();\r\nconst {dropZoneSurfaceElem: dropZoneSurfaceElem2, dropZoneOriginElem: dropZoneOriginElem2} = useLinkDragAndDrop();\r\nconst {\r\n    hooks: itemHooks,\r\n    dropZoneSurfaceElem: dropZoneSurfaceElem3,\r\n    dropZoneOriginElem: dropZoneOriginElem3,\r\n} = useItemDragAndDrop();\r\nconst {processSelected, parentElem: dropZoneOriginElem4, notifySelected} = usePointAndClick();\r\nconst {surfaceElem, originElem, updateSurface, boundingRect} = useSharedBlueprintSurface();\r\n\r\nsyncRefs(blueprintSurface, [surfaceElem, dropZoneSurfaceElem1, dropZoneSurfaceElem2, dropZoneSurfaceElem3]);\r\nsyncRefs(blueprintCollection, [originElem, dropZoneOriginElem1, dropZoneOriginElem2, dropZoneOriginElem3, dropZoneOriginElem4]);\r\n\r\nfunction addItem(selected: GameItem, clientPosition: ReadonlyPointType) {\r\n    const item = reactive(blueprintModel.addItem(selected.name));\r\n    item.setRect(item.rect.assignPoint(clientPosition));\r\n    if(filter.key) {\r\n        const preselectRecipe = item.possibleRecipeForItem(filter.key, filter.direction);\r\n        if(preselectRecipe)\r\n            item.selectRecipe(preselectRecipe);\r\n    }\r\n}\r\nuseEventHook(leftPanelHooks.notifyDrop, (param) => addItem(param.item, param.clientRect));\r\n\r\nuseEventHook(notifySelected, (param) => {\r\n    if(wasScrolled) {\r\n        return;\r\n    }\r\n    if(param.item.clazz == SelectedClassType.Item) {\r\n        addItem(param.item.item as GameItem, param.clientPosition);\r\n        param.wasHandled();\r\n        return;\r\n    }\r\n    if(param.item.clazz == SelectedClassType.BlueprintItemModel) {\r\n        const item = param.item.item as BlueprintItemModel;\r\n        item.setRect(item.rect.assignPoint(param.clientPosition).limit(unref(boundingRect)));\r\n        param.wasHandled();\r\n        return;\r\n    }\r\n});\r\n\r\nuseEventHook([itemHooks.notifyMove, itemHooks.notifyDrop], (param) => {\r\n    const item = param.item;\r\n    item.setRect(item.rect.assignPoint(param.clientRect).limit(unref(boundingRect)));\r\n    if(param.event == 'notifyDrop') {\r\n        updateSurface(blueprintModel.items);\r\n    }\r\n});\r\n\r\nconst scaleStyle = computed(() => {\r\n    return {\r\n        transform: buildTransformStyle({scale: String(settings.scale)}),\r\n    };\r\n});\r\n\r\nwatch([() => blueprintModel.itemsGenerationNumber, () => settings.scale], () => {\r\n    //on blueprint load reset scroll position\r\n    const resetScroll = !blueprintModel.itemsGenerationNumber;\r\n    updateSurface(blueprintModel.items, resetScroll);\r\n});\r\n\r\nfunction handleScale(event: WheelEvent) {\r\n    if(settings.scrollScaleEnabled) {\r\n        if(event.deltaY < 0) {\r\n            settings.scale = Math.min(settings.scale + 0.1, 2);\r\n        } else {\r\n            settings.scale = Math.max(settings.scale - 0.1, 0.2);\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nuseEventListener('scroll', () => { wasScrolled = true; }, {capture: true, passive: true});\r\nonMounted(() => {\r\n    updateSurface(blueprintModel.items);\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"blueprintSurface\"\r\n        class=\"blueprint-surface\"\r\n        @pointerdown.left=\"startDragAndScroll($event); wasScrolled = false;\"\r\n        @click=\"processSelected($event)\"\r\n        @wheel=\"handleScale\"\r\n    >\r\n        <div\r\n            ref=\"blueprintCollection\"\r\n            class=\"blueprint-collection\"\r\n            :style=\"scaleStyle\"\r\n        >\r\n            <link-draggable />\r\n            <recipes-menu ref=\"recipesMenuElement\" />\r\n            <blueprint-links />\r\n            <optimized-tooltip>\r\n                <template\r\n                    v-for=\"item in blueprintModel.items\"\r\n                    :key=\"item.key\"\r\n                >\r\n                    <blueprint-single-item\r\n                        :item=\"item\"\r\n                        :parent=\"blueprintCollection\"\r\n                        @recipes-menu-activate=\"recipesMenuElement?.activate\"\r\n                    />\r\n                </template>\r\n            </optimized-tooltip>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.blueprint-surface {\r\n    transform-origin: 0 0;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    /* border: 1px solid red; */\r\n}\r\n.blueprint-collection {\r\n    transform-origin: 0 0;\r\n    position: relative;\r\n    overflow: visible;\r\n    /* border: 1px solid green; */\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {GameItem} from '#types/game-data';\r\nimport {injectGameData} from '@/scripts/data';\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport {syncRef, useDebounceFn} from '@vueuse/core';\r\nimport {computed, ref, unref, watch} from 'vue';\r\n\r\nconst gameData = injectGameData();\r\n\r\nconst {minTier, maxTier} = gameData.gameDescription;\r\nconst allTiers = (maxTier > minTier) ? Array.from(Array(1 + maxTier - minTier), (el, i: number) => (i + minTier)) : [];\r\nconst filter = injectFilter();\r\nconst allItems = gameData.gameItemsArray;\r\nconst filteredItems = ref(allItems);\r\n\r\nconst pageSize = 10;\r\nconst page = ref(1);\r\nconst pages = computed(() => (Math.ceil(unref(filteredItems).length / pageSize) || 1));\r\nconst currentPage = computed(() => {\r\n    const start = (unref(page) - 1) * pageSize;\r\n    return unref(filteredItems).slice(start, start + pageSize);\r\n});\r\nconst select = ref<GameItem | undefined>(undefined);\r\nconst search = ref('');\r\nconst direction = ref('0');\r\nconst tierEqual = ref('0');\r\nconst updateSearch = useDebounceFn(() => {\r\n    let val = unref(search);\r\n    val = val && val.trim();\r\n    if(!val) {\r\n        filteredItems.value = allItems;\r\n        page.value = 1;\r\n        return;\r\n    }\r\n    const searchText = val.toLowerCase().split(/\\s+/).map((s) => s.trim());\r\n    filteredItems.value = allItems.filter((item) => (\r\n        searchText.every((l) => !l || (item.lowerLabel.indexOf(l) > -1))),\r\n    );\r\n    if(unref(page) > unref(pages)) {\r\n        page.value = unref(pages);\r\n    }\r\n}, 400, {maxWait: 1000});\r\nwatch(search, (value, oldValue) => {\r\n    if(value != oldValue)\r\n        updateSearch();\r\n});\r\n\r\nsyncRef(\r\n    //use this instead of toRef, because otherwise this assignment is hard to find\r\n    computed({\r\n        get: () => filter.key,\r\n        set: (value) => { filter.key = value; },\r\n    }),\r\n    computed({\r\n        get: () => unref(select)?.name,\r\n        set: (value?: string) => { select.value = value ? gameData.getGameItem(value) : undefined; },\r\n    }),\r\n);\r\n\r\nsyncRef(\r\n    //use this instead of toRef, because otherwise this assignment is hard to find\r\n    computed({\r\n        get: () => filter.direction,\r\n        set: (value) => { filter.direction = value; },\r\n    }),\r\n    computed({\r\n        get: () => Number(unref(direction)),\r\n        set: (value: number) => { direction.value = String(value); },\r\n    }),\r\n);\r\n\r\nsyncRef(\r\n    //use this instead of toRef, because otherwise this assignment is hard to find\r\n    computed({\r\n        get: () => filter.tierEqual,\r\n        set: (value) => { filter.tierEqual = value; },\r\n    }),\r\n    computed({\r\n        get: () => Number(unref(tierEqual)),\r\n        set: (value: number) => { tierEqual.value = String(value); },\r\n    }),\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div class=\"d-flex\">\r\n        <v-autocomplete\r\n            v-model=\"select\"\r\n            v-model:search=\"search\"\r\n            clearable\r\n            no-filter\r\n            hide-details\r\n            label=\"Item\"\r\n            :items=\"currentPage\"\r\n            @focus=\"(page = 1)\"\r\n        >\r\n            <template #prepend-item>\r\n                <v-btn-toggle\r\n                    v-model=\"direction\"\r\n                    density=\"compact\"\r\n                    class=\"ml-2\"\r\n                    group\r\n                    mandatory\r\n                    variant=\"outlined\"\r\n                >\r\n                    <v-btn value=\"-1\">\r\n                        Input\r\n                    </v-btn>\r\n                    <v-btn value=\"0\">\r\n                        All\r\n                    </v-btn>\r\n                    <v-btn value=\"1\">\r\n                        Output\r\n                    </v-btn>\r\n                </v-btn-toggle>\r\n            </template>\r\n            <template #item=\"{ props, item }\">\r\n                <v-list-item v-bind=\"props\" :title=\"item.raw.label\">\r\n                    <template #prepend>\r\n                        <icon-component class=\"rounded icon-div\" :image=\"item.raw.image\" />\r\n                    </template>\r\n                </v-list-item>\r\n            </template>\r\n            <template #selection />\r\n            <template #prepend-inner>\r\n                <icon-component-tooltip\r\n                    v-if=\"select\"\r\n                    class=\"rounded icon-div\"\r\n                    :image=\"select.image\"\r\n                    :tooltip=\"select.label\"\r\n                />\r\n            </template>\r\n            <template #append-item>\r\n                <v-pagination v-model=\"page\" density=\"compact\" :length=\"pages\" :total-visible=\"5\" />\r\n            </template>\r\n        </v-autocomplete>\r\n        <v-select\r\n            v-if=\"(maxTier > minTier)\"\r\n            v-model=\"filter.tier\"\r\n            label=\"Tier\"\r\n            clearable\r\n            hide-details\r\n            :items=\"allTiers\"\r\n        >\r\n            <template #prepend-item>\r\n                <v-btn-toggle\r\n                    v-model=\"tierEqual\"\r\n                    density=\"compact\"\r\n                    group\r\n                    mandatory\r\n                    variant=\"outlined\"\r\n                >\r\n                    <v-btn value=\"-1\">\r\n                        &lt;=\r\n                    </v-btn>\r\n                    <v-btn value=\"0\">\r\n                        =\r\n                    </v-btn>\r\n                    <v-btn value=\"1\">\r\n                        &gt;=\r\n                    </v-btn>\r\n                </v-btn-toggle>\r\n                <v-list-item title=\"Group By\" @click=\"(filter.groupTier = !filter.groupTier)\">\r\n                    <template #prepend>\r\n                        <v-list-item-action start>\r\n                            <v-checkbox v-model=\"filter.groupTier\" hide-details />\r\n                        </v-list-item-action>\r\n                    </template>\r\n                </v-list-item>\r\n            </template>\r\n        </v-select>\r\n    </div>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport type {GameItem} from '#types/game-data';\r\nimport {SelectedClassType, useLeftPanelDragAndDrop, usePointAndClick} from '@/composables/drag-helpers';\r\nimport {injectFilter} from '@/scripts/filter';\r\nimport {unref} from 'vue';\r\n\r\nconst {dragStart} = useLeftPanelDragAndDrop();\r\nconst {selectedItem, selectItem} = usePointAndClick();\r\n\r\nconst filter = injectFilter();\r\n\r\nfunction computedItemClass(item: GameItem) {\r\n    if(unref(selectedItem)?.isSelected(item))\r\n        return ['selected-border'];\r\n    return [];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <icon-list-filter />\r\n        <div class=\"icon-div-parent bg-window-idle\">\r\n            <optimized-tooltip>\r\n                <template v-for=\"(group, _index1) in filter.buildFilter()\" :key=\"_index1\">\r\n                    <v-divider v-if=\"_index1\" />\r\n                    <template v-for=\"item in group\" :key=\"item.name\">\r\n                        <icon-component\r\n                            class=\"rounded icon-div hover-elevation\"\r\n                            :class=\"computedItemClass(item)\"\r\n                            :image=\"item.image\"\r\n                            :data-tooltip=\"item.label\"\r\n                            @pointerdown.left=\"dragStart($event, item)\"\r\n                            @click=\"selectItem(SelectedClassType.Item, item)\"\r\n                        />\r\n                    </template>\r\n                </template>\r\n            </optimized-tooltip>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.icon-div-parent {\r\n    line-height: 0px;\r\n    font-size: 0px;\r\n    user-select: none;\r\n}\r\n.icon-div {\r\n    display: inline-block;\r\n}\r\n.icon-draggable {\r\n    position: fixed;\r\n    z-index: 5000;\r\n}\r\n</style>\r\n","export default \"__VITE_ASSET__ab211233__\"","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectGameData} from '@/scripts/data';\r\nimport {mdiClose, mdiEmail} from '@mdi/js';\r\nimport {useVModel} from '@vueuse/core';\r\nimport logo from '../assets/logo.png';\r\n\r\nfunction padNumber(num: number, padding?: number) {\r\n    return num.toString().padStart(padding || 2, '0');\r\n}\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\nconst {gameDescription} = injectGameData();\r\nconst __VERSION__ = import.meta.env.VITE_VERSION;\r\nconst btime = new Date(import.meta.env.VITE_BUILD_TIME);\r\nconst __BUILD_TIME_STR__ = `${padNumber(btime.getFullYear(), 4)}-${padNumber(btime.getMonth() + 1)}-${padNumber(btime.getDate())}`\r\n    + ` ${padNumber(btime.getHours())}:${padNumber(btime.getMinutes())}:${padNumber(btime.getSeconds())}`;\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\" width=\"auto\">\r\n        <v-card>\r\n            <v-toolbar>\r\n                <v-toolbar-title>\r\n                    <div class=\"d-flex align-center\">\r\n                        <img :src=\"logo\" width=\"48\" height=\"48\">\r\n                        <div class=\"pl-2\">\r\n                            About\r\n                        </div>\r\n                    </div>\r\n                </v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-card-title>daxfb-calculator</v-card-title>\r\n            <v-card-subtitle>\r\n                Calculator/Factory Planner for factory management games.\r\n            </v-card-subtitle>\r\n            <v-card-subtitle>\r\n                By doubleaxe (<v-icon :icon=\"mdiEmail\" /><a href=\"mailto:dax@xdax.ru\" target=\"_blank\">dax@xdax.ru</a>,\r\n                <a href=\"https://github.com/doubleaxe\" target=\"_blank\">https://github.com/doubleaxe</a>)\r\n            </v-card-subtitle>\r\n            <v-card-text>\r\n                <v-list :lines=\"undefined\">\r\n                    <v-list-item title=\"Game\">\r\n                        <v-list-item-subtitle>\r\n                            <a v-if=\"gameDescription.url\" :href=\"gameDescription.url\" target=\"_blank\">{{ gameDescription.description }}</a>\r\n                            <span v-else>{{ gameDescription.description }}</span>\r\n                        </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item title=\"Game version\" :subtitle=\"gameDescription.version\" />\r\n                    <v-list-item title=\"Build version\" :subtitle=\"__VERSION__\" />\r\n                    <v-list-item title=\"Build time\" :subtitle=\"__BUILD_TIME_STR__\" />\r\n                    <v-list-item title=\"Change log\">\r\n                        <v-list-item-subtitle>\r\n                            <a href=\"https://github.com/doubleaxe/daxfb-calculator/releases\" target=\"_blank\">\r\n                                https://github.com/doubleaxe/daxfb-calculator/releases\r\n                            </a>\r\n                        </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item title=\"Bug reports\">\r\n                        <v-list-item-subtitle>\r\n                            <a href=\"https://github.com/doubleaxe/daxfb-calculator/issues\" target=\"_blank\">\r\n                                https://github.com/doubleaxe/daxfb-calculator/issues\r\n                            </a>\r\n                        </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                </v-list>\r\n            </v-card-text>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiClose} from '@mdi/js';\r\nimport {useVModel} from '@vueuse/core';\r\nimport {useTheme} from 'vuetify';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\nconst __VERSION__ = 'v=' + encodeURIComponent(import.meta.env.VITE_VERSION);\r\nconst theme = useTheme();\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\" fullscreen>\r\n        <v-sheet class=\"help-parent\">\r\n            <v-toolbar>\r\n                <v-toolbar-title>Help</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <iframe class=\"help-iframe\" :src=\"`./docs/index.html?${__VERSION__}&theme=${encodeURIComponent(theme.global.name.value)}`\" />\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n\r\n<style scoped>\r\n.help-parent {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.help-iframe {\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    border: 0px;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiClose} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {useVModel} from '@vueuse/core';\r\nimport {DEFAULT_BLUEPRINT_SPLIT, DEFAULT_PRECISION, MIN_PRECISION} from '@/scripts/types';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\n\r\nconst settings = injectSettings();\r\n</script>\r\n\r\n<template>\r\n    <v-row justify=\"center\">\r\n        <v-dialog\r\n            v-model=\"dialog\"\r\n            fullscreen\r\n        >\r\n            <v-toolbar>\r\n                <v-toolbar-title>Settings</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-list subheader density=\"compact\" :lines=\"false\">\r\n                <v-list-subheader>Appearance</v-list-subheader>\r\n                <v-list-item title=\"Dark Theme\" @click=\"settings.darkTheme = !settings.darkTheme\">\r\n                    <template #subtitle>\r\n                        Toggle between dark and light theme.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.darkTheme\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item title=\"Colorful Links\" @click=\"settings.colorfulLinks = !settings.colorfulLinks\">\r\n                    <template #subtitle>\r\n                        Draw links in color or black.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.colorfulLinks\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item title=\"Count Controls\" @click=\"settings.showCountControlsOnWindow = !settings.showCountControlsOnWindow\">\r\n                    <template #subtitle>\r\n                        Show Plus/Minus buttons on factory card window.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.showCountControlsOnWindow\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-subheader>Calculations</v-list-subheader>\r\n                <v-list-item title=\"Solve Precision\">\r\n                    <template #subtitle>\r\n                        Less number - more preciese calculations of factory io at price of calclation time.\r\n                        Default is \".001\".\r\n                    </template>\r\n                    <input-number\r\n                        v-model=\"settings.solvePrecision\"\r\n                        :max=\"1\"\r\n                        :min=\"0\"\r\n                        :default-min=\"MIN_PRECISION\"\r\n                        :default-value=\"DEFAULT_PRECISION\"\r\n                    />\r\n                </v-list-item>\r\n                <v-list-subheader>Actions</v-list-subheader>\r\n                <v-list-item title=\"Enable Drag And Drop\" @click=\"settings.dragAndDropEnabled = !settings.dragAndDropEnabled\">\r\n                    <template #subtitle>\r\n                        When enabled you can drag items from left panel to blueprint, drag links, drag factories.\r\n                        Doesn't work on touchscreen devices.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.dragAndDropEnabled\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item\r\n                    :disabled=\"!settings.dragAndDropEnabled\"\r\n                    title=\"Auto Scroll On Overflow\"\r\n                    @click=\"settings.overflowScrollEnabled = !settings.overflowScrollEnabled\"\r\n                >\r\n                    <template #subtitle>\r\n                        When enabled blueprint will scroll automatically when anything is dragged ouside of widnow.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.overflowScrollEnabled\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item title=\"Enable Drag And Scroll\" @click=\"settings.dragAndScrollEnabled = !settings.dragAndScrollEnabled\">\r\n                    <template #subtitle>\r\n                        When enabled you can scroll blueprint by dragging it with mouse.\r\n                        Unusable on touchscreen devices.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.dragAndScrollEnabled\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item\r\n                    :disabled=\"!settings.dragAndScrollEnabled\"\r\n                    title=\"Continue Drag And Scroll Outside\"\r\n                    @click=\"settings.dragAndScrollOutsideWindow = !settings.dragAndScrollOutsideWindow\"\r\n                >\r\n                    <template #subtitle>\r\n                        When enabled drag and scroll will continue if mouse cursor is dragged outside scrollable window.\r\n                        Could be disabled to fight some scroll glitches on Firefox.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.dragAndScrollOutsideWindow\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item title=\"Enable Point And Click\" @click=\"settings.pointAndClickEnabled = !settings.pointAndClickEnabled\">\r\n                    <template #subtitle>\r\n                        When enabled you select items on left panel, links and then paste them with another click.\r\n                        Also factory can be moved the same way with factory menu.\r\n                        Designed for touchscreen devices, but can be used on PC.\r\n                        If both \"Enable Drag And Drop\" and \"Enable Point And Click\" is selected,\r\n                        there will be pause before drag started to distinct drag from click.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.pointAndClickEnabled\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item title=\"Enable Scale On Wheel\" @click=\"settings.scrollScaleEnabled = !settings.scrollScaleEnabled\">\r\n                    <template #subtitle>\r\n                        When enabled blueprint will scale when mouse wheel is rotated.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.scrollScaleEnabled\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-subheader>Save (advanced)</v-list-subheader>\r\n                <v-list-item title=\"Compress Saved Data\" @click=\"settings.blueprintCompress = !settings.blueprintCompress\">\r\n                    <template #subtitle>\r\n                        Decreases size for big blueprints.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.blueprintCompress\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item\r\n                    :disabled=\"settings.blueprintCompress\"\r\n                    title=\"Encode Saved Data\"\r\n                    @click=\"settings.blueprintEncode = !settings.blueprintEncode\"\r\n                >\r\n                    <template #subtitle>\r\n                        Encodes raw blueprint JSON to Base64. Better for sharing blueprint text.\r\n                    </template>\r\n                    <template #prepend>\r\n                        <v-checkbox v-model=\"settings.blueprintEncode\" />\r\n                    </template>\r\n                </v-list-item>\r\n                <v-list-item\r\n                    :disabled=\"!settings.blueprintCompress && !settings.blueprintEncode\"\r\n                    title=\"Split Encoded Data\"\r\n                >\r\n                    <template #subtitle>\r\n                        Splits to chunks with new line. Better for sharing. Set 0 to disable splitting.\r\n                    </template>\r\n                    <input-number\r\n                        v-model=\"settings.blueprintSplit\"\r\n                        :min=\"0\"\r\n                        :default-value=\"DEFAULT_BLUEPRINT_SPLIT\"\r\n                    />\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-dialog>\r\n    </v-row>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {mdiClose} from '@mdi/js';\r\nimport {useVModel} from '@vueuse/core';\r\nimport {ref, unref} from 'vue';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\nconst roundingMode = ref('ceil');\r\nconst blueprintModel = injectBlueprintModel();\r\n\r\nfunction applyFactoryCounts() {\r\n    const roundToCeil = unref(roundingMode) === 'ceil';\r\n    const setOne = unref(roundingMode) === 'one';\r\n    blueprintModel.applyCalculatedFactoryCount((solvedCount) => {\r\n        if(roundToCeil) {\r\n            return Math.ceil(solvedCount);\r\n        }\r\n        if(setOne) {\r\n            return 1;\r\n        }\r\n        return solvedCount;\r\n    });\r\n    dialog.value = false;\r\n}\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-sheet>\r\n            <v-toolbar>\r\n                <v-toolbar-title>Automatically Apply Factory Counts</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-container>\r\n                <v-alert type=\"warning\">\r\n                    This will apply automatically calculated factory counts for all factories.\r\n                    In result manually set counts will be equal to automatically calculated ones.\r\n                </v-alert>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <v-radio-group v-model=\"roundingMode\" inline>\r\n                            <v-radio\r\n                                label=\"Round to nearest greater integer\"\r\n                                value=\"ceil\"\r\n                            />\r\n                            <v-radio\r\n                                label=\"Set fractional counts\"\r\n                                value=\"fractional\"\r\n                            />\r\n                            <v-radio\r\n                                label=\"Set all counts to 1\"\r\n                                value=\"one\"\r\n                            />\r\n                        </v-radio-group>\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <v-btn\r\n                            color=\"primary\"\r\n                            block\r\n                            @click=\"applyFactoryCounts()\"\r\n                        >\r\n                            Apply Factory Counts\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-container>\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {useErrorHandler} from '@/composables';\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {mdiClose} from '@mdi/js';\r\nimport {useLocalStorage, useVModel} from '@vueuse/core';\r\nimport {computed, onUnmounted, ref, unref, watch} from 'vue';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {knownLayoutAlgorithms, layoutFactory, LayoutType, type CommonLayoutOptions} from '@/scripts/graph';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\nconst {showError} = useErrorHandler();\r\nconst settings = injectSettings();\r\nconst blueprintModel = injectBlueprintModel();\r\n\r\nlet abortController: AbortController | undefined = undefined;\r\nconst isProcessing = ref(false);\r\n\r\nconst layoutFactories: Map<LayoutType, string> = new Map([\r\n    [LayoutType.ELK, 'Elk.js'],\r\n    [LayoutType.DAGRE, 'Dagre'],\r\n]);\r\nconst layoutFactoriesRevert = new Map([...layoutFactories.entries()].map(([key, value]) => [value, key]));\r\n\r\nconst layoutSettings = useLocalStorage('layout-settings', {\r\n    layoutFactory: LayoutType.ELK,\r\n    layoutOptions: {\r\n        nodeSpacing: 100,\r\n        connectedNodeSpacing: 100,\r\n        edgeSpacing: 10,\r\n    },\r\n    layoutAlgorithmElk: knownLayoutAlgorithms(LayoutType.ELK).default,\r\n    layoutAlgorithmDagre: knownLayoutAlgorithms(LayoutType.DAGRE).default,\r\n} as {\r\n    layoutFactory: LayoutType;\r\n    layoutOptions: CommonLayoutOptions;\r\n    layoutAlgorithmElk: string;\r\n    layoutAlgorithmDagre: string;\r\n}, {mergeDefaults: true});\r\n\r\nconst selectedLayoutFactory = computed({\r\n    get() { return layoutFactories.get(unref(layoutSettings).layoutFactory); },\r\n    set(value) { layoutSettings.value.layoutFactory = layoutFactoriesRevert.get(value || '') || LayoutType.ELK; },\r\n});\r\n\r\n\r\nfunction performAutoLayoutGraph() {\r\n    isProcessing.value = true;\r\n    abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    const _layoutSettings = unref(layoutSettings);\r\n    const layoutType = _layoutSettings.layoutFactory;\r\n    const layoutOptions: CommonLayoutOptions = {\r\n        edgeWidth: settings.iconSize,\r\n        ..._layoutSettings.layoutOptions,\r\n        algorithms: (layoutType === LayoutType.DAGRE) ?\r\n            _layoutSettings.layoutAlgorithmDagre :\r\n            _layoutSettings.layoutAlgorithmElk,\r\n    };\r\n    layoutFactory(layoutType)\r\n        .then((autoLayoutGraph) => autoLayoutGraph(blueprintModel, layoutOptions, signal))\r\n        .then(() => {\r\n            dialog.value = false;\r\n        })\r\n        .catch((err) => {\r\n            if((err as Error)?.name !== 'AbortError') {\r\n                showError('Failed to auto layout', err);\r\n            }\r\n        })\r\n        .finally(() => {\r\n            isProcessing.value = false;\r\n            abortController = undefined;\r\n        });\r\n}\r\n\r\nonUnmounted(() => {\r\n    abortController?.abort();\r\n});\r\nwatch(() => props.modelValue, (value, oldValue) => {\r\n    if(!value) {\r\n        abortController?.abort();\r\n    } else if(value && !oldValue) {\r\n        isProcessing.value = false;\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-sheet>\r\n            <v-toolbar>\r\n                <v-toolbar-title>Automatically Layout Blueprint</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-container style=\"position: relative;\">\r\n                <v-alert type=\"warning\">\r\n                    Automatic layout algorithm is not perfect, it can make blueprint even worse.\r\n                    Currently there is no undo functionality, it is highly recommended to backup blueprint before performing auto layout.\r\n                    Layout libraries are huge, make sure you have enough memory before executing.\r\n                </v-alert>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <v-select\r\n                            v-model=\"selectedLayoutFactory\"\r\n                            :items=\"[...layoutFactories.values()]\"\r\n                            label=\"Layout processor\"\r\n                            density=\"compact\"\r\n                            hide-details\r\n                        />\r\n                    </v-col>\r\n                    <v-col>\r\n                        <input-number\r\n                            v-model=\"layoutSettings.layoutOptions.edgeSpacing\"\r\n                            label=\"Edge Spacing\"\r\n                            :min=\"0\"\r\n                            :default-value=\"10\"\r\n                        />\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <input-number\r\n                            v-model=\"layoutSettings.layoutOptions.nodeSpacing\"\r\n                            label=\"Vertical Node Spacing\"\r\n                            :min=\"0\"\r\n                            :default-value=\"100\"\r\n                        />\r\n                    </v-col>\r\n                    <v-col>\r\n                        <input-number\r\n                            v-model=\"layoutSettings.layoutOptions.connectedNodeSpacing\"\r\n                            label=\"Horizontal Node Spacing\"\r\n                            :min=\"0\"\r\n                            :default-value=\"100\"\r\n                        />\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <algorithm-selector-elk\r\n                            v-if=\"layoutSettings.layoutFactory === LayoutType.ELK\"\r\n                            v-model=\"layoutSettings.layoutAlgorithmElk\"\r\n                        />\r\n                        <algorithm-selector-dagre\r\n                            v-if=\"layoutSettings.layoutFactory === LayoutType.DAGRE\"\r\n                            v-model=\"layoutSettings.layoutAlgorithmDagre\"\r\n                        />\r\n                    </v-col>\r\n                    <v-col>\r\n                        <v-btn\r\n                            color=\"primary\"\r\n                            block\r\n                            @click=\"performAutoLayoutGraph()\"\r\n                        >\r\n                            Perform Automatic Layout\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n                <v-overlay\r\n                    v-model=\"isProcessing\"\r\n                    contained\r\n                    persistent\r\n                    class=\"d-flex align-center\"\r\n                >\r\n                    <div class=\"d-flex justify-center\">\r\n                        <v-progress-circular indeterminate color=\"primary\" />\r\n                    </div>\r\n                </v-overlay>\r\n            </v-container>\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {mdiDotsVertical, mdiDelete, mdiCog, mdiHelpCircle, mdiArrangeSendToBack, mdiCounter, mdiInformationOutline} from '@mdi/js';\r\nimport {ref} from 'vue';\r\n\r\nconst blueprintModel = injectBlueprintModel();\r\nconst showSettingsDialog = ref(false);\r\nconst showHelpDialog = ref(false);\r\nconst showAboutDialog = ref(false);\r\nconst showAutoLayoutDialog = ref(false);\r\nconst showApplyCountDialog = ref(false);\r\n</script>\r\n\r\n<template>\r\n    <v-menu>\r\n        <template #activator=\"{ props }\">\r\n            <v-btn :icon=\"mdiDotsVertical\" v-bind=\"props\" />\r\n        </template>\r\n        <v-list>\r\n            <v-list-item\r\n                :prepend-icon=\"mdiDelete\"\r\n                title=\"Clear All\"\r\n                @click=\"blueprintModel.clear()\"\r\n            />\r\n            <v-divider horizontal />\r\n            <v-list-item\r\n                :prepend-icon=\"mdiArrangeSendToBack\"\r\n                title=\"Auto Layout Graph\"\r\n                @click=\"showAutoLayoutDialog = true\"\r\n            />\r\n            <v-list-item\r\n                :prepend-icon=\"mdiCounter\"\r\n                title=\"Mass Update Counts\"\r\n                @click=\"showApplyCountDialog = true\"\r\n            />\r\n            <v-divider horizontal />\r\n            <v-list-item\r\n                :prepend-icon=\"mdiCog\"\r\n                title=\"Settings\"\r\n                @click=\"showSettingsDialog = true\"\r\n            />\r\n            <v-list-item\r\n                :prepend-icon=\"mdiHelpCircle\"\r\n                title=\"Help\"\r\n                @click=\"showHelpDialog = true\"\r\n            />\r\n            <v-list-item\r\n                :prepend-icon=\"mdiInformationOutline\"\r\n                title=\"About\"\r\n                @click=\"showAboutDialog = true\"\r\n            />\r\n        </v-list>\r\n    </v-menu>\r\n    <div class=\"d-none\">\r\n        <graph-layout-dialog v-model=\"showAutoLayoutDialog\" />\r\n        <apply-count-dialog v-model=\"showApplyCountDialog\" />\r\n        <settings-dialog v-model=\"showSettingsDialog\" />\r\n        <help-dialog v-model=\"showHelpDialog\" />\r\n        <about-dialog v-model=\"showAboutDialog\" />\r\n    </div>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {computed} from 'vue';\r\nimport {mdiMagnify} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst settings = injectSettings();\r\n\r\nconst scalePercent = computed({\r\n    get: () => Math.round(settings.scale * 100),\r\n    set: (value: number) => { settings.scale = value / 100; },\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-menu density=\"compact\" :close-on-content-click=\"false\">\r\n        <template #activator=\"{ props }\">\r\n            <v-tooltip text=\"Scale\" location=\"bottom\">\r\n                <template #activator=\"{ props: _props }\">\r\n                    <v-btn v-bind=\"{..._props, ...props}\" icon>\r\n                        <v-badge :content=\"scalePercent\">\r\n                            <v-icon :icon=\"mdiMagnify\" />\r\n                        </v-badge>\r\n                    </v-btn>\r\n                </template>\r\n            </v-tooltip>\r\n        </template>\r\n        <v-sheet min-width=\"300\">\r\n            <v-slider\r\n                v-model=\"scalePercent\"\r\n                class=\"scale-slider\"\r\n                :min=\"20\"\r\n                :max=\"200\"\r\n                :step=\"10\"\r\n            >\r\n                <template #append>\r\n                    <v-chip>{{ scalePercent }} %</v-chip>\r\n                </template>\r\n            </v-slider>\r\n        </v-sheet>\r\n    </v-menu>\r\n</template>\r\n\r\n<style scoped>\r\n.scale-slider {\r\n    margin-left: 1em;\r\n    margin-right: 1em;\r\n    margin-top: 1em;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {useErrorHandler, useLinkApi} from '@/composables';\r\nimport {injectGameData} from '@/scripts/data';\r\nimport {BlueprintEncoder, FileNameHandler} from '@/scripts/model/serializer';\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {mdiClose, mdiContentCopy, mdiCheck} from '@mdi/js';\r\nimport {useClipboard, useLocalStorage, useVModel} from '@vueuse/core';\r\nimport {computed, onUnmounted, ref, unref, watch} from 'vue';\r\nimport {__DEBUG__} from '@/scripts/debug';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\nconst {copy, copied, isSupported: isClipboardSupported} = useClipboard();\r\nconst {showError} = useErrorHandler();\r\nconst {exec, abortController} = useLinkApi();\r\nconst gameData = injectGameData();\r\nconst settings = injectSettings();\r\nconst blueprintModel = injectBlueprintModel();\r\n\r\nconst generatedLink = ref('');\r\nconst copyIcon = computed(() => {\r\n    if(!unref(isClipboardSupported) || !unref(generatedLink)) {\r\n        return '';\r\n    }\r\n    return unref(copied) ? mdiCheck : mdiContentCopy;\r\n});\r\nconst isLoading = ref(false);\r\nconst blueprintName = ref('');\r\nlet linkId = '';\r\n\r\nfunction buildBlueprintData() {\r\n    const encoder = new BlueprintEncoder(gameData, {\r\n        blueprintCompress: true,\r\n    });\r\n    const encoded = encoder.encode(blueprintModel.save());\r\n    return encoded;\r\n}\r\n\r\nfunction regenerateLinkText() {\r\n    if(!linkId)\r\n        return;\r\n\r\n    //you don't want to share your file:/// address, do you?\r\n    const baseUrl = __DEBUG__ ?\r\n        [location.protocol, '//', location.host, location.pathname].join('') :\r\n        'https://doubleaxe.github.io/daxfb-calculator/';\r\n\r\n    let _generatedLink = `${baseUrl}?link=${encodeURIComponent(linkId)}`;\r\n    if(settings.appendFileNameToLink) {\r\n        let fileName = FileNameHandler.blueprintNameToFileName(unref(blueprintName));\r\n        const match = /^(.*)\\.txt$/i.exec(fileName);\r\n        if(match) {\r\n            fileName = match[1];\r\n        }\r\n        _generatedLink += `&name=${encodeURIComponent(fileName)}`;\r\n    }\r\n    generatedLink.value = _generatedLink;\r\n}\r\n\r\nconst linkSession = useLocalStorage('linkapi-session', {sessionId: ''});\r\nasync function generateLink() {\r\n    type LoginResponse = {\r\n        sessionId: string;\r\n    };\r\n    type GenerateLinkResponse = {\r\n        link: string;\r\n    };\r\n\r\n    isLoading.value = true;\r\n    try {\r\n        let attempts = 0;\r\n        for(;;) {\r\n            let sessionId = unref(linkSession).sessionId;\r\n            if(!sessionId) {\r\n                ({sessionId} = await exec<LoginResponse>('login', {}));\r\n                unref(linkSession).sessionId = sessionId;\r\n            }\r\n\r\n            try {\r\n                const gameId = gameData.gameDescription.name;\r\n                const _blueprintName = unref(blueprintName);\r\n                const blueprintData = buildBlueprintData();\r\n                const {link} = await exec<GenerateLinkResponse>('save', {\r\n                    sessionId,\r\n                    gameId,\r\n                    name: _blueprintName,\r\n                    data: blueprintData,\r\n                });\r\n\r\n                linkId = link;\r\n                regenerateLinkText();\r\n                break;\r\n            } catch(err) {\r\n                if(attempts >= 1) {\r\n                    throw err;\r\n                }\r\n                if((err as Error)?.name === 'err:session') {\r\n                    unref(linkSession).sessionId = '';\r\n                    attempts++;\r\n                } else {\r\n                    throw err;\r\n                }\r\n            }\r\n        }\r\n    } catch(err) {\r\n        if((err as Error)?.name !== 'AbortError') {\r\n            showError('Failed to generate link', err);\r\n        }\r\n    } finally {\r\n        isLoading.value = false;\r\n    }\r\n}\r\n\r\nonUnmounted(() => {\r\n    unref(abortController)?.abort();\r\n});\r\nwatch(() => props.modelValue, (value, oldValue) => {\r\n    if(!value) {\r\n        unref(abortController)?.abort();\r\n    } else if(value && !oldValue) {\r\n        linkId = '';\r\n        generatedLink.value = '';\r\n        blueprintName.value = blueprintModel.blueprintName;\r\n        isLoading.value = false;\r\n    }\r\n});\r\nwatch(blueprintName, (value) => {\r\n    if(!value) {\r\n        blueprintName.value = blueprintModel.getDefaultBlueprintName();\r\n    }\r\n    blueprintModel.blueprintName = unref(blueprintName);\r\n    regenerateLinkText();\r\n});\r\nwatch(() => settings.appendFileNameToLink, regenerateLinkText);\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-sheet>\r\n            <v-toolbar>\r\n                <v-toolbar-title>Generate Link For Blueprint</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-container style=\"position: relative;\">\r\n                <v-alert type=\"info\">\r\n                    Links are intended to be used for sharing blueprints with other people.\r\n                    They were not designed as local file storage replacement.\r\n                    In order to generate link, blueprint data will be uploaded to remote (my) server.\r\n                    I will keep this server online as long as possible, but in the event of failure, all shared blueprints may be lost.\r\n                </v-alert>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <v-text-field\r\n                            v-model=\"blueprintName\"\r\n                            label=\"Edit Blueprint Description\"\r\n                            density=\"comfortable\"\r\n                            hide-details\r\n                            clearable\r\n                            @click:clear=\"blueprintName = blueprintModel.getDefaultBlueprintName()\"\r\n                        />\r\n                    </v-col>\r\n                    <v-col cols=\"4\">\r\n                        <v-checkbox\r\n                            v-model=\"settings.appendFileNameToLink\"\r\n                            label=\"Embed file name (as a hint) inside generated link\"\r\n                            density=\"compact\"\r\n                            hide-details\r\n                        />\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-col>\r\n                        <v-text-field\r\n                            v-model=\"generatedLink\"\r\n                            label=\"Generated Link\"\r\n                            density=\"comfortable\"\r\n                            hide-details\r\n                            readonly\r\n                            :append-inner-icon=\"copyIcon\"\r\n                            @click:append-inner=\"copy(generatedLink)\"\r\n                        />\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row dense class=\"mt-2\">\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        block\r\n                        @click=\"generateLink()\"\r\n                    >\r\n                        Generate Link\r\n                    </v-btn>\r\n                </v-row>\r\n                <v-overlay\r\n                    v-model=\"isLoading\"\r\n                    contained\r\n                    persistent\r\n                    class=\"d-flex align-center\"\r\n                >\r\n                    <div class=\"d-flex justify-center\">\r\n                        <v-progress-circular indeterminate color=\"primary\" />\r\n                    </div>\r\n                </v-overlay>\r\n            </v-container>\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {ref} from 'vue';\r\nimport {mdiLinkVariantPlus} from '@mdi/js';\r\n\r\nconst showGenerateLinkDialog = ref(false);\r\n</script>\r\n\r\n<template>\r\n    <tooltip-button\r\n        tooltip=\"Generate Link\"\r\n        :icon=\"mdiLinkVariantPlus\"\r\n        @click=\"showGenerateLinkDialog = true\"\r\n    />\r\n    <div class=\"d-none\">\r\n        <generate-link-dialog v-model=\"showGenerateLinkDialog\" />\r\n    </div>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiClose, mdiContentCopy, mdiShareVariant, mdiCheck, mdiContentSave} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\nimport {useClipboard, useDebounceFn, useShare, useVModel} from '@vueuse/core';\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {nextTick, ref, unref, watch, computed} from 'vue';\r\nimport {BlueprintEncoder, FileNameHandler, ExportTarget} from '@/scripts/model/serializer';\r\nimport {injectGameData} from '@/scripts/data';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\n\r\nconst gameData = injectGameData();\r\nconst settings = injectSettings();\r\nconst blueprintModel = injectBlueprintModel();\r\n\r\nconst splitBlueprint = ref('');\r\nconst fullyEncodedBlueprint = ref('');\r\nconst targetedBlueprint = ref('');\r\nconst textArea = ref<HTMLTextAreaElement | undefined>();\r\nconst objectUrl = ref<string | null>(null);\r\nconst objectAnchor = ref<HTMLElement | null>(null);\r\nconst blueprintName = ref('');\r\nconst exportTarget = ref<string>(ExportTarget.DEFAULT);\r\nconst fileName = computed(() => {\r\n    return FileNameHandler.blueprintNameToFileName(unref(blueprintName));\r\n});\r\n\r\nconst {copy, copied, isSupported: isClipboardSupported} = useClipboard();\r\nconst {share, isSupported: isShareSupported} = useShare();\r\n\r\nfunction saveBlueprint() {\r\n    if(objectUrl.value) {\r\n        URL.revokeObjectURL(objectUrl.value);\r\n        objectUrl.value = null;\r\n    }\r\n    //recreate anchor\r\n    nextTick(() => {\r\n        const split = unref(fullyEncodedBlueprint);\r\n        const blob = new Blob([split], {type: 'text/plain'});\r\n        objectUrl.value = URL.createObjectURL(blob);\r\n        nextTick(() => {\r\n            unref(objectAnchor)?.click();\r\n        });\r\n    });\r\n}\r\n\r\nfunction updateFullyEncodedBlueprint() {\r\n    const handler = new FileNameHandler(settings);\r\n    let blueprintData = handler.encodeBlueprintNameHeader(\r\n        unref(splitBlueprint),\r\n        unref(blueprintName),\r\n    );\r\n    fullyEncodedBlueprint.value = blueprintData;\r\n    blueprintData = FileNameHandler.encodeToTarget(blueprintData, unref(exportTarget));\r\n    targetedBlueprint.value = blueprintData;\r\n}\r\nconst debouncedUpdateFullyEncodedBlueprint = useDebounceFn(updateFullyEncodedBlueprint, 200);\r\n\r\nwatch(() => props.modelValue, (value) => {\r\n    if(value) {\r\n        const encoder = new BlueprintEncoder(gameData, settings);\r\n        const encoded = encoder.encode(blueprintModel.save());\r\n        const split = encoder.split(encoded);\r\n        splitBlueprint.value = split;\r\n        blueprintName.value = blueprintModel.blueprintName;\r\n        updateFullyEncodedBlueprint();\r\n        nextTick(() => {\r\n            unref(textArea)?.select();\r\n        });\r\n    }\r\n});\r\nwatch(blueprintName, (value) => {\r\n    if(!value) {\r\n        blueprintName.value = blueprintModel.getDefaultBlueprintName();\r\n    }\r\n    debouncedUpdateFullyEncodedBlueprint();\r\n    blueprintModel.blueprintName = unref(blueprintName);\r\n});\r\nwatch(exportTarget, debouncedUpdateFullyEncodedBlueprint);\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-sheet>\r\n            <v-toolbar>\r\n                <v-toolbar-title>Save / Share Blueprint</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-container>\r\n                <v-row dense class=\"mb-2\">\r\n                    <v-col>\r\n                        <v-text-field\r\n                            v-model=\"blueprintName\"\r\n                            label=\"Edit Blueprint Description\"\r\n                            density=\"comfortable\"\r\n                            hide-details\r\n                            clearable\r\n                            @click:clear=\"blueprintName = blueprintModel.getDefaultBlueprintName()\"\r\n                        />\r\n                    </v-col>\r\n                    <v-col cols=\"4\">\r\n                        <v-select\r\n                            v-model=\"exportTarget\"\r\n                            density=\"comfortable\"\r\n                            hide-details\r\n                            label=\"Target\"\r\n                            :items=\"Object.values(ExportTarget)\"\r\n                        />\r\n                    </v-col>\r\n                </v-row>\r\n                <div class=\"my-flex-xs-wrap\">\r\n                    <div class=\"flex-grow-1 mr-1 mt-2\">\r\n                        <v-textarea\r\n                            ref=\"textArea\"\r\n                            class=\"text-monospaced textarea-overflow-auto\"\r\n                            label=\"Copy Blueprint Data\"\r\n                            variant=\"outlined\"\r\n                            readonly\r\n                            hide-details\r\n                            :model-value=\"targetedBlueprint\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"mt-2\">\r\n                        <v-btn\r\n                            v-if=\"isClipboardSupported\"\r\n                            block\r\n                            size=\"small\"\r\n                            class=\"mb-1\"\r\n                            :prepend-icon=\"copied ? mdiCheck : mdiContentCopy\"\r\n                            @click=\"copy(targetedBlueprint)\"\r\n                        >\r\n                            Copy To Clipboard\r\n                        </v-btn>\r\n                        <v-btn\r\n                            v-if=\"isShareSupported\"\r\n                            block\r\n                            size=\"small\"\r\n                            class=\"mb-1\"\r\n                            :prepend-icon=\"mdiShareVariant\"\r\n                            @click=\"share({title: blueprintModel.blueprintName, text: targetedBlueprint})\"\r\n                        >\r\n                            Share\r\n                        </v-btn>\r\n                        <v-btn\r\n                            block\r\n                            size=\"small\"\r\n                            class=\"mb-1\"\r\n                            color=\"secondary\"\r\n                            :prepend-icon=\"mdiContentSave\"\r\n                            @click=\"saveBlueprint()\"\r\n                        >\r\n                            Save To File\r\n                        </v-btn>\r\n                        <a\r\n                            v-if=\"objectUrl\"\r\n                            ref=\"objectAnchor\"\r\n                            :download=\"fileName\"\r\n                            :href=\"objectUrl\"\r\n                            class=\"d-none\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </v-container>\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {ref} from 'vue';\r\nimport {mdiShareVariant, mdiContentSave} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst settings = injectSettings();\r\nconst showShareDialog = ref(false);\r\n</script>\r\n\r\n<template>\r\n    <tooltip-button\r\n        tooltip=\"Save / Share Blueprint\"\r\n        :icon=\"settings.isTouchDevice ? mdiShareVariant : mdiContentSave\"\r\n        @click=\"showShareDialog = true\"\r\n    />\r\n    <div class=\"d-none\">\r\n        <save-share-dialog v-model=\"showShareDialog\" />\r\n    </div>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiClose, mdiContentPaste, mdiFileUploadOutline} from '@mdi/js';\r\nimport {useClipboard, useVModel} from '@vueuse/core';\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {nextTick, ref, unref, watch} from 'vue';\r\nimport {useErrorHandler, loadBlueprint} from '@/composables';\r\nimport {injectGameData} from '@/scripts/data';\r\n\r\nconst props = defineProps<{\r\n    modelValue: boolean;\r\n}>();\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst dialog = useVModel(props, 'modelValue', emit);\r\n\r\nconst gameData = injectGameData();\r\nconst blueprintModel = injectBlueprintModel();\r\n\r\nconst loadedBlueprint = ref('');\r\nconst showInputFile = ref(false);\r\nconst inputFile = ref<HTMLElement | null>(null);\r\nconst fileName = ref('');\r\n\r\nconst {isSupported: isClipboardSupported} = useClipboard();\r\nconst {showError} = useErrorHandler();\r\nconst ERROR_TITLE = 'Error loading blueprint';\r\n\r\nwatch(() => props.modelValue, (value) => {\r\n    if(value) {\r\n        loadedBlueprint.value = '';\r\n    }\r\n});\r\n\r\nfunction paste() {\r\n    navigator.clipboard.readText().then((text) => {\r\n        loadedBlueprint.value = text;\r\n        fileName.value = '';\r\n    });\r\n}\r\n\r\nfunction loadingBlueprint() {\r\n    showInputFile.value = false;\r\n    //recreate input\r\n    nextTick(() => {\r\n        showInputFile.value = true;\r\n        nextTick(() => {\r\n            unref(inputFile)?.click();\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadBlueprintFromFile() {\r\n    if(!unref(inputFile))\r\n        return;\r\n    const selectedFiles = (unref(inputFile) as HTMLInputElement).files;\r\n    if(!selectedFiles || !selectedFiles[0])\r\n        return;\r\n    const selectedFile = selectedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.onload = function() {\r\n        const fileContents = reader.result;\r\n        if(typeof(fileContents) != 'string') {\r\n            const error = new Error(`Invalid file type, expected \"string\", got \"${typeof(fileContents)}\"`);\r\n            showError(ERROR_TITLE, error);\r\n            return;\r\n        }\r\n        fileName.value = selectedFile.name;\r\n        load(fileContents);\r\n    };\r\n    reader.onerror = function() {\r\n        showError(ERROR_TITLE, reader.error);\r\n    };\r\n    reader.readAsText(selectedFile);\r\n}\r\n\r\n\r\nfunction load(encodedBlueprint?: string) {\r\n    if(!encodedBlueprint) {\r\n        encodedBlueprint = unref(loadedBlueprint);\r\n    }\r\n    loadBlueprint(gameData, blueprintModel, encodedBlueprint, fileName);\r\n    dialog.value = false;\r\n}\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-sheet>\r\n            <v-toolbar>\r\n                <v-toolbar-title>Load Blueprint</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-container>\r\n                <div class=\"my-flex-xs-wrap mb-4\">\r\n                    <div class=\"flex-grow-1 mr-1 mt-2\">\r\n                        <v-textarea\r\n                            v-model=\"loadedBlueprint\"\r\n                            class=\"text-monospaced textarea-overflow-auto\"\r\n                            label=\"Paste Blueprint Data\"\r\n                            variant=\"outlined\"\r\n                            hide-details\r\n                        />\r\n                    </div>\r\n                    <div class=\"mt-2\">\r\n                        <v-btn\r\n                            v-if=\"isClipboardSupported\"\r\n                            block\r\n                            size=\"small\"\r\n                            class=\"mb-1\"\r\n                            :prepend-icon=\"mdiContentPaste\"\r\n                            @click=\"paste()\"\r\n                        >\r\n                            Paste From Clipboard\r\n                        </v-btn>\r\n                        <v-btn\r\n                            block\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            :prepend-icon=\"mdiFileUploadOutline\"\r\n                            @click=\"loadingBlueprint()\"\r\n                        >\r\n                            Load From File\r\n                        </v-btn>\r\n                        <input\r\n                            v-if=\"showInputFile\"\r\n                            ref=\"inputFile\"\r\n                            type=\"file\"\r\n                            class=\"d-none\"\r\n                            accept=\".txt,text/plain\"\r\n                            @change=\"loadBlueprintFromFile()\"\r\n                        >\r\n                    </div>\r\n                </div>\r\n                <v-row dense>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        block\r\n                        @click=\"load()\"\r\n                    >\r\n                        Load Blueprint\r\n                    </v-btn>\r\n                </v-row>\r\n            </v-container>\r\n        </v-sheet>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {ref} from 'vue';\r\nimport {mdiCloudDownload, mdiFolderOutline} from '@mdi/js';\r\nimport {injectSettings} from '@/scripts/settings';\r\n\r\nconst settings = injectSettings();\r\nconst showShareDialog = ref(false);\r\n</script>\r\n\r\n<template>\r\n    <tooltip-button\r\n        tooltip=\"Load Blueprint\"\r\n        :icon=\"settings.isTouchDevice ? mdiCloudDownload : mdiFolderOutline\"\r\n        @click=\"showShareDialog = true\"\r\n    />\r\n    <div class=\"d-none\">\r\n        <load-share-dialog v-model=\"showShareDialog\" />\r\n    </div>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {injectBlueprintModel} from '@/scripts/model/store';\r\nimport {mdiSigma, mdiHome} from '@mdi/js';\r\nimport {injectGameData} from '@/scripts/data';\r\n\r\nconst gameData = injectGameData();\r\nconst blueprintModel = injectBlueprintModel();\r\nconst homeReference = [location.protocol, '//', location.host, location.pathname].join('')\r\n    + `?gameId=${gameData.gameDescription.name}`;\r\n</script>\r\n\r\n<template>\r\n    <tooltip-button\r\n        tooltip=\"Solve graph\"\r\n        :icon=\"mdiSigma\"\r\n        :disabled=\"blueprintModel.autoSolveGraph\"\r\n        @click=\"blueprintModel.solveGraph(true)\"\r\n    />\r\n    <v-switch v-model=\"blueprintModel.autoSolveGraph\" label=\"Auto\" hide-details class=\"mr-1\" color=\"primary\" />\r\n    <v-divider vertical />\r\n    <a :href=\"homeReference\" target=\"_blank\" class=\"anchor-plain\">\r\n        <tooltip-button\r\n            tooltip=\"Open Another Window\"\r\n            :icon=\"mdiHome\"\r\n        />\r\n    </a>\r\n    <button-load-share />\r\n    <button-save-share />\r\n    <button-generate-link />\r\n    <v-divider vertical />\r\n    <button-scale />\r\n    <slot name=\"append\" />\r\n    <main-toolbar-menu />\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {useLeftPanelDragAndDrop} from '@/composables/drag-helpers';\r\nimport {computed, nextTick, ref, unref, watch} from 'vue';\r\n\r\nconst {isDragging, currentItem, screenRect, movableElem} = useLeftPanelDragAndDrop();\r\n\r\nconst draggableClass = ref('');\r\nconst draggableStyle = computed(() => {\r\n    const _isDragging = unref(isDragging);\r\n    const _dragRect = unref(screenRect);\r\n    if(!_isDragging || !_dragRect) {\r\n        return {};\r\n    }\r\n    return {\r\n        left: `${_dragRect.x}px`,\r\n        top: `${_dragRect.y}px`,\r\n    };\r\n});\r\n\r\nwatch(isDragging, (value) => {\r\n    if(!value) {\r\n        draggableClass.value = 'icon-draggable-hidden';\r\n    } else {\r\n        //this is against flickering, so first position is set, and next icon is shown\r\n        //otherwise it sometimes jump out of somewhere\r\n        nextTick(() => {\r\n            draggableClass.value = '';\r\n        });\r\n    }\r\n}, {immediate: true});\r\n</script>\r\n\r\n<template>\r\n    <v-sheet\r\n        ref=\"movableElem\"\r\n        class=\"rounded dragging-elevation icon-draggable hover-background\"\r\n        :class=\"draggableClass\"\r\n        :style=\"draggableStyle\"\r\n    >\r\n        <icon-component :image=\"currentItem?.image || ''\" />\r\n    </v-sheet>\r\n</template>\r\n\r\n<style scoped>\r\n.icon-draggable {\r\n    position: fixed;\r\n    z-index: 5000;\r\n    touch-action: none;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {nextTick, onBeforeMount, ref, unref, watch} from 'vue';\r\nimport {injectGameData} from '@/scripts/data';\r\nimport {provideBlueprintModel, type BlueprintModel} from '@/scripts/model/store';\r\nimport {provideFilter} from '@/scripts/filter';\r\nimport {provideSettings} from '@/scripts/settings';\r\nimport {mdiFormatListBulletedType} from '@mdi/js';\r\nimport {useAnalytics, loadBlueprint} from '@/composables';\r\nimport {useTheme} from 'vuetify';\r\n\r\nconst drawer = ref(true);\r\nconst showSummary = ref(false);\r\nconst showSummaryCompact = ref(false);\r\nconst gameData = injectGameData();\r\nconst blueprintModel = ref<BlueprintModel | undefined>();\r\nconst settings = ref<ReturnType<typeof provideSettings> | undefined>();\r\nconst theme = useTheme();\r\n\r\nfunction toggleSummary() {\r\n    //toggle in curcular way - hidden -> compact -> full\r\n    if(unref(showSummary)) {\r\n        if(unref(showSummaryCompact)) {\r\n            showSummaryCompact.value = false;\r\n        } else {\r\n            showSummary.value = false;\r\n            showSummaryCompact.value = true;\r\n        }\r\n    } else {\r\n        showSummary.value = true;\r\n        showSummaryCompact.value = true;\r\n    }\r\n    const _settings = unref(settings);\r\n    if(_settings) {\r\n        _settings.showSummary = unref(showSummary);\r\n        _settings.showSummaryCompact = unref(showSummaryCompact);\r\n    }\r\n}\r\n\r\nonBeforeMount(() => {\r\n    useAnalytics(gameData.gameDescription.name);\r\n    const _blueprintModel = provideBlueprintModel(gameData);\r\n    const filter = provideFilter(gameData);\r\n    const _settings = provideSettings(gameData, _blueprintModel, filter);\r\n    document.title = `daxfb-calculator - calculator/factory planner for \"${gameData.gameDescription.description}\"`;\r\n\r\n    const preloadBlueprint = gameData.preloadBlueprint;\r\n    Promise.resolve()\r\n        .then(() => new Promise((resolve) => { nextTick(() => resolve(undefined)); }))\r\n        .then(() => new Promise((resolve) => {\r\n            if(preloadBlueprint) {\r\n                setTimeout(() => {\r\n                    loadBlueprint(gameData, _blueprintModel, preloadBlueprint.data, preloadBlueprint.name);\r\n                    gameData.initPreloadBlueprint(undefined);\r\n                    resolve(undefined);\r\n                }, 50);\r\n            } else {\r\n                resolve(undefined);\r\n            }\r\n        }))\r\n        .then(() => {\r\n            blueprintModel.value = _blueprintModel;\r\n\r\n            //load at start, and don't watch for changes from another tabs\r\n            showSummary.value = _settings.showSummary;\r\n            showSummaryCompact.value = _settings.showSummaryCompact;\r\n            settings.value = _settings;\r\n        });\r\n});\r\n\r\nwatch(() => unref(settings)?.darkTheme, () => {\r\n    theme.global.name.value = unref(settings)?.darkTheme ? 'dark' : 'light';\r\n});\r\n</script>\r\n\r\n<template>\r\n    <icon-draggable v-if=\"blueprintModel\" />\r\n    <v-app v-if=\"blueprintModel\" class=\"main-window\">\r\n        <v-app-bar density=\"compact\">\r\n            <template #prepend>\r\n                <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\" />\r\n            </template>\r\n            <v-app-bar-title>{{ `${blueprintModel?.blueprintName || ''}` }}</v-app-bar-title>\r\n            <template #append>\r\n                <main-toolbar>\r\n                    <template #append>\r\n                        <tooltip-button\r\n                            tooltip=\"Toggle Summary\"\r\n                            :icon=\"mdiFormatListBulletedType\"\r\n                            @click=\"toggleSummary()\"\r\n                        />\r\n                    </template>\r\n                </main-toolbar>\r\n            </template>\r\n        </v-app-bar>\r\n        <v-navigation-drawer v-model=\"drawer\" permanent>\r\n            <icon-list-panel />\r\n        </v-navigation-drawer>\r\n        <v-main scrollable>\r\n            <blueprint-panel />\r\n        </v-main>\r\n        <v-navigation-drawer\r\n            v-model=\"showSummary\"\r\n            permanent\r\n            location=\"right\"\r\n            :rail=\"showSummaryCompact\"\r\n            :class=\"showSummaryCompact ? 'summary-no-overflow' : ''\"\r\n        >\r\n            <!-- remove completely, so will not recalculate if not shown -->\r\n            <summary-panel v-if=\"showSummary\" :compact=\"showSummaryCompact\" />\r\n        </v-navigation-drawer>\r\n    </v-app>\r\n    <v-overlay\r\n        v-if=\"!blueprintModel\"\r\n        model-value\r\n        persistent\r\n        class=\"align-center justify-center\"\r\n    >\r\n        <v-progress-circular indeterminate color=\"primary\" />\r\n    </v-overlay>\r\n</template>\r\n\r\n<style scoped>\r\n.main-window {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n</style>\r\n\r\n<style>\r\n.summary-no-overflow, .summary-no-overflow > * {\r\n    overflow-y: hidden!important;\r\n}\r\n</style>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {useLinkApi, useErrorHandler} from '@/composables';\r\nimport {useGameDataProvider} from '@/scripts/data';\r\nimport {FileNameHandler} from '@/scripts/model/serializer';\r\nimport {computed, onMounted, ref, unref, watch} from 'vue';\r\n\r\nconst emit = defineEmits(['ready']);\r\n\r\nlet blueprintName = '';\r\nlet blueprintData = '';\r\nconst loadGameId = ref('');\r\nconst gameId = ref('');\r\nconst {showError} = useErrorHandler();\r\nconst {gameList, gameDataRef, isReady, isLoading: isGameDataLoading, isAutomatic} = useGameDataProvider(gameId, (err: unknown) => {\r\n    blueprintName = '';\r\n    blueprintData = '';\r\n    gameId.value = '';\r\n    isAutomatic.value = false;\r\n    showError('Failed to load game data', err);\r\n});\r\nconst {isLoading: isLinkLoading, exec} = useLinkApi();\r\nconst isLoading = computed(() => unref(isGameDataLoading) || unref(isLinkLoading));\r\n\r\nwatch(gameDataRef, () => {\r\n    const gameData = unref(gameDataRef);\r\n    if(gameData) {\r\n        if(blueprintData) {\r\n            gameData.initPreloadBlueprint({\r\n                name: blueprintName,\r\n                data: blueprintData,\r\n            });\r\n        }\r\n        emit('ready', gameData);\r\n    }\r\n});\r\n\r\nfunction loadGameData(_gameId: string) {\r\n    loadGameId.value = _gameId;\r\n    gameId.value = _gameId;\r\n    isAutomatic.value = true;\r\n}\r\n\r\nfunction loadGameDataManual() {\r\n    gameId.value = unref(loadGameId);\r\n    isAutomatic.value = false;\r\n}\r\n\r\nfunction fetchLink(_gameId: string | null | undefined, link: string, name: string | null | undefined) {\r\n    type LoadLinkResponse = {\r\n        gameId: string;\r\n        data: string;\r\n        name?: string | null;\r\n    };\r\n    exec<LoadLinkResponse>('load', {link})\r\n        .then((loadedLink: LoadLinkResponse) => {\r\n            if(!loadedLink.gameId || (typeof (loadedLink.gameId) !== 'string')\r\n                || !loadedLink.data || (typeof (loadedLink.data) !== 'string')) {\r\n                throw new Error('data provider returned invalid response');\r\n            }\r\n            if(_gameId && (loadedLink.gameId !== _gameId)) {\r\n                throw new Error(`gameId mismatch: ${loadedLink.gameId} != ${_gameId}`);\r\n            }\r\n            blueprintName = name || loadedLink.name || '';\r\n            blueprintData = loadedLink.data;\r\n            loadGameData(loadedLink.gameId);\r\n        })\r\n        .catch((err) => {\r\n            showError('Failed to load link', err);\r\n        });\r\n}\r\n\r\nonMounted(() => {\r\n    const seacrhParams = new URLSearchParams(window.location.search);\r\n    const _gameId = seacrhParams.get('gameId');\r\n    const link = seacrhParams.get('link');\r\n    let name = seacrhParams.get('name');\r\n    if(link) {\r\n        if(name) {\r\n            name = FileNameHandler.fileNameToBlueprintName(name + '.txt');\r\n        }\r\n        fetchLink(_gameId, link, name);\r\n    }\r\n    if(_gameId) {\r\n        loadGameData(_gameId);\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <v-card v-if=\"!isReady\" title=\"Select game\" variant=\"outlined\">\r\n        <v-card-text>\r\n            <v-radio-group v-model=\"loadGameId\">\r\n                <v-radio v-for=\"(value, key) in gameList\" :key=\"key\" :label=\"value\" :value=\"key\" />\r\n            </v-radio-group>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n            <v-btn color=\"primary\" variant=\"outlined\" :disabled=\"!loadGameId\" @click=\"loadGameDataManual\">\r\n                Load game\r\n            </v-btn>\r\n        </v-card-actions>\r\n        <v-overlay\r\n            v-model=\"isLoading\"\r\n            contained\r\n            persistent\r\n            class=\"align-center justify-center\"\r\n        >\r\n            <v-progress-circular indeterminate color=\"primary\" />\r\n        </v-overlay>\r\n    </v-card>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://t.me/doubleaxe, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {mdiClose} from '@mdi/js';\r\nimport {ref} from 'vue';\r\nimport {useErrorHandler} from '@/composables';\r\nimport {ErrorCollector} from '@/scripts/error-collector';\r\n\r\nconst dialog = ref(false);\r\nconst expanded = ref(false);\r\nconst title = ref('');\r\nconst details = ref<string[]>([]);\r\nconst color = ref('');\r\n\r\nconst {errorHandler} = useErrorHandler();\r\nerrorHandler.value = (_title, _error, _isWarning) => {\r\n    title.value = _title;\r\n    expanded.value = false;\r\n    dialog.value = true;\r\n    color.value = _isWarning ? 'warning' : 'error';\r\n\r\n    const errorCollector = (_error instanceof ErrorCollector) ? _error : new ErrorCollector().collectError(_error);\r\n    details.value = errorCollector.print();\r\n};\r\n</script>\r\n\r\n<template>\r\n    <v-dialog v-model=\"dialog\">\r\n        <v-card>\r\n            <v-toolbar :color=\"color\">\r\n                <v-toolbar-title>{{ (color == 'warning') ? 'Warning' : 'Error' }}</v-toolbar-title>\r\n                <v-spacer />\r\n                <v-btn\r\n                    :icon=\"mdiClose\"\r\n                    @click=\"dialog = false\"\r\n                />\r\n            </v-toolbar>\r\n            <v-card-title>{{ title }}</v-card-title>\r\n            <v-card-text>\r\n                <v-expansion-panels v-if=\"details.length\">\r\n                    <v-expansion-panel v-model=\"expanded\">\r\n                        <v-expansion-panel-title>Error Details</v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-list :lines=\"undefined\" density=\"compact\">\r\n                                <v-list-item v-for=\"text in details\" :key=\"text\" :title=\"text\" />\r\n                            </v-list>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                </v-expansion-panels>\r\n            </v-card-text>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n","<!--\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n-->\r\n<script setup lang=\"ts\">\r\nimport {provide, shallowRef} from 'vue';\r\nimport {GameDataKey, type GameData} from './scripts/data';\r\n\r\nconst gameData = shallowRef<GameData | undefined>();\r\nprovide(GameDataKey, gameData);\r\n\r\nfunction provideGameData(_gameData: GameData) {\r\n    gameData.value = _gameData;\r\n}\r\n\r\nwindow.oncontextmenu = function(event: MouseEvent) {\r\n    const pointerEvent = event as PointerEvent;\r\n    //prevent chrome dev tools simulated context menu during long press in device mode\r\n    if(pointerEvent.pointerType === 'touch') {\r\n        // context menu was triggerd by long press\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n</script>\r\n\r\n<template>\r\n    <error-dialog />\r\n    <game-data-loader v-if=\"!gameData\" @ready=\"provideGameData\" />\r\n    <main-window v-if=\"gameData\" />\r\n</template>\r\n","/*\r\nAuthor: Alexey Usov (dax@xdax.ru, https://github.com/doubleaxe)\r\nPlease don't remove this comment if you use unmodified file\r\n*/\r\n\r\nimport {createApp} from 'vue';\r\nimport {createVuetify} from 'vuetify';\r\nimport {aliases, mdi} from 'vuetify/iconsets/mdi-svg';\r\nimport App from './app.vue';\r\n\r\nimport './assets/vuetify.scss';\r\nimport './assets/main.scss';\r\n\r\nconst app = createApp(App);\r\n\r\napp.use(createVuetify({\r\n    icons: {\r\n        defaultSet: 'mdi',\r\n        aliases,\r\n        sets: {\r\n            mdi,\r\n        },\r\n    },\r\n}));\r\n\r\napp.mount('#app');\r\n"],"names":["makeMap","str","expectsLowerCase","i","list","isArray","value","res","item","normalized","isString$1","normalizeStyle","key","isObject$1","ret","cssText","styleCommentRE","name","isSpecialBooleanAttr","toDisplayString","val","objectToString","isFunction$1","replacer","_key","isMap","entries","isSet","isPlainObject","NOOP","NO","extend","remove","arr","el","hasOwnProperty$1","hasOwn","isPromise","toRawType","toTypeString","cacheStringFunction","fn","cache","camelize","hyphenate","hyphenateRE","hasChanged","oldValue","invokeArrayFns","fns","arg","obj","looseToNumber","toNumber","_globalThis","activeEffectScope","EffectScope","detached","currentEffectScope","l","fromParent","last","recordEffectScope","effect","scope","getCurrentScope","createDep","effects","dep","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","targetMap","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","parent","lastShouldTrack","shouldTrack","effectTrackDepth","maxMarkerBits","cleanupEffect","pauseTracking","trackStack","resetTracking","track","target","type","depsMap","trackEffects","debuggerEventExtraInfo","trigger","newValue","oldTarget","newLength","isIntegerKey","triggerEffects","triggerEffect","getDepFromReactive","object","isSymbol","get$1","createGetter","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","toRaw","args","receiver","isReadonly","shallow","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","builtInSymbols","isNonTrackableKeys","isRef","readonly","reactive","set$1","createSetter","shallowSet","isShallow","result","deleteProperty","hadKey","has$1","mutableHandlers","ownKeys","readonlyHandlers","shallowReactiveHandlers","toShallow","get","rawTarget","rawKey","wrap","toReadonly","toReactive","has","size","getProto","set","clear","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","isKeyOnly","done","createInstrumentations","add","createReadonlyMethod","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","rawType","targetTypeMap","createReactiveObject","targetType","getTargetType","proxy","collectionHandlers","baseHandlers","ref","triggerRefValue","newVal","createRef","rawValue","RefImpl","__v_isShallow","trackRefValue","useDirectValue","shallowUnwrapHandlers","isReactive","objectWithRefs","ObjectRefImpl","_object","_defaultValue","toRef","defaultValue","_a$1","ComputedRefImpl","_setter","isSSR","self","onlyGetter","getterOrOptions","getter","setter","warn","msg","callWithErrorHandling","instance","err","values","callWithAsyncErrorHandling","cur","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","resolvedPromise","p","currentFlushPromise","start","flushIndex","end","queue","id","middle","job","isFlushing","findInsertionIndex","queueFlush","isFlushPending","cb","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","deduped","a","b","getId","comparator","diff","check","rawArgs","modelArg","props","modifiersKey","number","trim","EMPTY_OBJ","handlerName","toHandlerKey","event","handler","isModelListener","appContext","cached","raw","comp","hasExtends","extendEmits","normalizedFromExtend","isEmitListener","options","prev","currentRenderingInstance","currentScopeId","popScopeId","renderFnWithContext","setBlockTracking","prevInstance","setCurrentRenderingInstance","ctx","markAttrsAccessed","Component","vnode","withProxy","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","inheritAttrs","proxyToUse","fallthroughAttrs","getFunctionalFallthrough","blockStack","createVNode","Comment","root","shapeFlag","keys","cloneVNode","isOn$1","filterModelListeners","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","component","nextProps","nextChildren","patchFlag","emits","dynamicProps","hasPropsChanged","emitsOptions","nextKeys","queueEffectWithSuspense","suspense","queuePostFlushCb","provide","currentInstance","provides","parentProvides","treatDefaultAsFactory","watchEffect","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","isMultiSource","s","traverse","onCleanup","baseGetter","cleanup","useSSRContext","ssrCleanup","INITIAL_WATCHER_VALUE","v","queuePostRenderEffect","queueJob","unwatch","instanceWatch","publicThis","createPathGetter","setCurrentInstance","path","segments","seen","useTransitionState","state","TransitionHookValidator","getCurrentInstance$1","children","getTransitionRawChildren","child","c","rawProps","mode","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","transitionKeyChanged","getTransitionKey","prevTransitionKey","oldInnerChild","leavingHooks","delayedLeave","getLeavingNodesForType","leavingVNodes","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","callHook","hook","callAsyncHook","leavingVNode","leavingVNodesCache","isSameVNodeType","afterHook","cancelHook","called","hooks","isKeepAlive","keyedFragmentCount","parentKey","Fragment","keepComment","isAsyncWrapper","onActivated","onDeactivated","wrappedHook","current","injected","injectHook","keepAliveRoot","prepend","isInSSRComponentSetup","lifecycle","onBeforeMount","createHook","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","modifiers","binding","NULL_DYNAMIC_COMPONENT","resolveAsset","DIRECTIVES","warnMissing","maybeSelfReference","COMPONENTS","selfName","resolve","registry","renderItem","index","fallback","slot","validSlotContent","ensureValidVNode","rendered","createBlock","noSlotted","vnodes","isVNode","toHandlers","preserveCaseIfNecessary","getPublicInstance","isStatefulComponent","publicPropertiesMap","PublicInstanceProxyHandlers","accessCache","n","hasSetupBinding","normalizedProps","publicGetter","cssModule","globalProperties","descriptor","resolveMergedOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","resolveInjections","injectOptions","methods","methodHandler","computedOptions","opt","computed","watchOptions","createWatcher","provideOptions","registerLifecycleHook","register","_hook","expose","exposed","components","checkDuplicateProperties","unwrapRef","normalizeInject","inject$1","callHook$1","h","r","base","globalMixins","m","mergeOptions","resolved","optionMergeStrategies","mixins","to","strats","from","asMixin","strat","internalOptionMergeStrats","mergeDataFn","mergeInject","mergeObjectOptions","mergeAsArray","mergeWatchOptions","merged","initProps","isStateful","shallowReactive","rawCurrentProps","hasAttrsChanged","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","rawPrevProps","isReservedProp","camelKey","rawCastValues","castValues","needCastKeys","isAbsent","hasDefault","propsDefaults","extendProps","normalizePropsOptions","validatePropName","normalizedKey","prop","stringIndex","booleanIndex","match","ctor","isSameType","getTypeIndex","expectedTypes","isInternalKey","normalizeVNode","rawSlot","rawSlots","normalizeSlot","normalizeSlotValue","normalizeVNodeSlots","initSlots","needDeletionCheck","deletionComparisonTarget","normalizeObjectSlots","createAppContext","createAppAPI","hydrate","rootComponent","context","installedPlugins","isMounted","app","version$1","plugin","directive","rootContainer","isHydrate","isSVG","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","owner","refs","oldRef","_isString","_isRef","existing","doSet","baseCreateRenderer","createHydrationFns","getGlobalThis","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","getNextHostNode","Text","Static","hostInsert","hostCreateText","hostCreateComment","hostInsertStaticContent","moveStaticNode","nextSibling","next","hostNextSibling","hostRemove","mountElement","patchElement","transition","dirs","setScopeId","hostPatchProp","vnodeHook","needCallTransitionHooks","invokeDirectiveHook","scopeId","hostSetScopeId","subTree","parentVNode","cloneIfMounted","newProps","patchBlockChildren","dynamicChildren","areChildrenSVG","patchProps","oldProps","invokeVNodeHook","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","hostParentNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","mountComponent","initialVNode","createComponentInstance","internals","setupComponent","placeholder","setupRenderEffect","invalidateJob","bu","u","originNext","toggleRecurse","nextTree","renderComponentRoot","prevTree","isAsyncWrapperVNode","bm","hydrateNode","scopedInitialVNode","update","updateProps","c2","prevShapeFlag","c1","hostSetElementText","mountChildren","EMPTY_ARR","oldLength","unmountChildren","commonLength","l2","e2","e1","nextPos","parentAnchor","unmount","s1","s2","keyToNewIndexMap","nextChild","patched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","toBePatched","newIndex","j","increasingNewIndexSequence","nextIndex","move","moveType","leave","afterLeave","doRemove","shouldInvokeVnodeHook","shouldInvokeDirs","removeFragment","removeStaticNode","bum","um","ch1","ch2","traverseStaticChildren","len","arrI","isTeleportDisabled","isTargetSVG","resolveTarget","select","targetSelector","TeleportImpl","patchChildren","insert","querySelector","createText","createComment","mainAnchor","targetAnchor","mount","currentContainer","moveTeleport","nextTarget","updateCssVars","isReorder","targetNode","hydrateChildren","node","openBlock","disableTracking","currentBlock","closeBlock","isBlockTreeEnabled","createElementBlock","setupBlock","InternalObjectKey","normalizeKey","ref_key","ref_for","createBaseVNode","isBlockNode","needFullChildrenNormalization","normalizeRef","normalizeChildren","_createVNode","cloned","isClassComponent","guardReactiveProps","style","mergedProps","extraProps","mergeProps","createCommentVNode","text","asBlock","slotFlag","toMerge","normalizeClass","incoming","emptyAppContext","normalizeEmitsOptions","setupStatefulComponent","markRaw","setup","setupContext","createSetupContext","setupResult","resolvedResult","finishComponentSetup","handleSetupResult","compile","skipOptions","template","isCustomElement","compilerOptions","finalCompilerOptions","delimiters","componentCompilerOptions","applyOptions","proxyRefs","getComponentName","includeInferred","debugOptions","propsOrChildren","ssrContextKey","nodeOps","doc","svgNS","tag","is","content","before","templateContainer","wrapper","patchClass","transitionClasses","patchStyle","isCssString","currentDisplay","setStyle","importantRE","prefixed","autoPrefix","rawName","prefixCache","capitalize","prefixes","xlinkNS","isBoolean","includeBooleanAttr","patchDOMProp","needRemove","patchEvent","prevValue","nextValue","invokers","existingInvoker","invoker","createInvoker","optionsModifierRE","initialValue","e","patchStopImmediatePropagation","getNow","originalStop","nativeOnRE","Transition","DOMTransitionPropsValidators","TransitionPropsValidators","hasExplicitCallback","baseProps","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","durations","normalizeDuration","finishLeave","removeTransitionClass","makeEnterHook","isAppear","finishEnter","addTransitionClass","NumberOf","cls","_vtc","resolveIfNotStale","explicitTimeout","timeout","propCount","getTransitionInfo","expectedType","endEvent","ended","onEnd","getStyleProperties","styles","transitionDelays","TRANSITION","transitionDurations","animationDelays","ANIMATION","animationDurations","transitionTimeout","animationTimeout","hasTransform","getTimeout","delays","d","toMs","forceReflow","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","cssTransitionProps","resolveTransitionProps","dx","dy","clone","getModelAssigner","vModelText","lazy","castToNumber","domValue","addEventListener","modifierGuards","systemModifiers","withModifiers","vShow","setDisplay","renderer","ensureRenderer","createRenderer","rendererOptions","createApp","containerOrSelector","normalizeContainer","_classPrivateFieldSet","privateMap","_classExtractFieldDescriptor","_classApplyDescriptorSet","_classPrivateFieldGet","_classApplyDescriptorGet","action","getNestedValue","deepEqual","getObjectValueByPath","getPropertyFromItem","property","length","unit","keyCodes","keyValues","pick","paths","found","rest","omit","exclude","min","max","padEnd","chunked","mergeDeep","arrayFn","out","sourceProperty","targetProperty","toKebabCase","findChildrenWithProvide","_arr","_pointer","CircularBuffer","_classPrivateFieldInitSpec","toRefs","includes","EventProp","hasEvent","_len2","_key2","block","parseAnchor","isRtl","side","align","toPhysical","Box","x","y","width","height","getOverflow","rect","tx","ta","sx","sy","w","animate","keyframes","animation","createMessage","message","vm","generateComponentTrace","consoleWarn","consoleError","formatComponentName","includeFile","file","classify","tree","currentRecursiveSequence","srgbForwardMatrix","rgb","transform","srgbForwardTransform","matrix","g","srgbReverseTransform","srgbReverseMatrix","xyz","cielabForwardTransform","t","delta","transformedY","cielabReverseTransform","Ln","lab","color","hex","int","HexToRGB","parseHex","chunk","lighten","amount","darken","parseColor","getCurrentInstance","getCurrentInstanceName","_map","getUid","uid","_uid","propsFactory","defaults","definition","useToggleScope","effectScope","active","propIsDefined","defineComponent","useDefaults","componentDefaults","_a","_props","_subcomponentDefaults","shallowRef","subComponents","_ref","provideDefaults","_b","injectSelf","DefaultsSymbol","genericComponent","exposeDefaults","defineComponent$1","klass","getScrollParents","stopAt","elements","hasScrollbar","IN_BROWSER","SUPPORTS_INTERSECTION","SUPPORTS_TOUCH","SUPPORTS_FOCUS_VISIBLE","injectedDefaults","providedDefaults","newDefaults","scoped","properties","reset","defaultDisplayOptions","getPlatform","userAgent","regexp","android","ios","cordova","electron","chrome","edge","firefox","opera","win","mac","linux","ssr","createDisplay","thresholds","mobileBreakpoint","parseDisplayOptions","platform","getClientHeight","getClientWidth","sm","xs","md","lg","breakpointValue","xl","xxl","mobile","useDisplay","display","DisplaySymbol","aliases$1","mdi$1","VClassIcon","VComponentIcon","_ref2","defaultSets","icons","IconSymbol","iconAlias","icon","iconSetName","setName","iconName","useProxiedModel","internal","kebabProp","isControlled","model","transformIn","transformOut","internalValue","en","replace","params","_len","currentLocale","messages","fallbackLocale","createNumberFunction","useProvided","provided","defaultRtl","i18n","rtl","useLocale","locale","LocaleSymbol","createRtl","useRtl","APCAcontrast","background","Ytxt","Rtxt","Rco","Gtxt","Gco","Btxt","Bco","Ybg","Rbg","Gbg","Bbg","blkThrs","blkClmp","deltaYmin","SAPC","normBG","normTXT","scaleBoW","revBG","revTXT","scaleWoB","outputContrast","defaultThemeOptions","parseThemeOptions","themes","theme","computedThemes","acc","original","parsedOptions","createRange","variation","RGBtoHex","colorVal","blackContrast","whiteContrast","lines","themeName","variables","dark","createCssClass","genCssVariables","bgLines","fgLines","colors","install","head","entry","getHead","styleEl","updateStyles","themeClasses","ThemeSymbol","newTheme","useTheme","selector","line","resizeRef","contentRect","observer","useLayout","layout","VuetifyLayoutKey","isKeptAlive","layoutItemStyles","layoutItemScrimStyles","previousLayer","position","layer","rootZIndex","parentLayout","ROOT_ZINDEX","registered","computedOverlaps","map","overlap","overlaps","top","bottom","topPosition","bottomPosition","topAmount","bottomAmount","layers","uniquePriorities","priorities","items","transitionsEnabled","mainRect","mainStyles","getLayoutItem","rootVm","order","layoutSize","elementSize","disableTransitions","absolute","instanceIndex","isHorizontal","zIndex","isOppositeHorizontal","isOppositeVertical","positions","layoutSizes","activeItems","disabledTransitions","layoutRect","layoutStyles","layoutClasses","createVuetify","blueprint","aliases","version","_c","mdi","VApp","provideTheme","layoutRef","createLayout","rtlClasses","useRender","VDefaultsProvider","offsetTop","offsetLeft","offsetWidth","offsetHeight","left","createJavascriptTransition","functions","ExpandTransitionGenerator","offsetProperty","sizeProperty","initialStyle","offset","expandedParentClass","resetStyles","VDialogTransition","speed","els","getDimensions","targetBox","elBox","nullifyTransforms","originX","originY","offsetX","offsetY","maxs","tsx","tsy","asa","createCssTransition","VScaleTransition","VSlideYTransition","VExpandXTransition","convertToUnit","VResponsive","aspectStyles","useAspectStyles","dimensionStyles","useDimension","mounted$1","_observe","isIntersecting","unmounted$1","observe","Intersect$1","MaybeTransition","customProps","VImg","currentSrc","image","naturalWidth","naturalHeight","normalisedSrc","aspectRatio","pollForSize","init","lazyImg","img","timer","imgHeight","imgWidth","containClasses","sources","__preloadImage","isBooted","VToolbarTitle","hasText","border","classes","elevation","rounded","useTextColor","useColor","textColorClasses","textColorStyles","useBackgroundColor","backgroundColorClasses","backgroundColorStyles","allowedDensities$1","VToolbar","borderClasses","useBorder","elevationClasses","useElevation","roundedClasses","useRounded","isExtended","extensionHeight","hasTitle","hasImage","extension","contentHeight","useSsrBoot","VAppBar","vToolbarRef","ssrBootStyles","toolbarProps","allowedVariants$2","genOverlays","isClickable","variantClasses","variant","unref","colorClasses","colorStyles","VBtnGroup","densityClasses","useDensity","useGroupItem","injectKey","required","group","disabled","isSelected","selectedClass","useGroup","isUnmounted","selected","groupVm","unwrapped","unregister","step","currentIndex","currentId","newItem","getItemIndex","ids","getIds","modelValue","getValues","VBtnToggle","VBtnToggleSymbol","predefinedSizes","sizeClasses","sizeStyles","VIcon","slotIcon","iconData","useIcon","useSize","intersectionRef","VProgressCircular","MAGIC_RADIUS_CONSTANT","strokeWidth","diameter","underlayColorStyles","strokeDashOffset","normalizedValue","stopSymbol","calculate","localX","localY","isKeyboardEvent","radius","scale","centerX","centerY","ripples","delay","element","isTouchEvent","rippleHide","rippleShow","updateRipple","wasEnabled","enabled","isRippleEnabled","rippleStop","rippleCancelShow","removeListeners","Ripple","oppositeMap","getOffset","opposite","VProgressLinear","locationStyles","useLocation","normalizedBuffer","progress","isReversed","opacity","handleClick","right","bar","barColorStyles","LoaderSlot","positionValues","useRouter","useLink","RouterLink","resolveDynamicComponent","isLink","link","useBackButton","router","popped","removeBefore","removeAfter","onPopstate","useSelectLink","VBtn","useVariant","loaderClasses","useLoader","positionClasses","usePosition","isActive","isDisabled","isElevated","valueAttr","Tag","hasPrepend","hasAppend","hasIcon","hasColor","VAppBarNavIcon","VAppBarTitle","VAlertTitle","createSimpleFunctional","VAlert","variantProps","closeProps","hasClose","InputIcon","listener","VLabel","VFieldLabel","focusClasses","isFocused","focus","blur","allowedVariants$1","VField","focused","useFocus","useInputIcon","messagesId","labelRef","floatingLabelRef","controlRef","hasLabel","targetRect","targetEl","targetWidth","targetStyle","slotProps","onClick","hasClear","label","isOutlined","VMessages","wrapInArray","useForm","FormKey","form","internalErrorMessages","isPristine","isDirty","validationModel","errorMessages","isValid","isValidating","validationClasses","validate","resetValidation","validateOn","results","rule","VInput","hasMessages","_e","VCounter","counter","Refs","childRefs","activeTypes","VTextField","counterValue","onIntersect","vInputRef","vFieldRef","inputRef","onControlMousedown","onControlClick","onClear","onInput","hasCounter","inputProps","filterInputProps","rootAttrs","inputAttrs","resolveDirective","inputNode","hasDetails","VSelectionControlGroup","updateHandlers","trueValue","falseValue","isMultiple","currentValue","VSelectionControl","useSelectionControl","isFocusVisible","input","onFocus","onBlur","VCheckboxBtn","onChange","indeterminate","falseIcon","trueIcon","$event","VCheckbox","VAvatar","VChipGroupSymbol","VChip","onCloseClick","onKeyDown","hasFilter","VDivider","dividerStyles","createList","ListKey","useList","singleOpenStrategy","opened","parents","newOpened","multipleOpenStrategy","listOpenStrategy","mandatory","on","strategy","parentStrategy","independentSelectStrategy","singleSelected","independentSingleSelectStrategy","everySelected","childrenIds","cid","noneSelected","_ref7","emptyNested","selectStrategy","leafSingleSelectStrategy","leafSelectStrategy","classicSelectStrategy","openStrategy","getPath","parentId","isGroup","nested","VNestedSymbol","useNestedItem","computedId","uidSymbol","_","VListGroup","isOpen","open","_id","activatorProps","toggleIcon","VExpandTransition","VListItemSubtitle","VListItemTitle","VListItem","isIndeterminate","isGroupActivator","openOnSelect","roundedProps","lineClasses","hasSubtitle","VListSubheader","VListChildren","_d","itemProps","slotsWithItem","transformItem$1","title","transformItems$1","array","transformItem","isPrimitive","transformItems","VList","useListItems","useNested","activeColor","contentRef","onFocusin","onFocusout","onKeydown","location","focusable","idxx","idx","VListItemAction","useDelay","runDelayFactory","VMenuSymbol","useActivator","isTop","activatorEl","isHovered","firstEnter","runOpenDelay","runCloseDelay","openOnFocus","activatorEvents","events","openOnClick","availableEvents","contentEvents","menu","scrimEvents","activatorRef","activator","isComponentInstance","_useActivator","oldVal","getActivator","unbindActivatorProps","nextTick","bindActivatorProps","_ref3","k","_ref4","useLazy","hasContent","elementToViewport","point","getOffset$1","anchorToPoint","box","locationStrategies","useLocationStrategies","contentStyles","updateLocation","onResize","staticLocationStrategy","contentBox","connectedLocationStrategy","preferredAnchor","preferredOrigin","parsedAnchor","parsedOrigin","flipSide","flipAlign","flipCorner","viewportMargin","scrollParents","scrollBox","viewport","checkOverflow","_placement","targetPoint","contentPoint","maxWidth","maxHeight","resets","overflows","placement","_x","_y","hasOverflowX","hasOverflowY","newPlacement","available","pixelCeil","clamp","minWidth","minHeight","clean","frames","raf","run","frame","scrollStrategies","useScrollStrategies","onScroll","bindScroll","blockScrollStrategy","scrollElements","offsetParent","scrollbarWidth","scrollableParent","repositionScrollStrategy","slow","ric","useHydration","useScopeId","globalStack","useStack","disableGlobalStack","createStackEntry","stack","StackSymbol","lastZIndex","_zIndex","globalTop","_isTop","localTop","_target","targetElement","defaultConditional","checkEvent","checkIsActive","attachedRoot","handleShadow","ClickOutside","onMousedown","VOverlay","teleportTarget","useTeleport","scrimColor","stackStyles","contentEl","onClickOutside","animateClick","scrollParent","Scrim","closeConditional","VMenu","makeVOverlayProps","overlay","openChildren","VSelect","makeVTextFieldProps","vTextFieldRef","vMenuRef","_menu","useItems","transformed","selections","displayItems","listRef","hasChips","hasList","onChipClose","createTextVNode","query","filterItems","customFiltersLength","loop","customMatches","defaultMatches","filterKeys","keyFilter","defaultMatchesLength","customMatchesLength","strQuery","filteredItems","filteredMatches","transformedItems","matches","getMatches","highlightResult","VAutocomplete","search","isSelecting","VBadge","badgeAttrs","VCardSubtitle","VCardTitle","VCardItem","VCardText","VCard","hasHeader","hasCardItem","VCardActions","direction","vertical","touch","getPosition","handleSliderMouseUp","handleMouseMove","getActiveThumb","horizontalDirection","decimals","trimmedStep","thumbSize","tickSize","trackSize","numTicks","mousePressed","startOffset","trackContainerRef","activeThumbRef","roundValue","clamped","parseMouseMove","clickPos","clickOffset","trackStart","trackLength","thumbMoved","handleStop","handleStart","onMouseMove","onSliderMouseUp","onSliderTouchend","onSliderTouchstart","onSliderMousedown","percentage","parsedTicks","hasLabels","thumbColor","trackColor","trackFillColor","VSliderSymbol","VSliderThumb","slider","thumbLabel","pageup","pagedown","home","down","up","multipliers","parseKeydown","steps","_step","multiplier","VSliderTrack","showTicks","startDir","endDir","backgroundStyles","trackFillWidth","trackFillStyles","computedTicks","directionValue","tick","VSlider","thumbContainerRef","trackStop","VSheet","VDialog","after","firstElement","lastElement","forwardRefs","VExpansionPanels","VExpansionPanelSymbol","variantClass","VExpansionPanelTitle","expansionPanel","VExpansionPanelText","VExpansionPanel","groupItem","isBeforeSelected","isAfterSelected","VContainer","breakpoints$1","propMap$1","breakpointProps","offsetProps","orderProps","breakpointClass$1","className","ALIGN_SELF_VALUES","VCol","classList","hasColClasses","breakpoints","makeRowProps","prefix","def","alignProps","justifyProps","alignContentProps","propMap","classMap","breakpointClass","VRow","VMain","rootEl","isSticky","isStuck","stuckPosition","stickyStyles","lastScrollTop","layoutTop","sqrt2","samples","work","vprev","kineticEnergyToVelocity","vcurr","useVelocity","touches","addMovement","endTouch","getVelocity","newest","HORIZON","calculateImpulseVelocity","absX","absY","oops$1","isTemporary","touchless","onTouchstart","onTouchmove","onTouchend","maybeDragging","isDragging","dragProgress","pos","getProgress","oops","touchZone","inElement","touchX","touchY","inTouchZone","velocity","dragStyles","locations","VNavigationDrawer","isHovering","scrimStyles","useRefs","updateRef","VPagination","useResizeObserver","firstItem","totalWidth","itemWidth","totalVisible","getMax","minButtons","range","page","even","rangeStart","rangeLength","controls","prevDisabled","setValue","updateFocus","VRadio","VRadioGroup","VSwitch","loaderColor","control","VTextarea","controlHeight","textareaRef","sizerRef","padding","lineHeight","fieldStyle","calculateInputHeight","fieldClass","VTooltip","origin","GameItemType","GameItemType2","GameRecipeIOFlags","formatDigits","units","formatNumber","abs","exponent","formatIo","io","formatTransport","transport","formatItem","totalCountPerSecond","isClient","createFilterWrapper","filter","reject","bypassFilter","invoke","debounceFilter","ms","lastRejector","noop","_clearTimeout","timer2","resolveUnref","maxDuration","maxTimer","pausableFilter","extendFilter","eventFilter","pause","resume","onScopeDispose","createEventHook","off","tryOnScopeDispose","offFn","param","initialized","subscribers","composable","dispose","transformLTR","transformRTL","targets","tryOnMounted","sync","isPending","interval","stop","__getOwnPropSymbols$6","__hasOwnProp$6","__propIsEnum$6","__objRest$5","__defProp$2","__defProps$2","__getOwnPropDescs$2","__getOwnPropSymbols$2","__hasOwnProp$2","__propIsEnum$2","__defNormalProp$2","__spreadValues$2","__spreadProps$2","__objRest$1","watchWithFilter","plain","elRef","useEventListener","isString","listeners","cleanups","options2","useSupported","isSupported","useClipboard","isClipboardApiSupported","navigator","legacy","copied","useTimeoutFn","copiedDuring","legacyRead","read","updateText","legacyCopy","copy","_global","handlers","globalKey","getSSRHandler","__defProp$k","__getOwnPropSymbols$m","__hasOwnProp$m","__propIsEnum$m","__defNormalProp$k","__spreadValues$k","StorageSerializers","onError","storage","_a2","defaultWindow","rawInit","guessSerializerType","serializer","pauseWatch","resumeWatch","watchPausable","write","window","listenToStorageChanges","serialized","writeDefaults","mergeDefaults","isFunction","updateFromCustomEvent","useElementHover","toggle","entering","SwipeDirection","SwipeDirection2","__defProp$5","__getOwnPropSymbols$5","__hasOwnProp$5","__propIsEnum$5","__defNormalProp$5","__spreadValues$5","_navigator","overrideOptions","granted","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","eventName","_emit","getValue","BlueprintItemState","Objective","SavedKeys","isTouchDevice","Settings","blueprintModel","__publicField","touchDevice","tier","tierEqual","groupTier","autoSolveGraph","solvePrecision","filterSavedKeys","settings","SettingsKey","savedSettings","useLocalStorage","LOG","log","severity","binarySearch","pred","lo","hi","signal","zero$1","buf","L_CODES$1","LITERALS$1","LENGTH_CODES$1","HEAP_SIZE$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","_dist_code","DIST_CODE_LEN","base_length","base_dist","D_CODES$1","static_tree","extra_bits","extra_base","elems","max_length","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","d_code","dist","put_short","Buf_size","bi_reverse","code","bi_flush","gen_bitlen","desc","max_code","overflow","bits","f","stree","xbits","bl_count","next_code","_length_code","static_dtree","StaticTreeDesc","MAX_BITS$1","BL_CODES$1","MAX_BL_BITS","init_block","_n2","_m2","lc","send_code","ltree","extra","build_tree","prevlen","count","max_count","min_count","nextlen","curlen","build_bl_tree","scan_tree","max_blindex","send_tree","lcodes","dcodes","detect_data_type","block_mask","send_bits","STORED_BLOCK","bi_windup","stored_len","_tr_align$1","opt_lenb","static_lenb","STATIC_TREES","DYN_TREES","compress_block","trees","table","crcTable","crc","constants$2","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","Z_NO_FLUSH$2","Z_PARTIAL_FLUSH","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_UNKNOWN","L_CODES","LENGTH_CODES","HEAP_SIZE","strm","errorCode","rank","zero","slide_hash","wsize","flush_pending","flush_block_only","put_byte","putShortMSB","adler32_1","crc32_1","longest_match","cur_match","chain_length","scan","best_len","nice_match","limit","MIN_LOOKAHEAD","_win","wmask","strend","MAX_MATCH","fill_window","_w_size","more","deflate_stored","have","min_block","used","read_buf","BS_FINISH_STARTED","BS_NEED_MORE","deflate_fast","MIN_MATCH","hash_head","bflush","deflate_slow","max_insert","deflate_rle","deflate_huff","good_length","max_lazy","nice_length","max_chain","func","configuration_table","Config","lm_init","DeflateState","Z_DEFLATED$2","D_CODES","BL_CODES","deflateStateCheck","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","deflateResetKeep","deflateReset","deflateSetHeader","deflateInit2","level","windowBits","memLevel","Z_DEFAULT_COMPRESSION$1","Z_FIXED","deflateInit","MAX_WBITS$1","DEF_MEM_LEVEL","Z_DEFAULT_STRATEGY$1","deflate$2","old_flush","header","level_flags","Z_HUFFMAN_ONLY","PRESET_DICT","OS_CODE","beg","gzhead_extra","bstate","BS_BLOCK_DONE","deflateEnd","status","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflate_1$2","_has","assign","flattenChunks","chunks","common","_utf8len","q","string2buf","m_pos","str_len","buf_len","buf2binstring","STR_APPLY_UIA_OK","buf2string","utf16buf","c_len","utf8border","strings","ZStream","toString$1","Z_OK$2","Z_STREAM_END$2","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","zstream","dict","_flush_mode","chunkSize","Z_SYNC_FLUSH","Z_FULL_FLUSH","Deflate$1","deflate$1","deflator","deflateRaw$1","gzip$1","deflate_1$1","output","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","dolen","op","here","dodist","BAD$1","TYPE$1","lbase","lext","dbase","dext","lens","lens_index","codes","table_index","opts","sym","curr","drop","huff","here_bits","here_op","here_val","CODES$1","offs","LENS$1","low","mask","fill","incr","Z_FINISH$1","Z_BLOCK","Z_TREES","Z_DEFLATED","zswap32","InflateState","inflateStateCheck","inflateResetKeep","HEAD","ENOUGH_LENS","ENOUGH_DISTS","inflateReset","inflateReset2","inflateInit2","Z_OK$1","inflateInit","DEF_WBITS","fixedtables","lenfix","distfix","src","inflate$2","last_bits","last_op","last_val","TYPE","TYPEDO","put","inf_leave","hbuf","FLAGS","BAD","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODELENS","inftrees","LENS","DISTS","LEN","inffast","LIT","LENEXT","DIST","DISTEXT","MATCH","from_source","LENGTH","DONE","MEM","inflateEnd","inflateGetHeader","Z_STREAM_ERROR$1","inflateSetDictionary","dictid","updatewindow","inflate_1$2","GZheader","toString","Z_OK","gzheader","last_avail_out","Z_NEED_DICT","Z_DATA_ERROR","Z_MEM_ERROR","next_out_utf8","utf8str","tail","Z_STREAM_END","Inflate$1","inflate$1","inflator","inflateRaw$1","inflate_1$1","_hasatob","_hasbtoa","_hasBuffer","_TD","_TE","b64chs","b64ch","b64tab","tab","_U8Afrom","it","_mkUriSafe","_tidyB64","bin","u32","c0","asc","u8a","strs","cb_utob","cc","_fromCC","utob","re_utob","_encode","cb_btou","cccc","cp","btou","re_btou","_atob","b64re","u24","r1","r2","toUint8Array","_toUint8Array","_unURI","createItemImpl","_item","calculator","recipeDictionaryImpl","parsedRecipesImpl","createRecipeIOImpl","recipeImpl","_io","itemImpl","flags","createRecipeImpl","_recipe","itemArray","_recipeImpl","ioImpl","recipe","parsedItemsImpl","inputImpl","mapIO","outputImpl","createRecipeDictionaryImpl","_recipeDictionary","emptyMap","emptySet","recipesImpl","recipeDictionary","freezeMap","recipesByProduct","recipesByProductMap","hasIoTypes","freezeSet","recipesByInputMap","hasInputTypes","recipesByOutputMap","hasOutputTypes","createLogisticTransportImpl","logisticImpl","_transport","logistic","createLogisticImpl","_logistic","parsedItems","createDescriptionImpl","_description","description","gameImplementation","_gameData","compressed","gameData","inflate_1","parsedRecipes","minTier","maxTier","parsedLogistic","images","emptyRecipeDictionary","parsedGameData","useGameDataParser","gameItemsMap","gameItemsArray","gameFactoriesArray","gameLogisticByItemMap","gameLogisticByTypeMap","logisticArray","preloadBlueprint","gameAbstractItems","gameItemsByType","_preloadBlueprint","loadScript","cleanupArray","globalVariable","valid","validateObject","script","css","cssContent","gameId","__VERSION__","createCss","GameDataKey","useGameDataProvider","isLoading","isReady","isFailed","isAutomatic","gameDataRef","_gameId","gameList","_gameImplementation","useGameDataHolder","initializeCss","injectGameData","injectSettings","styleObject","Filter","filterItem","abstractFilterItemType","relativeAbsractItem","_f","itemTier","filteredGroup","FilterKey","provideFilter","injectFilter","PointBase","_baseAssign","sign","middleX","middleY","currentKey","newColorClass","colorClass","currentColorClass","resetKeyStore","ItemModelImpl","ownerItem","Rect","isReverce","ownerGameItem","isFlipped","causesSolvingError","newLink","targetItem","otherSide","linksCopy","RecipeModelImpl","sourceIo","reverce","targetIo","targetRecipe","similarItem","sourceIoKey","betweenIndex","sourceArray","inserted","orderMap","savedOrder","originalIndexes","customOrder","originalIndex","isLocked","objective","maybeTarget","oldRecipe","newRecipe","possibleRecipesArray","possibleRecipes","solvedCount","errorCollector","outputItem","inputIoArray","outputIoArray","inputIo","recipeWeight","calcWeight","ioArray","recipeMap","recipeItem","otherRecipe","selectedRecipe","pi","tau","tauEpsilon","epsilon","digits","append","Path","appendRound","x1","y1","x2","y2","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21","l21_2","l01","l20_2","t01","t21","a0","a1","ccw","cw","da","shape","slice","Linear","x$1","y$1","defined","constant","withPath","buffer","curve","Bump","argv","that","Basis","svgLinkBuilderStraight","bumpX","LinkShape","svgLink","middlePoint","LinkShapeDescriptor","inputFlipped","outputFlipped","LinkShapeModel","LinkShapeModelBuilder","inputPoint","outputPoint","breakingWidth","distance","sourcePoint","sourcePoint2","targetPoint2","svgLink1","svgLinkBuilderCurved","svgLink2","leftSide","inputPoint2","offsetMultiplier","outputPoint2","offsetMax","isLeftSide","Point","TransportModelImpl","_index","_link","flow","LogisticModelImpl","_globals","selectedTransport","selectedIndex","lockedTransportName","effectiveCount","inputCount","outputCount","selectedGameTransport","_LogisticSetModelImpl","logisticItem","logisticModel","LogisticSetModelImpl","LinkModelImpl","newKey","isAmbiguous","allInputs","allOutputs","_h","_g","sum","_flow","feasible","evaluation","bounded","tableau","Solution","solutionSet","varIndexByRow","variablesPerIndex","rhsColumn","roundingCoeff","lastRow","varIndex","variable","varValue","branchAndCutIterations","precision","Tableau","OptionalObjective","priority","nColumns","objectiveForPriority","column","unrestrictedVars","tmpRow","nVars","nConstraints","constraints","coeff","cost","rowIndex","constraint","constraintIndex","term","terms","nTerms","density","row","roundedEvaluation","varIndexesCycle","iterations","leavingRowIndex","rhsValue","unrestricted","enteringColumn","maxQuotient","costRow","leavingRow","lastColumn","coefficient","quotient","cycleData","optionalCostsColumns","reducedCost","nOptionalObjectives","enteringValue","isReducedCostNegative","o","optionalCostsColumns2","reducedCosts","minQuotient","colValue","pivotRow","pivotRowIndex","nNonZeroColumns","nonZeroColumns","v0","pivotColumnIndex","varIndexes","elt1","elt2","cycleFound","Variable","IntegerVariable","SlackVariable","Term","createRelaxationVariable","weight","rhs","isUpperBound","Constraint","newRhs","difference","newCoefficient","relaxationVariable","Equality","constraintUpper","constraintLower","cutConstraints","nCutConstraints","heightWithCuts","cut","varRowIndex","constraintRow","varRow","slackVarIndex","intVar","frac_d","colIndex","termCoeff","coef","fj","aj","slackColumn","colVar","varColumn","variableRow","slackIndex","digitPrecision","varNameRowString","spacePerColumn","varName","varNameLength","valueSpace","nameSpace","rowString","firstRowString","signSpace","reducedCostsString","optionalObjectivesCopy","matrixCopy","save","savedMatrix","savedRow","savedBasicIndexes","savedNonBasicIndexes","savedRows","savedCols","optionalObjectiveCopy","VariableData","biggestFraction","selectedVarIndex","selectedVarValue","nIntegerVars","integerVariables","fraction","highestCost","decimalPart","ignoreIntegerValues","volume","Model","slackVariable","isInteger","isUnrestricted","jsonModel","constraintsMin","constraintsMax","nConstraintIds","constraintIds","constraintId","equal","lowerBound","upperBound","relaxed","equality","nVariables","variableIds","objectiveName","variableId","variableConstraints","constraintNames","constraintName","constraintMin","constraintMax","useMIRCuts","debugCheckForCycles","GraphSolver","arrayItems","connections","solution","hasLockedItems","hasObjective","virtualSinks","errorCorrectionMode","sinkVariable","addTerm","itemVariable","connection","connectedItem","sink","constraint1","solved","GraphVertex","GraphEdge","inputVertex","outputVertex","TarjanGraphWalker","vertex","allFoundEdges","currentlyFound","upperEdges","upperVertex","outbound","edges","flows","links","otherFlow","lowerEdges","lowerVertex","scc","_links","distributeComplexFlow","distributeLinksFlow","distributeSimpleFlow","connectedItems","otherItem","resultConnections","processedLinks","outItem","inputs","outputs","checkAborted","layoutOptions","dagreLayoutOptions","resolveConnections","dagre","knownLayoutAlgorithmsElk","nodes","ports","relativeRect","algorithms","algorithm","elkLayoutOptions","rootElement","elk","currentLayoutOptions","visibleIoPriority","port","LayoutType","LayoutType2","layoutType","autoLayoutGraphDagre","autoLayoutGraphElk","markCycle","arrayCycle","partOfCycle","blueprintHasCycles","arrayScc","arraySeparateGraphs","hasCycles","arrayDag","BlueprintModelImpl","isUpgradeMode","setCount","rouunder","logisticName","transportName","offsetBy","itemIndexes","savedBlueprint","compatVersions","inputKey","outputKey","loadedLink","normalizeItemPositions","dirtyItems","mustSolve","_bulkUpdate","resetOrSolveGraph","haveItems","useDebounceFn","_items","minItemXY","minX","minY","maxItemXY","maxX","maxY","SummaryType","SummaryType2","inputByType","outputByType","costByItem","blueprintItem","cpsTotal","ioByItem","summary","summaryResult","ioByType","totals","sampleItem","summaryType","BlueprintModelKey","provideBlueprintModel","injectBlueprintModel","_summary","calculateSummary","mainElementRef","tooltipObject","startTooltipTimeout","cancelTooltipTimeout","onPointerMove","evt","tooltipText","tooltipElement","mainElement","unrefElement","parentElement","hiddenIo","objectiveIcon","hiddenIoTooltip","isFat","mdiArrowLeft","mdiArrowRight","scrollboxElement","computedStyle","isPointInsideElement2","screenToClient","rects","parentRect","clientRect","div","clientRects","goatcounter","pathname","useErrorHandler","createGlobalState","errorHandler","showError","useLinkApi","abortController","exec","command","body","_abortController","response","errorData","jsonData","error","ExportTarget","HEADER_FOOTER","FOOTERS","buildHeader","GAME_HEADER","footer","HEADER_LENGTH","BlueprintEncoder","deflate_1","encoded","fromUint8Array","encode","numChunks","BlueprintDecoder","_savedBlueprint","fullHeader","HEADER_HEADER","game","rawEncoded","decompressed","decode","FileNameHandler","_options","encodedBlueprint","blueprintName","blueprintHeader","noiseMatch","headerMatch","fileName","exportTarget","ErrorCollector","_err","ERROR_TITLE","_fileName","decoded","useNumberInputHelper","tempNumber","addNumber","updateNumber","resetNumber","useEventHook","NotifierKeyValues","DraggableHooksImpl","justEventHook","useSharedMouse","createSharedComposable","currentlyDragging","lastMousePosition","globalHooks","useDragAndDrop","nextActivatorElem","activatorElem","movableElem","movableElemAuto","dropZoneSurfaceElem","dropZoneOriginElem","offsetPosition","screenRect","currentItem","dropZoneOrigin","updatePosition","movableRect","mousePosition","onStart","draggable","activatorRect","movable","dragStart","storedEvenet","cancelDelayedStart","useLeftPanelDragAndDrop","LinkDragAndDropItem","useDragAndScroll","onMove","mouse","deltaScroll","scroll","onStop","globalDragAndDropEvents","useGlobalDragAndDropListener","itemRect","waitingInside","visibleRect","scrollX","scrollY","SelectedClassType","SelectedItem","clazz","usePointAndClick","selectedItem","notifySelected","parentElem","selectItem","processSelected","_selectedItem","wasHandled","screenPosition","clientPosition","useBlueprintSurface","surfaceElem","originElem","marginSize","marginStep","initialScrollOffset","applyStyle","elem","roundToStep","updateSurface","resetScroll","_minItemXY","_maxItemXY","calculateItemPositions","boundingRect","unscaledRect","surfaceStyle","boundingRectRef","useSharedBlueprintSurface","useLinkDragAndDrop","computedIconClass","highlightBorderSide","computedDescriptionClass","isLtr","cpsMaxTotal","menuOpened","itemOptions","changeObjective","changeUpgradeMode","mainDivElement","itemStateColor","itemHooks","computedElevation","computeStyle","computedSelectedClass","mainDiv","mainDivrect","ioScreenRects","ioList","ioElements","ioClientRects","rightSide","updateIoRects","countPerSecond","_selectedTransport","_count","_countPerSecond","logisticSet","flowTotal","mainDivRect","buildLink","link0","defaultColor","hoveringItem","hoveringBetweenIo","draggableClass","draggableStyle","_isDragging","_dragRect","detectItemFromPoint","screenPoint","getSelfLinkNeighbourIo","sourceItem","sourceElem","betweenIo","neighbourIo","io1","processSelfLinkInsertionPoint","processSwapIo","hoveringState","_hoveringItem","draggingItem","processTargetItem","allRecipes","recipes","waitingForClose","pageSize","currentPage","canPasteSeacrhValue","mdiContentPaste","recipeSelected","performActivate","_activatorObj","activate","_activator","activateOnClose","_waitingForClose","applyFilter","searchText","newSearch","filterShownRecipeIo","blueprintSurface","blueprintCollection","recipesMenuElement","wasScrolled","useOverflowScroll","dropZoneSurfaceElem2","dropZoneOriginElem2","dropZoneOriginElem4","syncRefs","dropZoneSurfaceElem1","dropZoneSurfaceElem3","dropZoneOriginElem1","dropZoneOriginElem3","addItem","preselectRecipe","scaleStyle","buildTransformStyle","handleScale","allTiers","allItems","updateSearch","syncRef","computedItemClass","logo","module","padNumber","num","gameDescription","__BUILD_TIME_STR__","btime","roundingMode","dialog","isProcessing","layoutFactories","layoutFactoriesRevert","layoutSettings","selectedLayoutFactory","_layoutSettings","showSettingsDialog","showHelpDialog","showAboutDialog","showAutoLayoutDialog","showApplyCountDialog","scalePercent","isClipboardSupported","generatedLink","copyIcon","linkId","_generatedLink","linkSession","attempts","sessionId","_blueprintName","blueprintData","buildBlueprintData","showGenerateLinkDialog","splitBlueprint","fullyEncodedBlueprint","targetedBlueprint","textArea","objectUrl","objectAnchor","split","blob","encoder","debouncedUpdateFullyEncodedBlueprint","showShareDialog","loadedBlueprint","showInputFile","inputFile","selectedFile","selectedFiles","reader","fileContents","load","homeReference","drawer","showSummary","showSummaryCompact","_settings","_blueprintModel","loadBlueprint","loadGameId","isGameDataLoading","isLinkLoading","loadGameData","seacrhParams","expanded","details","_title","_error","provideGameData","_sfc_main"],"mappings":"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"}